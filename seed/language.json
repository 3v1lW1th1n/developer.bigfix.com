{
  "types": {
    "year with multiplicity": {
      "name": "year with multiplicity",
      "parent": "year"
    },
    "year": {
      "name": "year"
    },
    "xml dom node": {
      "name": "xml dom node"
    },
    "xml dom document": {
      "name": "xml dom document",
      "parent": "xml dom node"
    },
    "x509 certificate": {
      "name": "x509 certificate"
    },
    "version with multiplicity": {
      "name": "version with multiplicity",
      "parent": "version"
    },
    "version": {
      "name": "version"
    },
    "utf8 string": {
      "name": "utf8 string"
    },
    "undefined": {
      "name": "undefined"
    },
    "unary operator": {
      "name": "unary operator"
    },
    "type": {
      "name": "type"
    },
    "time zone with multiplicity": {
      "name": "time zone with multiplicity",
      "parent": "time zone"
    },
    "time zone": {
      "name": "time zone"
    },
    "time with multiplicity": {
      "name": "time with multiplicity",
      "parent": "time"
    },
    "time range with multiplicity": {
      "name": "time range with multiplicity",
      "parent": "time range"
    },
    "time range": {
      "name": "time range"
    },
    "time of day with time zone with multiplicity": {
      "name": "time of day with time zone with multiplicity",
      "parent": "time of day with time zone"
    },
    "time of day with time zone": {
      "name": "time of day with time zone"
    },
    "time of day with multiplicity": {
      "name": "time of day with multiplicity",
      "parent": "time of day"
    },
    "time of day": {
      "name": "time of day"
    },
    "time interval with multiplicity": {
      "name": "time interval with multiplicity",
      "parent": "time interval"
    },
    "time interval": {
      "name": "time interval"
    },
    "time": {
      "name": "time"
    },
    "substring": {
      "name": "substring",
      "parent": "string"
    },
    "string with multiplicity": {
      "name": "string with multiplicity",
      "parent": "string"
    },
    "string set": {
      "name": "string set"
    },
    "string position": {
      "name": "string position",
      "parent": "integer"
    },
    "string": {
      "name": "string"
    },
    "statistical bin": {
      "name": "statistical bin"
    },
    "statistic range": {
      "name": "statistic range"
    },
    "site version list with multiplicity": {
      "name": "site version list with multiplicity",
      "parent": "site version list"
    },
    "site version list": {
      "name": "site version list"
    },
    "rope": {
      "name": "rope"
    },
    "regular expression match": {
      "name": "regular expression match",
      "parent": "substring"
    },
    "regular expression": {
      "name": "regular expression"
    },
    "rate with multiplicity": {
      "name": "rate with multiplicity",
      "parent": "rate"
    },
    "rate": {
      "name": "rate"
    },
    "property": {
      "name": "property"
    },
    "number of months with multiplicity": {
      "name": "number of months with multiplicity",
      "parent": "number of months"
    },
    "number of months": {
      "name": "number of months"
    },
    "month with multiplicity": {
      "name": "month with multiplicity",
      "parent": "month"
    },
    "month and year with multiplicity": {
      "name": "month and year with multiplicity",
      "parent": "month and year"
    },
    "month and year": {
      "name": "month and year"
    },
    "month": {
      "name": "month"
    },
    "module": {
      "name": "module"
    },
    "mime field": {
      "name": "mime field"
    },
    "linear projection": {
      "name": "linear projection"
    },
    "license": {
      "name": "license"
    },
    "ipv6 address with multiplicity": {
      "name": "ipv6 address with multiplicity",
      "parent": "ipv6 address"
    },
    "ipv6 address": {
      "name": "ipv6 address",
      "parent": "ipv4or6 address"
    },
    "ipv4or6 address with multiplicity": {
      "name": "ipv4or6 address with multiplicity",
      "parent": "ipv4or6 address"
    },
    "ipv4or6 address": {
      "name": "ipv4or6 address"
    },
    "ipv4 address with multiplicity": {
      "name": "ipv4 address with multiplicity",
      "parent": "ipv4 address"
    },
    "ipv4 address": {
      "name": "ipv4 address",
      "parent": "ipv4or6 address"
    },
    "ip version": {
      "name": "ip version"
    },
    "integer with multiplicity": {
      "name": "integer with multiplicity",
      "parent": "integer"
    },
    "integer set": {
      "name": "integer set"
    },
    "integer": {
      "name": "integer"
    },
    "html attribute list": {
      "name": "html attribute list"
    },
    "html": {
      "name": "html"
    },
    "historical fixlet count": {
      "name": "historical fixlet count"
    },
    "historical computer count": {
      "name": "historical computer count"
    },
    "hertz with multiplicity": {
      "name": "hertz with multiplicity",
      "parent": "hertz"
    },
    "hertz": {
      "name": "hertz"
    },
    "format": {
      "name": "format"
    },
    "floating point with multiplicity": {
      "name": "floating point with multiplicity",
      "parent": "floating point"
    },
    "floating point": {
      "name": "floating point"
    },
    "fixlet count pair": {
      "name": "fixlet count pair"
    },
    "exponential projection": {
      "name": "exponential projection"
    },
    "distinguished name component": {
      "name": "distinguished name component",
      "parent": "string"
    },
    "distinguished name": {
      "name": "distinguished name",
      "parent": "string"
    },
    "day of year with multiplicity": {
      "name": "day of year with multiplicity",
      "parent": "day of year"
    },
    "day of year": {
      "name": "day of year"
    },
    "day of week with multiplicity": {
      "name": "day of week with multiplicity",
      "parent": "day of week"
    },
    "day of week": {
      "name": "day of week"
    },
    "day of month with multiplicity": {
      "name": "day of month with multiplicity",
      "parent": "day of month"
    },
    "day of month": {
      "name": "day of month"
    },
    "date with multiplicity": {
      "name": "date with multiplicity",
      "parent": "date"
    },
    "date": {
      "name": "date"
    },
    "cryptography": {
      "name": "cryptography"
    },
    "cast": {
      "name": "cast"
    },
    "boolean": {
      "name": "boolean"
    },
    "bit set": {
      "name": "bit set"
    },
    "binary operator": {
      "name": "binary operator"
    },
    "bes wizard with multiplicity": {
      "name": "bes wizard with multiplicity",
      "parent": "bes wizard"
    },
    "bes wizard variable": {
      "name": "bes wizard variable"
    },
    "bes wizard set": {
      "name": "bes wizard set"
    },
    "bes wizard": {
      "name": "bes wizard"
    },
    "bes wakeonlan status": {
      "name": "bes wakeonlan status"
    },
    "bes user with multiplicity": {
      "name": "bes user with multiplicity",
      "parent": "bes user"
    },
    "bes user set": {
      "name": "bes user set"
    },
    "bes user": {
      "name": "bes user"
    },
    "bes unmanagedasset with multiplicity": {
      "name": "bes unmanagedasset with multiplicity",
      "parent": "bes unmanagedasset"
    },
    "bes unmanagedasset set": {
      "name": "bes unmanagedasset set"
    },
    "bes unmanagedasset field": {
      "name": "bes unmanagedasset field"
    },
    "bes unmanagedasset": {
      "name": "bes unmanagedasset"
    },
    "bes site with multiplicity": {
      "name": "bes site with multiplicity",
      "parent": "bes site"
    },
    "bes site set": {
      "name": "bes site set"
    },
    "bes site": {
      "name": "bes site"
    },
    "bes server": {
      "name": "bes server"
    },
    "bes property with multiplicity": {
      "name": "bes property with multiplicity",
      "parent": "bes property"
    },
    "bes property set": {
      "name": "bes property set"
    },
    "bes property result": {
      "name": "bes property result"
    },
    "bes property": {
      "name": "bes property"
    },
    "bes product": {
      "name": "bes product"
    },
    "bes fixlet with multiplicity": {
      "name": "bes fixlet with multiplicity",
      "parent": "bes fixlet"
    },
    "bes fixlet set": {
      "name": "bes fixlet set"
    },
    "bes fixlet result": {
      "name": "bes fixlet result"
    },
    "bes fixlet field value": {
      "name": "bes fixlet field value"
    },
    "bes fixlet field": {
      "name": "bes fixlet field"
    },
    "bes fixlet action": {
      "name": "bes fixlet action"
    },
    "bes fixlet": {
      "name": "bes fixlet"
    },
    "bes filter with multiplicity": {
      "name": "bes filter with multiplicity",
      "parent": "bes filter"
    },
    "bes filter set": {
      "name": "bes filter set"
    },
    "bes filter": {
      "name": "bes filter"
    },
    "bes domain with multiplicity": {
      "name": "bes domain with multiplicity",
      "parent": "bes domain"
    },
    "bes domain set": {
      "name": "bes domain set"
    },
    "bes domain": {
      "name": "bes domain"
    },
    "bes deployment option": {
      "name": "bes deployment option"
    },
    "bes computer with multiplicity": {
      "name": "bes computer with multiplicity",
      "parent": "bes computer"
    },
    "bes computer set": {
      "name": "bes computer set"
    },
    "bes computer group with multiplicity": {
      "name": "bes computer group with multiplicity",
      "parent": "bes computer group"
    },
    "bes computer group set": {
      "name": "bes computer group set"
    },
    "bes computer group": {
      "name": "bes computer group"
    },
    "bes computer": {
      "name": "bes computer"
    },
    "bes comment": {
      "name": "bes comment"
    },
    "bes client setting": {
      "name": "bes client setting"
    },
    "bes baseline component group": {
      "name": "bes baseline component group"
    },
    "bes baseline component": {
      "name": "bes baseline component"
    },
    "bes activation": {
      "name": "bes activation"
    },
    "bes action with multiplicity": {
      "name": "bes action with multiplicity",
      "parent": "bes action"
    },
    "bes action status": {
      "name": "bes action status"
    },
    "bes action set": {
      "name": "bes action set"
    },
    "bes action result": {
      "name": "bes action result"
    },
    "bes action parameter": {
      "name": "bes action parameter"
    },
    "bes action": {
      "name": "bes action"
    },
    "user": {
      "name": "user"
    },
    "symlink": {
      "name": "symlink"
    },
    "swap": {
      "name": "swap"
    },
    "strverscmp version": {
      "name": "strverscmp version",
      "parent": "version"
    },
    "socket file": {
      "name": "socket file",
      "parent": "filesystem object"
    },
    "smbios value": {
      "name": "smbios value"
    },
    "smbios structure": {
      "name": "smbios structure"
    },
    "smbios": {
      "name": "smbios"
    },
    "site group": {
      "name": "site group"
    },
    "site": {
      "name": "site"
    },
    "short rpm package version record with multiplicity": {
      "name": "short rpm package version record with multiplicity",
      "parent": "short rpm package version record"
    },
    "short rpm package version record": {
      "name": "short rpm package version record"
    },
    "setting": {
      "name": "setting"
    },
    "service": {
      "name": "service"
    },
    "selected server": {
      "name": "selected server"
    },
    "runlevel": {
      "name": "runlevel"
    },
    "rpmdatabase": {
      "name": "rpmdatabase"
    },
    "rpm package version with multiplicity": {
      "name": "rpm package version with multiplicity",
      "parent": "rpm package version"
    },
    "rpm package version record with multiplicity": {
      "name": "rpm package version record with multiplicity",
      "parent": "rpm package version record"
    },
    "rpm package version record": {
      "name": "rpm package version record"
    },
    "rpm package version": {
      "name": "rpm package version"
    },
    "rpm package release with multiplicity": {
      "name": "rpm package release with multiplicity",
      "parent": "rpm package release"
    },
    "rpm package release": {
      "name": "rpm package release"
    },
    "root server": {
      "name": "root server"
    },
    "registration server": {
      "name": "registration server"
    },
    "ram": {
      "name": "ram"
    },
    "processor": {
      "name": "processor"
    },
    "process": {
      "name": "process"
    },
    "primary language": {
      "name": "primary language"
    },
    "power level": {
      "name": "power level"
    },
    "package": {
      "name": "package"
    },
    "operating system": {
      "name": "operating system"
    },
    "network ip interface": {
      "name": "network ip interface",
      "parent": "network interface"
    },
    "network interface": {
      "name": "network interface"
    },
    "network adapter interface": {
      "name": "network adapter interface"
    },
    "network adapter": {
      "name": "network adapter"
    },
    "network": {
      "name": "network"
    },
    "mode_mask": {
      "name": "mode_mask"
    },
    "mode": {
      "name": "mode"
    },
    "language": {
      "name": "language"
    },
    "integer range": {
      "name": "integer range"
    },
    "folder": {
      "name": "folder",
      "parent": "filesystem object"
    },
    "fixlet_header": {
      "name": "fixlet_header"
    },
    "fixlet": {
      "name": "fixlet"
    },
    "filesystem object": {
      "name": "filesystem object"
    },
    "filesystem": {
      "name": "filesystem"
    },
    "file section": {
      "name": "file section"
    },
    "file line": {
      "name": "file line",
      "parent": "string"
    },
    "file content": {
      "name": "file content"
    },
    "file": {
      "name": "file",
      "parent": "filesystem object"
    },
    "fifo file": {
      "name": "fifo file",
      "parent": "filesystem object"
    },
    "execution": {
      "name": "execution"
    },
    "evaluation cycle": {
      "name": "evaluation cycle"
    },
    "environment variable": {
      "name": "environment variable"
    },
    "environment": {
      "name": "environment"
    },
    "download storage folder": {
      "name": "download storage folder",
      "parent": "folder"
    },
    "download server": {
      "name": "download server"
    },
    "dmi voltage_probe": {
      "name": "dmi voltage_probe"
    },
    "dmi temperature_probe": {
      "name": "dmi temperature_probe"
    },
    "dmi system_slots": {
      "name": "dmi system_slots"
    },
    "dmi system_reset": {
      "name": "dmi system_reset"
    },
    "dmi system_power_supply": {
      "name": "dmi system_power_supply"
    },
    "dmi system_power_controls": {
      "name": "dmi system_power_controls"
    },
    "dmi system_information": {
      "name": "dmi system_information"
    },
    "dmi system_enclosure_or_chassis": {
      "name": "dmi system_enclosure_or_chassis"
    },
    "dmi system_configuration_option": {
      "name": "dmi system_configuration_option"
    },
    "dmi system_boot_information": {
      "name": "dmi system_boot_information"
    },
    "dmi processor_information": {
      "name": "dmi processor_information"
    },
    "dmi portable_battery": {
      "name": "dmi portable_battery"
    },
    "dmi port_connector_information": {
      "name": "dmi port_connector_information"
    },
    "dmi physical_memory_array": {
      "name": "dmi physical_memory_array"
    },
    "dmi out_of_band_remote_access": {
      "name": "dmi out_of_band_remote_access"
    },
    "dmi onboard_devices_extended_information": {
      "name": "dmi onboard_devices_extended_information"
    },
    "dmi on_board_devices_information": {
      "name": "dmi on_board_devices_information"
    },
    "dmi oem_strings": {
      "name": "dmi oem_strings"
    },
    "dmi memory_module_information": {
      "name": "dmi memory_module_information"
    },
    "dmi memory_device_mapped_address": {
      "name": "dmi memory_device_mapped_address"
    },
    "dmi memory_device": {
      "name": "dmi memory_device"
    },
    "dmi memory_controller_information": {
      "name": "dmi memory_controller_information"
    },
    "dmi memory_channel": {
      "name": "dmi memory_channel"
    },
    "dmi memory_array_mapped_address": {
      "name": "dmi memory_array_mapped_address"
    },
    "dmi management_device_threshold_data": {
      "name": "dmi management_device_threshold_data"
    },
    "dmi management_device_component": {
      "name": "dmi management_device_component"
    },
    "dmi management_device": {
      "name": "dmi management_device"
    },
    "dmi ipmi_device_information": {
      "name": "dmi ipmi_device_information"
    },
    "dmi inactive": {
      "name": "dmi inactive"
    },
    "dmi hardware_security": {
      "name": "dmi hardware_security"
    },
    "dmi group_associations": {
      "name": "dmi group_associations"
    },
    "dmi end_of_table": {
      "name": "dmi end_of_table"
    },
    "dmi electrical_current_probe": {
      "name": "dmi electrical_current_probe"
    },
    "dmi cooling_device": {
      "name": "dmi cooling_device"
    },
    "dmi cache_information": {
      "name": "dmi cache_information"
    },
    "dmi built_in_pointing_device": {
      "name": "dmi built_in_pointing_device"
    },
    "dmi bios_language_information": {
      "name": "dmi bios_language_information"
    },
    "dmi bios_information": {
      "name": "dmi bios_information"
    },
    "dmi base_board_information": {
      "name": "dmi base_board_information"
    },
    "dmi b64_bit_memory_error_information": {
      "name": "dmi b64_bit_memory_error_information"
    },
    "dmi b32_bit_memory_error_information": {
      "name": "dmi b32_bit_memory_error_information"
    },
    "dmi additional_information": {
      "name": "dmi additional_information"
    },
    "dmi": {
      "name": "dmi"
    },
    "device file": {
      "name": "device file",
      "parent": "filesystem object"
    },
    "current relay": {
      "name": "current relay"
    },
    "client_cryptography": {
      "name": "client_cryptography"
    },
    "client": {
      "name": "client",
      "parent": "application"
    },
    "capability": {
      "name": "capability"
    },
    "bios": {
      "name": "bios"
    },
    "application usage summary instance": {
      "name": "application usage summary instance"
    },
    "application usage summary": {
      "name": "application usage summary"
    },
    "application": {
      "name": "application",
      "parent": "file"
    },
    "analysis": {
      "name": "analysis"
    },
    "administrative rights": {
      "name": "administrative rights"
    },
    "action lock state": {
      "name": "action lock state"
    },
    "action": {
      "name": "action"
    },
    "volume": {
      "name": "volume",
      "parent": "folder"
    },
    "user attribute": {
      "name": "user attribute"
    },
    "usb": {
      "name": "usb"
    },
    "stage": {
      "name": "stage"
    },
    "scsidevice": {
      "name": "scsidevice"
    },
    "scsibus": {
      "name": "scsibus"
    },
    "resfork": {
      "name": "resfork"
    },
    "registryroot": {
      "name": "registryroot"
    },
    "registrynode": {
      "name": "registrynode"
    },
    "preference": {
      "name": "preference"
    },
    "osxvalue": {
      "name": "osxvalue"
    },
    "nothing": {
      "name": "nothing"
    },
    "network link interface": {
      "name": "network link interface",
      "parent": "network interface"
    },
    "logged on user": {
      "name": "logged on user"
    },
    "file type": {
      "name": "file type"
    },
    "file signature": {
      "name": "file signature"
    },
    "enableable_file": {
      "name": "enableable_file",
      "parent": "file"
    },
    "dummy type": {
      "name": "dummy type"
    },
    "dummy": {
      "name": "dummy"
    },
    "domain": {
      "name": "domain"
    },
    "dictionaryentry": {
      "name": "dictionaryentry"
    },
    "dictionary": {
      "name": "dictionary"
    },
    "datafork": {
      "name": "datafork"
    },
    "country": {
      "name": "country"
    },
    "computer": {
      "name": "computer"
    },
    "component": {
      "name": "component"
    },
    "client process owner": {
      "name": "client process owner"
    },
    "bundle": {
      "name": "bundle",
      "parent": "product"
    },
    "array": {
      "name": "array"
    },
    "active directory server": {
      "name": "active directory server"
    },
    "active directory local computer": {
      "name": "active directory local computer"
    },
    "software_depot": {
      "name": "software_depot"
    },
    "product": {
      "name": "product"
    },
    "volume group": {
      "name": "volume group"
    },
    "object_repository": {
      "name": "object_repository"
    },
    "logical volume manager": {
      "name": "logical volume manager"
    },
    "logical volume": {
      "name": "logical volume"
    },
    "fileset": {
      "name": "fileset"
    },
    "zone network interface": {
      "name": "zone network interface"
    },
    "zone": {
      "name": "zone"
    },
    "uuid with multiplicity": {
      "name": "uuid with multiplicity",
      "parent": "uuid"
    },
    "uuid": {
      "name": "uuid"
    },
    "pkginfo": {
      "name": "pkginfo"
    },
    "pkgdb": {
      "name": "pkgdb"
    },
    "patch": {
      "name": "patch"
    },
    "wmi select": {
      "name": "wmi select"
    },
    "wmi object": {
      "name": "wmi object"
    },
    "wmi": {
      "name": "wmi"
    },
    "weekly task trigger": {
      "name": "weekly task trigger",
      "parent": "task trigger"
    },
    "time task trigger": {
      "name": "time task trigger",
      "parent": "task trigger"
    },
    "task trigger type": {
      "name": "task trigger type"
    },
    "task trigger": {
      "name": "task trigger"
    },
    "task settings": {
      "name": "task settings"
    },
    "task repetition pattern": {
      "name": "task repetition pattern"
    },
    "task registration info": {
      "name": "task registration info"
    },
    "task principal": {
      "name": "task principal"
    },
    "task network settings": {
      "name": "task network settings"
    },
    "task named value pair": {
      "name": "task named value pair"
    },
    "task idle settings": {
      "name": "task idle settings"
    },
    "task folder": {
      "name": "task folder"
    },
    "task definition": {
      "name": "task definition"
    },
    "task action type": {
      "name": "task action type"
    },
    "task action": {
      "name": "task action"
    },
    "system power interval": {
      "name": "system power interval"
    },
    "system access control list": {
      "name": "system access control list",
      "parent": "access control list"
    },
    "site profile variable": {
      "name": "site profile variable"
    },
    "site profile": {
      "name": "site profile"
    },
    "show message task action": {
      "name": "show message task action",
      "parent": "task action"
    },
    "session state change task trigger": {
      "name": "session state change task trigger",
      "parent": "task trigger"
    },
    "security identifier": {
      "name": "security identifier"
    },
    "security descriptor": {
      "name": "security descriptor"
    },
    "security database": {
      "name": "security database"
    },
    "security account": {
      "name": "security account"
    },
    "scheduled task": {
      "name": "scheduled task"
    },
    "running task": {
      "name": "running task"
    },
    "registry key value type": {
      "name": "registry key value type"
    },
    "registry key value": {
      "name": "registry key value"
    },
    "registry key": {
      "name": "registry key"
    },
    "registry": {
      "name": "registry"
    },
    "registration task trigger": {
      "name": "registration task trigger",
      "parent": "task trigger"
    },
    "priority class": {
      "name": "priority class"
    },
    "power state": {
      "name": "power state"
    },
    "power history": {
      "name": "power history"
    },
    "port mapping": {
      "name": "port mapping"
    },
    "palm device": {
      "name": "palm device"
    },
    "palm application": {
      "name": "palm application"
    },
    "operating system suite mask": {
      "name": "operating system suite mask",
      "parent": "bit set"
    },
    "operating system product type": {
      "name": "operating system product type"
    },
    "network share": {
      "name": "network share"
    },
    "network address list": {
      "name": "network address list"
    },
    "monthlydow task trigger": {
      "name": "monthlydow task trigger",
      "parent": "task trigger"
    },
    "monthly task trigger": {
      "name": "monthly task trigger",
      "parent": "task trigger"
    },
    "monitor power interval": {
      "name": "monitor power interval"
    },
    "metabase value": {
      "name": "metabase value"
    },
    "metabase user type": {
      "name": "metabase user type"
    },
    "metabase type": {
      "name": "metabase type"
    },
    "metabase key": {
      "name": "metabase key"
    },
    "metabase identifier": {
      "name": "metabase identifier"
    },
    "metabase": {
      "name": "metabase"
    },
    "media type": {
      "name": "media type"
    },
    "logon task trigger": {
      "name": "logon task trigger",
      "parent": "task trigger"
    },
    "local user": {
      "name": "local user",
      "parent": "security account"
    },
    "local mssql database": {
      "name": "local mssql database"
    },
    "local group member": {
      "name": "local group member",
      "parent": "security account"
    },
    "local group": {
      "name": "local group",
      "parent": "security account"
    },
    "internet protocol": {
      "name": "internet protocol"
    },
    "internet connection firewall": {
      "name": "internet connection firewall"
    },
    "idle task trigger": {
      "name": "idle task trigger",
      "parent": "task trigger"
    },
    "hotsync user": {
      "name": "hotsync user"
    },
    "hotsync manager": {
      "name": "hotsync manager"
    },
    "firewall service type": {
      "name": "firewall service type"
    },
    "firewall service restriction": {
      "name": "firewall service restriction"
    },
    "firewall service": {
      "name": "firewall service"
    },
    "firewall scope": {
      "name": "firewall scope"
    },
    "firewall rule": {
      "name": "firewall rule"
    },
    "firewall remote admin settings": {
      "name": "firewall remote admin settings"
    },
    "firewall profile type": {
      "name": "firewall profile type"
    },
    "firewall profile": {
      "name": "firewall profile"
    },
    "firewall policy": {
      "name": "firewall policy"
    },
    "firewall open port": {
      "name": "firewall open port"
    },
    "firewall local policy modify state": {
      "name": "firewall local policy modify state"
    },
    "firewall icmp settings": {
      "name": "firewall icmp settings"
    },
    "firewall authorized application": {
      "name": "firewall authorized application"
    },
    "firewall action": {
      "name": "firewall action"
    },
    "firewall": {
      "name": "firewall"
    },
    "file version block": {
      "name": "file version block"
    },
    "file shortcut": {
      "name": "file shortcut"
    },
    "exec task action": {
      "name": "exec task action",
      "parent": "task action"
    },
    "event task trigger": {
      "name": "event task trigger",
      "parent": "task trigger"
    },
    "event log record": {
      "name": "event log record"
    },
    "event log event type": {
      "name": "event log event type"
    },
    "event log": {
      "name": "event log"
    },
    "email task action": {
      "name": "email task action",
      "parent": "task action"
    },
    "drive": {
      "name": "drive"
    },
    "discretionary access control list": {
      "name": "discretionary access control list",
      "parent": "access control list"
    },
    "daily task trigger": {
      "name": "daily task trigger",
      "parent": "task trigger"
    },
    "connection status": {
      "name": "connection status"
    },
    "connection": {
      "name": "connection"
    },
    "com handler task action": {
      "name": "com handler task action",
      "parent": "task action"
    },
    "boot task trigger": {
      "name": "boot task trigger",
      "parent": "task trigger"
    },
    "audit policy subcategory": {
      "name": "audit policy subcategory"
    },
    "audit policy information": {
      "name": "audit policy information"
    },
    "audit policy category": {
      "name": "audit policy category"
    },
    "audit policy": {
      "name": "audit policy"
    },
    "activity history": {
      "name": "activity history"
    },
    "active device": {
      "name": "active device"
    },
    "access control list": {
      "name": "access control list"
    },
    "access control entry": {
      "name": "access control entry"
    },
    "debianpkg version": {
      "name": "debianpkg version"
    },
    "debianpkg verfile": {
      "name": "debianpkg verfile"
    },
    "debianpkg reverse dependencies": {
      "name": "debianpkg reverse dependencies"
    },
    "debianpkg dependency": {
      "name": "debianpkg dependency"
    },
    "debianpackagecache": {
      "name": "debianpackagecache"
    },
    "debian versioned package": {
      "name": "debian versioned package"
    },
    "debian package version with multiplicity": {
      "name": "debian package version with multiplicity",
      "parent": "debian package version"
    },
    "debian package version revision with multiplicity": {
      "name": "debian package version revision with multiplicity",
      "parent": "debian package version revision"
    },
    "debian package version revision": {
      "name": "debian package version revision"
    },
    "debian package version epoch with multiplicity": {
      "name": "debian package version epoch with multiplicity",
      "parent": "debian package version epoch"
    },
    "debian package version epoch": {
      "name": "debian package version epoch"
    },
    "debian package version": {
      "name": "debian package version"
    },
    "debian package upstream version with multiplicity": {
      "name": "debian package upstream version with multiplicity",
      "parent": "debian package upstream version"
    },
    "debian package upstream version": {
      "name": "debian package upstream version"
    },
    "debian base package": {
      "name": "debian base package"
    },
    "active directory local user": {
      "name": "active directory local user"
    },
    "active directory group": {
      "name": "active directory group"
    },
    "bes site file with multiplicity": {
      "name": "bes site file with multiplicity",
      "parent": "bes site file"
    },
    "bes site file set": {
      "name": "bes site file set"
    },
    "bes site file": {
      "name": "bes site file"
    },
    "bes role with multiplicity": {
      "name": "bes role with multiplicity",
      "parent": "bes role"
    },
    "bes role set": {
      "name": "bes role set"
    },
    "bes role": {
      "name": "bes role"
    },
    "bes ldap directory with multiplicity": {
      "name": "bes ldap directory with multiplicity",
      "parent": "bes ldap directory"
    },
    "bes ldap directory set": {
      "name": "bes ldap directory set"
    },
    "bes ldap directory": {
      "name": "bes ldap directory"
    },
    "ipv4 routing table": {
      "name": "ipv4 routing table"
    },
    "ipv4 route": {
      "name": "ipv4 route"
    },
    "grub module": {
      "name": "grub module"
    },
    "grub kernel": {
      "name": "grub kernel"
    },
    "grub image choice": {
      "name": "grub image choice"
    },
    "grub file location": {
      "name": "grub file location"
    },
    "grub device": {
      "name": "grub device"
    },
    "grub config file": {
      "name": "grub config file"
    },
    "grub color scheme": {
      "name": "grub color scheme"
    },
    "grub color pair": {
      "name": "grub color pair"
    },
    "grub color": {
      "name": "grub color"
    },
    "grub bootable image": {
      "name": "grub bootable image"
    },
    "grub block list": {
      "name": "grub block list"
    },
    "cpupackage": {
      "name": "cpupackage"
    },
    "technology level with multiplicity": {
      "name": "technology level with multiplicity",
      "parent": "technology level"
    },
    "technology level": {
      "name": "technology level"
    },
    "service pack with multiplicity": {
      "name": "service pack with multiplicity",
      "parent": "service pack"
    },
    "service pack": {
      "name": "service pack"
    },
    "object repository": {
      "name": "object repository"
    },
    "fileset version requirement": {
      "name": "fileset version requirement"
    },
    "fileset version record with multiplicity": {
      "name": "fileset version record with multiplicity",
      "parent": "fileset version record"
    },
    "fileset version record": {
      "name": "fileset version record"
    },
    "fileset part": {
      "name": "fileset part"
    },
    "apar": {
      "name": "apar"
    },
    "smf value": {
      "name": "smf value"
    },
    "smf time": {
      "name": "smf time"
    },
    "smf snapshot part": {
      "name": "smf snapshot part"
    },
    "smf snapshot": {
      "name": "smf snapshot"
    },
    "smf service": {
      "name": "smf service"
    },
    "smf property group": {
      "name": "smf property group"
    },
    "smf property": {
      "name": "smf property"
    },
    "smf instance": {
      "name": "smf instance"
    },
    "smf fmri": {
      "name": "smf fmri"
    },
    "smf": {
      "name": "smf"
    },
    "json value": {
      "name": "json value"
    },
    "json key": {
      "name": "json key"
    },
    "bes ldap directory server": {
      "name": "bes ldap directory server"
    },
    "sqlite table": {
      "name": "sqlite table"
    },
    "sqlite statement": {
      "name": "sqlite statement"
    },
    "sqlite row": {
      "name": "sqlite row"
    },
    "sqlite database": {
      "name": "sqlite database"
    },
    "sqlite column type": {
      "name": "sqlite column type"
    },
    "sqlite column": {
      "name": "sqlite column"
    },
    "wifi": {
      "name": "wifi"
    },
    "tcp state": {
      "name": "tcp state"
    },
    "socket": {
      "name": "socket"
    },
    "winrt package user information": {
      "name": "winrt package user information"
    },
    "winrt package id": {
      "name": "winrt package id"
    },
    "winrt package": {
      "name": "winrt package"
    },
    "winrt enumeration": {
      "name": "winrt enumeration"
    },
    "routing table": {
      "name": "routing table"
    },
    "route": {
      "name": "route"
    },
    "manual group": {
      "name": "manual group"
    },
    "rpc_program": {
      "name": "rpc_program"
    },
    "predefined_device": {
      "name": "predefined_device"
    },
    "predefined_attribute": {
      "name": "predefined_attribute"
    },
    "odm": {
      "name": "odm"
    },
    "network_option": {
      "name": "network_option"
    },
    "message_catalog_set": {
      "name": "message_catalog_set"
    },
    "message_catalog": {
      "name": "message_catalog"
    },
    "kernel_extension": {
      "name": "kernel_extension"
    },
    "customized_device": {
      "name": "customized_device"
    },
    "customized_attribute": {
      "name": "customized_attribute"
    },
    "version with time": {
      "name": "version with time"
    },
    "ips version dependency": {
      "name": "ips version dependency"
    },
    "ips setting pieces": {
      "name": "ips setting pieces"
    },
    "ips repo": {
      "name": "ips repo"
    },
    "ips partial matching fmri": {
      "name": "ips partial matching fmri"
    },
    "ips package": {
      "name": "ips package"
    },
    "ips image": {
      "name": "ips image"
    },
    "ips fmri": {
      "name": "ips fmri"
    },
    "ips component version": {
      "name": "ips component version"
    },
    "ips build version": {
      "name": "ips build version"
    },
    "ips branch version": {
      "name": "ips branch version"
    },
    "ips authority info": {
      "name": "ips authority info"
    }
  },
  "properties": {
    "zoned time_of_day <string>": {
      "key": "zoned time_of_day <string>",
      "type": "property",
      "resultType": "time of day with time zone",
      "singularPhrase": "zoned time_of_day",
      "pluralPhrase": "zoned times_of_day",
      "indexType": "string"
    },
    "year": {
      "key": "year",
      "type": "property",
      "resultType": "number of months",
      "singularPhrase": "year",
      "pluralPhrase": "years"
    },
    "year <string>": {
      "key": "year <string>",
      "type": "property",
      "resultType": "year",
      "singularPhrase": "year",
      "pluralPhrase": "years",
      "indexType": "string"
    },
    "year <integer>": {
      "key": "year <integer>",
      "type": "property",
      "resultType": "year",
      "singularPhrase": "year",
      "pluralPhrase": "years",
      "indexType": "integer"
    },
    "windows display time <string>": {
      "key": "windows display time <string>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "windows display time",
      "pluralPhrase": "windows display times",
      "indexType": "string"
    },
    "week": {
      "key": "week",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "week",
      "pluralPhrase": "weeks"
    },
    "wednesday": {
      "key": "wednesday",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "wednesday",
      "pluralPhrase": "wednesdays"
    },
    "version <string>": {
      "key": "version <string>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "indexType": "string"
    },
    "universal time zone": {
      "key": "universal time zone",
      "type": "property",
      "resultType": "time zone",
      "singularPhrase": "universal time zone",
      "pluralPhrase": "universal time zones"
    },
    "universal time <string>": {
      "key": "universal time <string>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "universal time",
      "pluralPhrase": "universal times",
      "indexType": "string"
    },
    "unary operator": {
      "key": "unary operator",
      "type": "property",
      "resultType": "unary operator",
      "singularPhrase": "unary operator",
      "pluralPhrase": "unary operators"
    },
    "unary operator returning <type>": {
      "key": "unary operator returning <type>",
      "type": "property",
      "resultType": "unary operator",
      "singularPhrase": "unary operator returning",
      "pluralPhrase": "unary operators returning",
      "indexType": "type"
    },
    "unary operator <string>": {
      "key": "unary operator <string>",
      "type": "property",
      "resultType": "unary operator",
      "singularPhrase": "unary operator",
      "pluralPhrase": "unary operators",
      "indexType": "string"
    },
    "type": {
      "key": "type",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "type",
      "pluralPhrase": "types"
    },
    "type <string>": {
      "key": "type <string>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "indexType": "string"
    },
    "tuesday": {
      "key": "tuesday",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "tuesday",
      "pluralPhrase": "tuesdays"
    },
    "true": {
      "key": "true",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "true",
      "pluralPhrase": "trues"
    },
    "top level bes action": {
      "key": "top level bes action",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "top level bes action",
      "pluralPhrase": "top level bes actions"
    },
    "top level bes action set": {
      "key": "top level bes action set",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "top level bes action set",
      "pluralPhrase": "top level bes action sets"
    },
    "time_of_day <string>": {
      "key": "time_of_day <string>",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "time_of_day",
      "pluralPhrase": "times_of_day",
      "indexType": "string"
    },
    "time zone <string>": {
      "key": "time zone <string>",
      "type": "property",
      "resultType": "time zone",
      "singularPhrase": "time zone",
      "pluralPhrase": "time zones",
      "indexType": "string"
    },
    "time interval <string>": {
      "key": "time interval <string>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "time interval",
      "pluralPhrase": "time intervals",
      "indexType": "string"
    },
    "time <string>": {
      "key": "time <string>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time",
      "pluralPhrase": "times",
      "indexType": "string"
    },
    "thursday": {
      "key": "thursday",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "thursday",
      "pluralPhrase": "thursdays"
    },
    "sunday": {
      "key": "sunday",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "sunday",
      "pluralPhrase": "sundays"
    },
    "subscribed <( bes site, bes computer )>": {
      "key": "subscribed <( bes site, bes computer )>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "subscribed",
      "pluralPhrase": "subscribeds",
      "indexType": "( bes site, bes computer )"
    },
    "subscribed <( bes computer, bes site )>": {
      "key": "subscribed <( bes computer, bes site )>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "subscribed",
      "pluralPhrase": "subscribeds",
      "indexType": "( bes computer, bes site )"
    },
    "string <string>": {
      "key": "string <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "string",
      "pluralPhrase": "strings",
      "indexType": "string"
    },
    "site version list <string>": {
      "key": "site version list <string>",
      "type": "property",
      "resultType": "site version list",
      "singularPhrase": "site version list",
      "pluralPhrase": "site version lists",
      "indexType": "string"
    },
    "shared variable <( string, string )>": {
      "key": "shared variable <( string, string )>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "shared variable",
      "pluralPhrase": "shared variables",
      "indexType": "( string, string )"
    },
    "september": {
      "key": "september",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "september",
      "pluralPhrase": "septembers"
    },
    "september <integer>": {
      "key": "september <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "september",
      "pluralPhrase": "septembers",
      "indexType": "integer"
    },
    "second": {
      "key": "second",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "second",
      "pluralPhrase": "seconds"
    },
    "saturday": {
      "key": "saturday",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "saturday",
      "pluralPhrase": "saturdays"
    },
    "rope <string>": {
      "key": "rope <string>",
      "type": "property",
      "resultType": "rope",
      "singularPhrase": "rope",
      "pluralPhrase": "ropes",
      "indexType": "string"
    },
    "result <( bes property, bes computer )>": {
      "key": "result <( bes property, bes computer )>",
      "type": "property",
      "resultType": "bes property result",
      "singularPhrase": "result",
      "pluralPhrase": "results",
      "indexType": "( bes property, bes computer )"
    },
    "result <( bes fixlet, bes computer )>": {
      "key": "result <( bes fixlet, bes computer )>",
      "type": "property",
      "resultType": "bes fixlet result",
      "singularPhrase": "result",
      "pluralPhrase": "results",
      "indexType": "( bes fixlet, bes computer )"
    },
    "result <( bes computer, bes property )>": {
      "key": "result <( bes computer, bes property )>",
      "type": "property",
      "resultType": "bes property result",
      "singularPhrase": "result",
      "pluralPhrase": "results",
      "indexType": "( bes computer, bes property )"
    },
    "result <( bes computer, bes fixlet )>": {
      "key": "result <( bes computer, bes fixlet )>",
      "type": "property",
      "resultType": "bes fixlet result",
      "singularPhrase": "result",
      "pluralPhrase": "results",
      "indexType": "( bes computer, bes fixlet )"
    },
    "result <( bes computer, bes action )>": {
      "key": "result <( bes computer, bes action )>",
      "type": "property",
      "resultType": "bes action result",
      "singularPhrase": "result",
      "pluralPhrase": "results",
      "indexType": "( bes computer, bes action )"
    },
    "result <( bes action, bes computer )>": {
      "key": "result <( bes action, bes computer )>",
      "type": "property",
      "resultType": "bes action result",
      "singularPhrase": "result",
      "pluralPhrase": "results",
      "indexType": "( bes action, bes computer )"
    },
    "relevant <( bes fixlet, bes computer )>": {
      "key": "relevant <( bes fixlet, bes computer )>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "relevant",
      "pluralPhrase": "relevants",
      "indexType": "( bes fixlet, bes computer )"
    },
    "relevant <( bes computer, bes fixlet )>": {
      "key": "relevant <( bes computer, bes fixlet )>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "relevant",
      "pluralPhrase": "relevants",
      "indexType": "( bes computer, bes fixlet )"
    },
    "regular expression <string>": {
      "key": "regular expression <string>",
      "type": "property",
      "resultType": "regular expression",
      "singularPhrase": "regular expression",
      "pluralPhrase": "regular expressions",
      "indexType": "string"
    },
    "regex <string>": {
      "key": "regex <string>",
      "type": "property",
      "resultType": "regular expression",
      "singularPhrase": "regex",
      "pluralPhrase": "regexes",
      "indexType": "string"
    },
    "property": {
      "key": "property",
      "type": "property",
      "resultType": "property",
      "singularPhrase": "property",
      "pluralPhrase": "properties"
    },
    "property returning <type>": {
      "key": "property returning <type>",
      "type": "property",
      "resultType": "property",
      "singularPhrase": "property returning",
      "pluralPhrase": "properties returning",
      "indexType": "type"
    },
    "property <string>": {
      "key": "property <string>",
      "type": "property",
      "resultType": "property",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "indexType": "string"
    },
    "private variable <( string, string )>": {
      "key": "private variable <( string, string )>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "private variable",
      "pluralPhrase": "private variables",
      "indexType": "( string, string )"
    },
    "plain bes fixlet": {
      "key": "plain bes fixlet",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "plain bes fixlet",
      "pluralPhrase": "plain bes fixlets"
    },
    "plain bes fixlet set": {
      "key": "plain bes fixlet set",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "plain bes fixlet set",
      "pluralPhrase": "plain bes fixlet sets"
    },
    "pending license update": {
      "key": "pending license update",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "pending license update",
      "pluralPhrase": "pending license updates"
    },
    "october": {
      "key": "october",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "october",
      "pluralPhrase": "octobers"
    },
    "october <integer>": {
      "key": "october <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "october",
      "pluralPhrase": "octobers",
      "indexType": "integer"
    },
    "null": {
      "key": "null",
      "type": "property",
      "resultType": "undefined",
      "singularPhrase": "null",
      "pluralPhrase": "nothing"
    },
    "now": {
      "key": "now",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "now",
      "pluralPhrase": "nows"
    },
    "november": {
      "key": "november",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "november",
      "pluralPhrase": "novembers"
    },
    "november <integer>": {
      "key": "november <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "november",
      "pluralPhrase": "novembers",
      "indexType": "integer"
    },
    "noon": {
      "key": "noon",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "noon",
      "pluralPhrase": "noons"
    },
    "nil": {
      "key": "nil",
      "type": "property",
      "resultType": "undefined",
      "singularPhrase": "nil",
      "pluralPhrase": "nothings"
    },
    "month": {
      "key": "month",
      "type": "property",
      "resultType": "number of months",
      "singularPhrase": "month",
      "pluralPhrase": "months"
    },
    "month <string>": {
      "key": "month <string>",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "month",
      "pluralPhrase": "months",
      "indexType": "string"
    },
    "month <integer>": {
      "key": "month <integer>",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "month",
      "pluralPhrase": "months",
      "indexType": "integer"
    },
    "monday": {
      "key": "monday",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "monday",
      "pluralPhrase": "mondays"
    },
    "module": {
      "key": "module",
      "type": "property",
      "resultType": "module",
      "singularPhrase": "module",
      "pluralPhrase": "modules"
    },
    "module <string>": {
      "key": "module <string>",
      "type": "property",
      "resultType": "module",
      "singularPhrase": "module",
      "pluralPhrase": "modules",
      "indexType": "string"
    },
    "minute": {
      "key": "minute",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "minute",
      "pluralPhrase": "minutes"
    },
    "millisecond": {
      "key": "millisecond",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "millisecond",
      "pluralPhrase": "milliseconds"
    },
    "midnight": {
      "key": "midnight",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "midnight",
      "pluralPhrase": "midnights"
    },
    "microsecond": {
      "key": "microsecond",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "microsecond",
      "pluralPhrase": "microseconds"
    },
    "mhz": {
      "key": "mhz",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "mhz",
      "pluralPhrase": "mhzs"
    },
    "may": {
      "key": "may",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "may",
      "pluralPhrase": "mays"
    },
    "may <integer>": {
      "key": "may <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "may",
      "pluralPhrase": "mays",
      "indexType": "integer"
    },
    "march": {
      "key": "march",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "march",
      "pluralPhrase": "marchs"
    },
    "march <integer>": {
      "key": "march <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "march",
      "pluralPhrase": "marchs",
      "indexType": "integer"
    },
    "local time zone": {
      "key": "local time zone",
      "type": "property",
      "resultType": "time zone",
      "singularPhrase": "local time zone",
      "pluralPhrase": "local time zones"
    },
    "local time <string>": {
      "key": "local time <string>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "local time",
      "pluralPhrase": "local times",
      "indexType": "string"
    },
    "least time interval": {
      "key": "least time interval",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "least time interval",
      "pluralPhrase": "least time intervals"
    },
    "least integer": {
      "key": "least integer",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "least integer",
      "pluralPhrase": "least integers"
    },
    "least hz": {
      "key": "least hz",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "least hz",
      "pluralPhrase": "least hzs"
    },
    "khz": {
      "key": "khz",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "khz",
      "pluralPhrase": "khzs"
    },
    "june": {
      "key": "june",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "june",
      "pluralPhrase": "junes"
    },
    "june <integer>": {
      "key": "june <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "june",
      "pluralPhrase": "junes",
      "indexType": "integer"
    },
    "july": {
      "key": "july",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "july",
      "pluralPhrase": "julys"
    },
    "july <integer>": {
      "key": "july <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "july",
      "pluralPhrase": "julys",
      "indexType": "integer"
    },
    "january": {
      "key": "january",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "january",
      "pluralPhrase": "januarys"
    },
    "january <integer>": {
      "key": "january <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "january",
      "pluralPhrase": "januarys",
      "indexType": "integer"
    },
    "ipv6": {
      "key": "ipv6",
      "type": "property",
      "resultType": "ip version",
      "singularPhrase": "ipv6",
      "pluralPhrase": "ipv6s"
    },
    "ipv6 address <string>": {
      "key": "ipv6 address <string>",
      "type": "property",
      "resultType": "ipv6 address",
      "singularPhrase": "ipv6 address",
      "pluralPhrase": "ipv6 addresses",
      "indexType": "string"
    },
    "ipv4or6 address <string>": {
      "key": "ipv4or6 address <string>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "ipv4or6 address",
      "pluralPhrase": "ipv4or6 addresses",
      "indexType": "string"
    },
    "ipv4": {
      "key": "ipv4",
      "type": "property",
      "resultType": "ip version",
      "singularPhrase": "ipv4",
      "pluralPhrase": "ipv4s"
    },
    "ipv4 address <string>": {
      "key": "ipv4 address <string>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "ipv4 address",
      "pluralPhrase": "ipv4 addresses",
      "indexType": "string"
    },
    "ip version <integer>": {
      "key": "ip version <integer>",
      "type": "property",
      "resultType": "ip version",
      "singularPhrase": "ip version",
      "pluralPhrase": "ip versions",
      "indexType": "integer"
    },
    "integer to <integer>": {
      "key": "integer to <integer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer to",
      "pluralPhrase": "integers to",
      "indexType": "integer"
    },
    "integer in <( integer, integer, integer )>": {
      "key": "integer in <( integer, integer, integer )>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer in",
      "pluralPhrase": "integers in",
      "indexType": "( integer, integer, integer )"
    },
    "integer in <( integer, integer )>": {
      "key": "integer in <( integer, integer )>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer in",
      "pluralPhrase": "integers in",
      "indexType": "( integer, integer )"
    },
    "integer <string>": {
      "key": "integer <string>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer",
      "pluralPhrase": "integers",
      "indexType": "string"
    },
    "integer <integer>": {
      "key": "integer <integer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer",
      "pluralPhrase": "integers",
      "indexType": "integer"
    },
    "in web reports context": {
      "key": "in web reports context",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "in web reports context",
      "pluralPhrase": "in web reports contexts"
    },
    "in console context": {
      "key": "in console context",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "in console context",
      "pluralPhrase": "in console contexts"
    },
    "hz": {
      "key": "hz",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "hz",
      "pluralPhrase": "hzs"
    },
    "html tag <( string, string )>": {
      "key": "html tag <( string, string )>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html tag",
      "pluralPhrase": "html tags",
      "indexType": "( string, string )"
    },
    "html tag <( string, html attribute list, string )>": {
      "key": "html tag <( string, html attribute list, string )>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html tag",
      "pluralPhrase": "html tags",
      "indexType": "( string, html attribute list, string )"
    },
    "html tag <( string, html attribute list, html )>": {
      "key": "html tag <( string, html attribute list, html )>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html tag",
      "pluralPhrase": "html tags",
      "indexType": "( string, html attribute list, html )"
    },
    "html tag <( string, html attribute list )>": {
      "key": "html tag <( string, html attribute list )>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html tag",
      "pluralPhrase": "html tags",
      "indexType": "( string, html attribute list )"
    },
    "html tag <( string, html )>": {
      "key": "html tag <( string, html )>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html tag",
      "pluralPhrase": "html tags",
      "indexType": "( string, html )"
    },
    "html <string>": {
      "key": "html <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html",
      "pluralPhrase": "htmls",
      "indexType": "string"
    },
    "hr": {
      "key": "hr",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "hr",
      "pluralPhrase": "hrs"
    },
    "hr <string>": {
      "key": "hr <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "hr",
      "pluralPhrase": "hrs",
      "indexType": "string"
    },
    "hour": {
      "key": "hour",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "hour",
      "pluralPhrase": "hours"
    },
    "hidden bes action": {
      "key": "hidden bes action",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "hidden bes action",
      "pluralPhrase": "hidden bes actions"
    },
    "hidden bes action set": {
      "key": "hidden bes action set",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "hidden bes action set",
      "pluralPhrase": "hidden bes action sets"
    },
    "hexadecimal string <string>": {
      "key": "hexadecimal string <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "hexadecimal string",
      "pluralPhrase": "hexadecimal strings",
      "indexType": "string"
    },
    "hexadecimal integer <string>": {
      "key": "hexadecimal integer <string>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "hexadecimal integer",
      "pluralPhrase": "hexadecimal integers",
      "indexType": "string"
    },
    "greatest time interval": {
      "key": "greatest time interval",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "greatest time interval",
      "pluralPhrase": "greatest time intervals"
    },
    "greatest integer": {
      "key": "greatest integer",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "greatest integer",
      "pluralPhrase": "greatest integers"
    },
    "greatest hz": {
      "key": "greatest hz",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "greatest hz",
      "pluralPhrase": "greatest hzs"
    },
    "ghz": {
      "key": "ghz",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "ghz",
      "pluralPhrase": "ghzs"
    },
    "friday": {
      "key": "friday",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "friday",
      "pluralPhrase": "fridays"
    },
    "format <string>": {
      "key": "format <string>",
      "type": "property",
      "resultType": "format",
      "singularPhrase": "format",
      "pluralPhrase": "formats",
      "indexType": "string"
    },
    "floating point <string>": {
      "key": "floating point <string>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "floating point",
      "pluralPhrase": "floating points",
      "indexType": "string"
    },
    "floating point <floating point>": {
      "key": "floating point <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "floating point",
      "pluralPhrase": "floating points",
      "indexType": "floating point"
    },
    "february": {
      "key": "february",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "february",
      "pluralPhrase": "februarys"
    },
    "february <integer>": {
      "key": "february <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "february",
      "pluralPhrase": "februarys",
      "indexType": "integer"
    },
    "false": {
      "key": "false",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "false",
      "pluralPhrase": "falses"
    },
    "error <string>": {
      "key": "error <string>",
      "type": "property",
      "resultType": "undefined",
      "singularPhrase": "error",
      "pluralPhrase": "errors",
      "indexType": "string"
    },
    "distinguished name <string>": {
      "key": "distinguished name <string>",
      "type": "property",
      "resultType": "distinguished name",
      "singularPhrase": "distinguished name",
      "pluralPhrase": "distinguished names",
      "indexType": "string"
    },
    "december": {
      "key": "december",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "december",
      "pluralPhrase": "decembers"
    },
    "december <integer>": {
      "key": "december <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "december",
      "pluralPhrase": "decembers",
      "indexType": "integer"
    },
    "day_of_week <string>": {
      "key": "day_of_week <string>",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "day_of_week",
      "pluralPhrase": "days_of_week",
      "indexType": "string"
    },
    "day_of_month <string>": {
      "key": "day_of_month <string>",
      "type": "property",
      "resultType": "day of month",
      "singularPhrase": "day_of_month",
      "pluralPhrase": "days_of_month",
      "indexType": "string"
    },
    "day_of_month <integer>": {
      "key": "day_of_month <integer>",
      "type": "property",
      "resultType": "day of month",
      "singularPhrase": "day_of_month",
      "pluralPhrase": "days_of_month",
      "indexType": "integer"
    },
    "day": {
      "key": "day",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "day",
      "pluralPhrase": "days"
    },
    "date <string>": {
      "key": "date <string>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "date",
      "pluralPhrase": "dates",
      "indexType": "string"
    },
    "datastore inspector": {
      "key": "datastore inspector",
      "type": "property",
      "resultType": "module",
      "singularPhrase": "datastore inspector",
      "pluralPhrase": "datastore inspectors"
    },
    "custom bes fixlet": {
      "key": "custom bes fixlet",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "custom bes fixlet",
      "pluralPhrase": "custom bes fixlets"
    },
    "custom bes fixlet set": {
      "key": "custom bes fixlet set",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "custom bes fixlet set",
      "pluralPhrase": "custom bes fixlet sets"
    },
    "current year": {
      "key": "current year",
      "type": "property",
      "resultType": "year",
      "singularPhrase": "current year",
      "pluralPhrase": "current years"
    },
    "current wizard": {
      "key": "current wizard",
      "type": "property",
      "resultType": "bes wizard",
      "singularPhrase": "current wizard",
      "pluralPhrase": "current wizards"
    },
    "current unmanagedasset": {
      "key": "current unmanagedasset",
      "type": "property",
      "resultType": "bes unmanagedasset",
      "singularPhrase": "current unmanagedasset",
      "pluralPhrase": "current unmanagedassets"
    },
    "current time_of_day": {
      "key": "current time_of_day",
      "type": "property",
      "resultType": "time of day with time zone",
      "singularPhrase": "current time_of_day",
      "pluralPhrase": "current times_of_day"
    },
    "current time_of_day <time zone>": {
      "key": "current time_of_day <time zone>",
      "type": "property",
      "resultType": "time of day with time zone",
      "singularPhrase": "current time_of_day",
      "pluralPhrase": "current times_of_day",
      "indexType": "time zone"
    },
    "current task": {
      "key": "current task",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "current task",
      "pluralPhrase": "current tasks"
    },
    "current month_and_year": {
      "key": "current month_and_year",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "current month_and_year",
      "pluralPhrase": "current months_and_years"
    },
    "current month": {
      "key": "current month",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "current month",
      "pluralPhrase": "current months"
    },
    "current fixlet": {
      "key": "current fixlet",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "current fixlet",
      "pluralPhrase": "current fixlets"
    },
    "current domain": {
      "key": "current domain",
      "type": "property",
      "resultType": "bes domain",
      "singularPhrase": "current domain",
      "pluralPhrase": "current domains"
    },
    "current day_of_year": {
      "key": "current day_of_year",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "current day_of_year",
      "pluralPhrase": "current days_of_year"
    },
    "current day_of_week": {
      "key": "current day_of_week",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "current day_of_week",
      "pluralPhrase": "current days_of_week"
    },
    "current day_of_month": {
      "key": "current day_of_month",
      "type": "property",
      "resultType": "day of month",
      "singularPhrase": "current day_of_month",
      "pluralPhrase": "current days_of_month"
    },
    "current date": {
      "key": "current date",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "current date",
      "pluralPhrase": "current dates"
    },
    "current console user": {
      "key": "current console user",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "current console user",
      "pluralPhrase": "current console users"
    },
    "current computer": {
      "key": "current computer",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "current computer",
      "pluralPhrase": "current computers"
    },
    "current bes site": {
      "key": "current bes site",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "current bes site",
      "pluralPhrase": "current bes sites"
    },
    "current bes server": {
      "key": "current bes server",
      "type": "property",
      "resultType": "bes server",
      "singularPhrase": "current bes server",
      "pluralPhrase": "current bes servers"
    },
    "current analysis": {
      "key": "current analysis",
      "type": "property",
      "resultType": "fixlet",
      "singularPhrase": "current analysis",
      "pluralPhrase": "current analyses"
    },
    "cryptography": {
      "key": "cryptography",
      "type": "property",
      "resultType": "cryptography",
      "singularPhrase": "cryptography",
      "pluralPhrase": "cryptographies"
    },
    "client license": {
      "key": "client license",
      "type": "property",
      "resultType": "license",
      "singularPhrase": "client license",
      "pluralPhrase": "client licenses"
    },
    "character <integer>": {
      "key": "character <integer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "character",
      "pluralPhrase": "characters",
      "indexType": "integer"
    },
    "cast": {
      "key": "cast",
      "type": "property",
      "resultType": "cast",
      "singularPhrase": "cast",
      "pluralPhrase": "casts"
    },
    "cast returning <type>": {
      "key": "cast returning <type>",
      "type": "property",
      "resultType": "cast",
      "singularPhrase": "cast returning",
      "pluralPhrase": "casts returning",
      "indexType": "type"
    },
    "cast <string>": {
      "key": "cast <string>",
      "type": "property",
      "resultType": "cast",
      "singularPhrase": "cast",
      "pluralPhrase": "casts",
      "indexType": "string"
    },
    "case insensitive regular expression <string>": {
      "key": "case insensitive regular expression <string>",
      "type": "property",
      "resultType": "regular expression",
      "singularPhrase": "case insensitive regular expression",
      "pluralPhrase": "case insensitive regular expressions",
      "indexType": "string"
    },
    "case insensitive regex <string>": {
      "key": "case insensitive regex <string>",
      "type": "property",
      "resultType": "regular expression",
      "singularPhrase": "case insensitive regex",
      "pluralPhrase": "case insensitive regexes",
      "indexType": "string"
    },
    "br": {
      "key": "br",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "br",
      "pluralPhrase": "brs"
    },
    "br <string>": {
      "key": "br <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "br",
      "pluralPhrase": "brs",
      "indexType": "string"
    },
    "boolean <string>": {
      "key": "boolean <string>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "boolean",
      "pluralPhrase": "booleans",
      "indexType": "string"
    },
    "bit set <string>": {
      "key": "bit set <string>",
      "type": "property",
      "resultType": "bit set",
      "singularPhrase": "bit set",
      "pluralPhrase": "bit sets",
      "indexType": "string"
    },
    "bit <integer>": {
      "key": "bit <integer>",
      "type": "property",
      "resultType": "bit set",
      "singularPhrase": "bit",
      "pluralPhrase": "bits",
      "indexType": "integer"
    },
    "binary operator": {
      "key": "binary operator",
      "type": "property",
      "resultType": "binary operator",
      "singularPhrase": "binary operator",
      "pluralPhrase": "binary operators"
    },
    "binary operator returning <type>": {
      "key": "binary operator returning <type>",
      "type": "property",
      "resultType": "binary operator",
      "singularPhrase": "binary operator returning",
      "pluralPhrase": "binary operators returning",
      "indexType": "type"
    },
    "binary operator <string>": {
      "key": "binary operator <string>",
      "type": "property",
      "resultType": "binary operator",
      "singularPhrase": "binary operator",
      "pluralPhrase": "binary operators",
      "indexType": "string"
    },
    "bes wizard": {
      "key": "bes wizard",
      "type": "property",
      "resultType": "bes wizard",
      "singularPhrase": "bes wizard",
      "pluralPhrase": "bes wizards"
    },
    "bes wizard set": {
      "key": "bes wizard set",
      "type": "property",
      "resultType": "bes wizard set",
      "singularPhrase": "bes wizard set",
      "pluralPhrase": "bes wizard sets"
    },
    "bes wakeonlan status": {
      "key": "bes wakeonlan status",
      "type": "property",
      "resultType": "bes wakeonlan status",
      "singularPhrase": "bes wakeonlan status",
      "pluralPhrase": "bes wakeonlan statuses"
    },
    "bes user": {
      "key": "bes user",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "bes user",
      "pluralPhrase": "bes users"
    },
    "bes user set": {
      "key": "bes user set",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "bes user set",
      "pluralPhrase": "bes user sets"
    },
    "bes unmanagedasset": {
      "key": "bes unmanagedasset",
      "type": "property",
      "resultType": "bes unmanagedasset",
      "singularPhrase": "bes unmanagedasset",
      "pluralPhrase": "bes unmanagedassets"
    },
    "bes unmanagedasset set": {
      "key": "bes unmanagedasset set",
      "type": "property",
      "resultType": "bes unmanagedasset set",
      "singularPhrase": "bes unmanagedasset set",
      "pluralPhrase": "bes unmanagedasset sets"
    },
    "bes task": {
      "key": "bes task",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "bes task",
      "pluralPhrase": "bes tasks"
    },
    "bes task set": {
      "key": "bes task set",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "bes task set",
      "pluralPhrase": "bes task sets"
    },
    "bes site": {
      "key": "bes site",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "bes site",
      "pluralPhrase": "bes sites"
    },
    "bes property": {
      "key": "bes property",
      "type": "property",
      "resultType": "bes property",
      "singularPhrase": "bes property",
      "pluralPhrase": "bes properties"
    },
    "bes property set": {
      "key": "bes property set",
      "type": "property",
      "resultType": "bes property set",
      "singularPhrase": "bes property set",
      "pluralPhrase": "bes property sets"
    },
    "bes property <string>": {
      "key": "bes property <string>",
      "type": "property",
      "resultType": "bes property",
      "singularPhrase": "bes property",
      "pluralPhrase": "bes properties",
      "indexType": "string"
    },
    "bes license": {
      "key": "bes license",
      "type": "property",
      "resultType": "license",
      "singularPhrase": "bes license",
      "pluralPhrase": "bes licenses"
    },
    "bes fixlet": {
      "key": "bes fixlet",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "bes fixlet",
      "pluralPhrase": "bes fixlets"
    },
    "bes fixlet set": {
      "key": "bes fixlet set",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "bes fixlet set",
      "pluralPhrase": "bes fixlet sets"
    },
    "bes filter": {
      "key": "bes filter",
      "type": "property",
      "resultType": "bes filter",
      "singularPhrase": "bes filter",
      "pluralPhrase": "bes filters"
    },
    "bes filter set": {
      "key": "bes filter set",
      "type": "property",
      "resultType": "bes filter set",
      "singularPhrase": "bes filter set",
      "pluralPhrase": "bes filter sets"
    },
    "bes filter <integer>": {
      "key": "bes filter <integer>",
      "type": "property",
      "resultType": "bes filter",
      "singularPhrase": "bes filter",
      "pluralPhrase": "bes filters",
      "indexType": "integer"
    },
    "bes domain": {
      "key": "bes domain",
      "type": "property",
      "resultType": "bes domain",
      "singularPhrase": "bes domain",
      "pluralPhrase": "bes domains"
    },
    "bes domain set": {
      "key": "bes domain set",
      "type": "property",
      "resultType": "bes domain set",
      "singularPhrase": "bes domain set",
      "pluralPhrase": "bes domain sets"
    },
    "bes domain <string>": {
      "key": "bes domain <string>",
      "type": "property",
      "resultType": "bes domain",
      "singularPhrase": "bes domain",
      "pluralPhrase": "bes domains",
      "indexType": "string"
    },
    "bes deployment option": {
      "key": "bes deployment option",
      "type": "property",
      "resultType": "bes deployment option",
      "singularPhrase": "bes deployment option",
      "pluralPhrase": "bes deployment options"
    },
    "bes deployment option <string>": {
      "key": "bes deployment option <string>",
      "type": "property",
      "resultType": "bes deployment option",
      "singularPhrase": "bes deployment option",
      "pluralPhrase": "bes deployment options",
      "indexType": "string"
    },
    "bes custom site": {
      "key": "bes custom site",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "bes custom site",
      "pluralPhrase": "bes custom sites"
    },
    "bes computer": {
      "key": "bes computer",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "bes computer",
      "pluralPhrase": "bes computers"
    },
    "bes computer set": {
      "key": "bes computer set",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "bes computer set",
      "pluralPhrase": "bes computer sets"
    },
    "bes computer group": {
      "key": "bes computer group",
      "type": "property",
      "resultType": "bes computer group",
      "singularPhrase": "bes computer group",
      "pluralPhrase": "bes computer groups"
    },
    "bes computer group set": {
      "key": "bes computer group set",
      "type": "property",
      "resultType": "bes computer group set",
      "singularPhrase": "bes computer group set",
      "pluralPhrase": "bes computer group sets"
    },
    "bes brand": {
      "key": "bes brand",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "bes brand",
      "pluralPhrase": "bes brands"
    },
    "bes baseline": {
      "key": "bes baseline",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "bes baseline",
      "pluralPhrase": "bes baselines"
    },
    "bes baseline set": {
      "key": "bes baseline set",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "bes baseline set",
      "pluralPhrase": "bes baseline sets"
    },
    "bes analysis": {
      "key": "bes analysis",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "bes analysis",
      "pluralPhrase": "bes analyses"
    },
    "bes analysis set": {
      "key": "bes analysis set",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "bes analysis set",
      "pluralPhrase": "bes analysis sets"
    },
    "bes action": {
      "key": "bes action",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "bes action",
      "pluralPhrase": "bes actions"
    },
    "bes action status waiting": {
      "key": "bes action status waiting",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status waiting",
      "pluralPhrase": "bes action statuses waiting"
    },
    "bes action status user cancelled": {
      "key": "bes action status user cancelled",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status user cancelled",
      "pluralPhrase": "bes action statuses user cancelled"
    },
    "bes action status unreported": {
      "key": "bes action status unreported",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status unreported",
      "pluralPhrase": "bes action statuses unreported"
    },
    "bes action status running": {
      "key": "bes action status running",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status running",
      "pluralPhrase": "bes action statuses running"
    },
    "bes action status postponed": {
      "key": "bes action status postponed",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status postponed",
      "pluralPhrase": "bes action statuses postponed"
    },
    "bes action status pending restart": {
      "key": "bes action status pending restart",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status pending restart",
      "pluralPhrase": "bes action statuses pending restart"
    },
    "bes action status pending offer": {
      "key": "bes action status pending offer",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status pending offer",
      "pluralPhrase": "bes action statuses pending offer"
    },
    "bes action status pending message": {
      "key": "bes action status pending message",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status pending message",
      "pluralPhrase": "bes action statuses pending message"
    },
    "bes action status pending login": {
      "key": "bes action status pending login",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status pending login",
      "pluralPhrase": "bes action statuses pending login"
    },
    "bes action status pending downloads": {
      "key": "bes action status pending downloads",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status pending downloads",
      "pluralPhrase": "bes action statuses pending downloads"
    },
    "bes action status offers disabled": {
      "key": "bes action status offers disabled",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status offers disabled",
      "pluralPhrase": "bes action statuses offers disabled"
    },
    "bes action status locked": {
      "key": "bes action status locked",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status locked",
      "pluralPhrase": "bes action statuses locked"
    },
    "bes action status irrelevant": {
      "key": "bes action status irrelevant",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status irrelevant",
      "pluralPhrase": "bes action statuses irrelevant"
    },
    "bes action status invalid signature": {
      "key": "bes action status invalid signature",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status invalid signature",
      "pluralPhrase": "bes action statuses invalid signature"
    },
    "bes action status fixed": {
      "key": "bes action status fixed",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status fixed",
      "pluralPhrase": "bes action statuses fixed"
    },
    "bes action status failed": {
      "key": "bes action status failed",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status failed",
      "pluralPhrase": "bes action statuses failed"
    },
    "bes action status expired": {
      "key": "bes action status expired",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status expired",
      "pluralPhrase": "bes action statuses expired"
    },
    "bes action status evaluating": {
      "key": "bes action status evaluating",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status evaluating",
      "pluralPhrase": "bes action statuses evaluating"
    },
    "bes action status error": {
      "key": "bes action status error",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status error",
      "pluralPhrase": "bes action statuses error"
    },
    "bes action status download failed": {
      "key": "bes action status download failed",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status download failed",
      "pluralPhrase": "bes action statuses download failed"
    },
    "bes action status constrained": {
      "key": "bes action status constrained",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status constrained",
      "pluralPhrase": "bes action statuses constrained"
    },
    "bes action set": {
      "key": "bes action set",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "bes action set",
      "pluralPhrase": "bes action sets"
    },
    "august": {
      "key": "august",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "august",
      "pluralPhrase": "augusts"
    },
    "august <integer>": {
      "key": "august <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "august",
      "pluralPhrase": "augusts",
      "indexType": "integer"
    },
    "april": {
      "key": "april",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "april",
      "pluralPhrase": "aprils"
    },
    "april <integer>": {
      "key": "april <integer>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "april",
      "pluralPhrase": "aprils",
      "indexType": "integer"
    },
    "any ip version": {
      "key": "any ip version",
      "type": "property",
      "resultType": "ip version",
      "singularPhrase": "any ip version",
      "pluralPhrase": "any ip versions"
    },
    "all fixlet count": {
      "key": "all fixlet count",
      "type": "property",
      "resultType": "historical fixlet count",
      "singularPhrase": "all fixlet count",
      "pluralPhrase": "all fixlet counts"
    },
    "all computer count": {
      "key": "all computer count",
      "type": "property",
      "resultType": "historical computer count",
      "singularPhrase": "all computer count",
      "pluralPhrase": "all computer counts"
    },
    "all bes site": {
      "key": "all bes site",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "all bes site",
      "pluralPhrase": "all bes sites"
    },
    "administrator <( bes user, bes computer )>": {
      "key": "administrator <( bes user, bes computer )>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "administrator",
      "pluralPhrase": "administrators",
      "indexType": "( bes user, bes computer )"
    },
    "administrator <( bes computer, bes user )>": {
      "key": "administrator <( bes computer, bes user )>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "administrator",
      "pluralPhrase": "administrators",
      "indexType": "( bes computer, bes user )"
    },
    "multiplicity of <year with multiplicity>": {
      "key": "multiplicity of <year with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "year with multiplicity"
    },
    "unique value of <year>": {
      "key": "unique value of <year>",
      "type": "property",
      "resultType": "year with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "year"
    },
    "minimum of <year>": {
      "key": "minimum of <year>",
      "type": "property",
      "resultType": "year",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "year"
    },
    "maximum of <year>": {
      "key": "maximum of <year>",
      "type": "property",
      "resultType": "year",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "year"
    },
    "length of <year>": {
      "key": "length of <year>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "year"
    },
    "leap of <year>": {
      "key": "leap of <year>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "leap",
      "pluralPhrase": "leaps",
      "directObjectType": "year"
    },
    "extrema of <year>": {
      "key": "extrema of <year>",
      "type": "property",
      "resultType": "( year, year )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "year"
    },
    "<year> as string": {
      "key": "<year> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "year",
      "phrase": "string"
    },
    "<year> as integer": {
      "key": "<year> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "year",
      "phrase": "integer"
    },
    "<year> = <year>": {
      "key": "<year> = <year>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "year",
      "op": "=",
      "rightType": "year"
    },
    "<year> <= <year>": {
      "key": "<year> <= <year>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "year",
      "op": "<=",
      "rightType": "year"
    },
    "<year> < <year>": {
      "key": "<year> < <year>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "year",
      "op": "<",
      "rightType": "year"
    },
    "<year> - <year>": {
      "key": "<year> - <year>",
      "type": "binaryOp",
      "resultType": "number of months",
      "leftType": "year",
      "op": "-",
      "rightType": "year"
    },
    "xpath <string> of <xml dom node>": {
      "key": "xpath <string> of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "xpath",
      "pluralPhrase": "xpaths",
      "indexType": "string",
      "directObjectType": "xml dom node"
    },
    "xpath <( string, string )> of <xml dom node>": {
      "key": "xpath <( string, string )> of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "xpath",
      "pluralPhrase": "xpaths",
      "indexType": "( string, string )",
      "directObjectType": "xml dom node"
    },
    "select <string> of <xml dom node>": {
      "key": "select <string> of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "select",
      "pluralPhrase": "selects",
      "indexType": "string",
      "directObjectType": "xml dom node"
    },
    "previous sibling of <xml dom node>": {
      "key": "previous sibling of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "previous sibling",
      "pluralPhrase": "previous siblings",
      "directObjectType": "xml dom node"
    },
    "parent node of <xml dom node>": {
      "key": "parent node of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "parent node",
      "pluralPhrase": "parent nodes",
      "directObjectType": "xml dom node"
    },
    "owner document of <xml dom node>": {
      "key": "owner document of <xml dom node>",
      "type": "property",
      "resultType": "xml dom document",
      "singularPhrase": "owner document",
      "pluralPhrase": "owner documents",
      "directObjectType": "xml dom node"
    },
    "node value of <xml dom node>": {
      "key": "node value of <xml dom node>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "node value",
      "pluralPhrase": "node values",
      "directObjectType": "xml dom node"
    },
    "node type of <xml dom node>": {
      "key": "node type of <xml dom node>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "node type",
      "pluralPhrase": "node types",
      "directObjectType": "xml dom node"
    },
    "node name of <xml dom node>": {
      "key": "node name of <xml dom node>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "node name",
      "pluralPhrase": "node names",
      "directObjectType": "xml dom node"
    },
    "next sibling of <xml dom node>": {
      "key": "next sibling of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "next sibling",
      "pluralPhrase": "next siblings",
      "directObjectType": "xml dom node"
    },
    "last child of <xml dom node>": {
      "key": "last child of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "last child",
      "pluralPhrase": "last children",
      "directObjectType": "xml dom node"
    },
    "first child of <xml dom node>": {
      "key": "first child of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "first child",
      "pluralPhrase": "first children",
      "directObjectType": "xml dom node"
    },
    "child node of <xml dom node>": {
      "key": "child node of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "child node",
      "pluralPhrase": "child nodes",
      "directObjectType": "xml dom node"
    },
    "child node <integer> of <xml dom node>": {
      "key": "child node <integer> of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "child node",
      "pluralPhrase": "child nodes",
      "indexType": "integer",
      "directObjectType": "xml dom node"
    },
    "attribute of <xml dom node>": {
      "key": "attribute of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "attribute",
      "pluralPhrase": "attributes",
      "directObjectType": "xml dom node"
    },
    "attribute <string> of <xml dom node>": {
      "key": "attribute <string> of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "attribute",
      "pluralPhrase": "attributes",
      "indexType": "string",
      "directObjectType": "xml dom node"
    },
    "attribute <integer> of <xml dom node>": {
      "key": "attribute <integer> of <xml dom node>",
      "type": "property",
      "resultType": "xml dom node",
      "singularPhrase": "attribute",
      "pluralPhrase": "attributes",
      "indexType": "integer",
      "directObjectType": "xml dom node"
    },
    "<xml dom node> as xml": {
      "key": "<xml dom node> as xml",
      "type": "cast",
      "resultType": "string",
      "argType": "xml dom node",
      "phrase": "xml"
    },
    "<xml dom node> as text": {
      "key": "<xml dom node> as text",
      "type": "cast",
      "resultType": "string",
      "argType": "xml dom node",
      "phrase": "text"
    },
    "sha1 of <x509 certificate>": {
      "key": "sha1 of <x509 certificate>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha1",
      "pluralPhrase": "sha1s",
      "directObjectType": "x509 certificate"
    },
    "invalid before of <x509 certificate>": {
      "key": "invalid before of <x509 certificate>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "invalid before",
      "pluralPhrase": "invalid befores",
      "directObjectType": "x509 certificate"
    },
    "multiplicity of <version with multiplicity>": {
      "key": "multiplicity of <version with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "version with multiplicity"
    },
    "unique value of <version>": {
      "key": "unique value of <version>",
      "type": "property",
      "resultType": "version with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "version"
    },
    "pad of <version>": {
      "key": "pad of <version>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "pad",
      "pluralPhrase": "pads",
      "directObjectType": "version"
    },
    "minimum of <version>": {
      "key": "minimum of <version>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "version"
    },
    "maximum of <version>": {
      "key": "maximum of <version>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "version"
    },
    "extrema of <version>": {
      "key": "extrema of <version>",
      "type": "property",
      "resultType": "( version, version )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "version"
    },
    "<version> as version": {
      "key": "<version> as version",
      "type": "cast",
      "resultType": "version",
      "argType": "version",
      "phrase": "version"
    },
    "<version> as string": {
      "key": "<version> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "version",
      "phrase": "string"
    },
    "<version> = <version>": {
      "key": "<version> = <version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "version",
      "op": "=",
      "rightType": "version"
    },
    "<version> <= <version>": {
      "key": "<version> <= <version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "version",
      "op": "<=",
      "rightType": "version"
    },
    "<version> < <version>": {
      "key": "<version> < <version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "version",
      "op": "<",
      "rightType": "version"
    },
    "<undefined> as string": {
      "key": "<undefined> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "undefined",
      "phrase": "string"
    },
    "symbol of <unary operator>": {
      "key": "symbol of <unary operator>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "symbol",
      "pluralPhrase": "symbols",
      "directObjectType": "unary operator"
    },
    "result type of <unary operator>": {
      "key": "result type of <unary operator>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "result type",
      "pluralPhrase": "result types",
      "directObjectType": "unary operator"
    },
    "operand type of <unary operator>": {
      "key": "operand type of <unary operator>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "operand type",
      "pluralPhrase": "operand types",
      "directObjectType": "unary operator"
    },
    "name of <unary operator>": {
      "key": "name of <unary operator>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "unary operator"
    },
    "<unary operator> as string": {
      "key": "<unary operator> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "unary operator",
      "phrase": "string"
    },
    "size of <type>": {
      "key": "size of <type>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "type"
    },
    "property returning <type> of <type>": {
      "key": "property returning <type> of <type>",
      "type": "property",
      "resultType": "property",
      "singularPhrase": "property returning",
      "pluralPhrase": "properties returning",
      "indexType": "type",
      "directObjectType": "type"
    },
    "property of <type>": {
      "key": "property of <type>",
      "type": "property",
      "resultType": "property",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "directObjectType": "type"
    },
    "property <string> of <type>": {
      "key": "property <string> of <type>",
      "type": "property",
      "resultType": "property",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "indexType": "string",
      "directObjectType": "type"
    },
    "parent of <type>": {
      "key": "parent of <type>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "parent",
      "pluralPhrase": "parents",
      "directObjectType": "type"
    },
    "name of <type>": {
      "key": "name of <type>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "type"
    },
    "cast from of <type>": {
      "key": "cast from of <type>",
      "type": "property",
      "resultType": "cast",
      "singularPhrase": "cast from",
      "pluralPhrase": "casts from",
      "directObjectType": "type"
    },
    "<type> as string": {
      "key": "<type> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "type",
      "phrase": "string"
    },
    "<type> = <type>": {
      "key": "<type> = <type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "type",
      "op": "=",
      "rightType": "type"
    },
    "multiplicity of <time zone with multiplicity>": {
      "key": "multiplicity of <time zone with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "time zone with multiplicity"
    },
    "unique value of <time zone>": {
      "key": "unique value of <time zone>",
      "type": "property",
      "resultType": "time zone with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "time zone"
    },
    "<time zone> as string": {
      "key": "<time zone> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "time zone",
      "phrase": "string"
    },
    "<time zone> = <time zone>": {
      "key": "<time zone> = <time zone>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time zone",
      "op": "=",
      "rightType": "time zone"
    },
    "<time zone> - <time zone>": {
      "key": "<time zone> - <time zone>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "time zone",
      "op": "-",
      "rightType": "time zone"
    },
    "multiplicity of <time with multiplicity>": {
      "key": "multiplicity of <time with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "time with multiplicity"
    },
    "multiplicity of <time range with multiplicity>": {
      "key": "multiplicity of <time range with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "time range with multiplicity"
    },
    "unique value of <time range>": {
      "key": "unique value of <time range>",
      "type": "property",
      "resultType": "time range with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "time range"
    },
    "start of <time range>": {
      "key": "start of <time range>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "start",
      "pluralPhrase": "starts",
      "directObjectType": "time range"
    },
    "range before <time> of <time range>": {
      "key": "range before <time> of <time range>",
      "type": "property",
      "resultType": "time range",
      "singularPhrase": "range before",
      "pluralPhrase": "ranges before",
      "indexType": "time",
      "directObjectType": "time range"
    },
    "range after <time> of <time range>": {
      "key": "range after <time> of <time range>",
      "type": "property",
      "resultType": "time range",
      "singularPhrase": "range after",
      "pluralPhrase": "ranges after",
      "indexType": "time",
      "directObjectType": "time range"
    },
    "length of <time range>": {
      "key": "length of <time range>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "time range"
    },
    "initial part <time interval> of <time range>": {
      "key": "initial part <time interval> of <time range>",
      "type": "property",
      "resultType": "time range",
      "singularPhrase": "initial part",
      "pluralPhrase": "initial parts",
      "indexType": "time interval",
      "directObjectType": "time range"
    },
    "final part <time interval> of <time range>": {
      "key": "final part <time interval> of <time range>",
      "type": "property",
      "resultType": "time range",
      "singularPhrase": "final part",
      "pluralPhrase": "final parts",
      "indexType": "time interval",
      "directObjectType": "time range"
    },
    "end of <time range>": {
      "key": "end of <time range>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "end",
      "pluralPhrase": "ends",
      "directObjectType": "time range"
    },
    "<time range> contains <time range>": {
      "key": "<time range> contains <time range>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time range",
      "op": "contains",
      "rightType": "time range"
    },
    "<time range> as string": {
      "key": "<time range> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "time range",
      "phrase": "string"
    },
    "<time range> = <time range>": {
      "key": "<time range> = <time range>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time range",
      "op": "=",
      "rightType": "time range"
    },
    "<time range> + <time range>": {
      "key": "<time range> + <time range>",
      "type": "binaryOp",
      "resultType": "time range",
      "leftType": "time range",
      "op": "+",
      "rightType": "time range"
    },
    "<time range> * <time range>": {
      "key": "<time range> * <time range>",
      "type": "binaryOp",
      "resultType": "time range",
      "leftType": "time range",
      "op": "*",
      "rightType": "time range"
    },
    "<time range> & <time range>": {
      "key": "<time range> & <time range>",
      "type": "binaryOp",
      "resultType": "time range",
      "leftType": "time range",
      "op": "&",
      "rightType": "time range"
    },
    "multiplicity of <time of day with time zone with multiplicity>": {
      "key": "multiplicity of <time of day with time zone with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "time of day with time zone with multiplicity"
    },
    "zone of <time of day with time zone>": {
      "key": "zone of <time of day with time zone>",
      "type": "property",
      "resultType": "time zone",
      "singularPhrase": "zone",
      "pluralPhrase": "zones",
      "directObjectType": "time of day with time zone"
    },
    "unique value of <time of day with time zone>": {
      "key": "unique value of <time of day with time zone>",
      "type": "property",
      "resultType": "time of day with time zone with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "time of day with time zone"
    },
    "two digit second of <time of day with time zone>": {
      "key": "two digit second of <time of day with time zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "two digit second",
      "pluralPhrase": "two digit seconds",
      "directObjectType": "time of day with time zone"
    },
    "two digit minute of <time of day with time zone>": {
      "key": "two digit minute of <time of day with time zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "two digit minute",
      "pluralPhrase": "two digit minutes",
      "directObjectType": "time of day with time zone"
    },
    "two digit hour of <time of day with time zone>": {
      "key": "two digit hour of <time of day with time zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "two digit hour",
      "pluralPhrase": "two digit hours",
      "directObjectType": "time of day with time zone"
    },
    "time of <time of day with time zone>": {
      "key": "time of <time of day with time zone>",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "time",
      "pluralPhrase": "times",
      "directObjectType": "time of day with time zone"
    },
    "second_of_minute of <time of day with time zone>": {
      "key": "second_of_minute of <time of day with time zone>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "second_of_minute",
      "pluralPhrase": "seconds_of_minute",
      "directObjectType": "time of day with time zone"
    },
    "minute_of_hour of <time of day with time zone>": {
      "key": "minute_of_hour of <time of day with time zone>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minute_of_hour",
      "pluralPhrase": "minutes_of_hour",
      "directObjectType": "time of day with time zone"
    },
    "hour_of_day of <time of day with time zone>": {
      "key": "hour_of_day of <time of day with time zone>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "hour_of_day",
      "pluralPhrase": "hours_of_day",
      "directObjectType": "time of day with time zone"
    },
    "<time zone> & <time of day with time zone>": {
      "key": "<time zone> & <time of day with time zone>",
      "type": "binaryOp",
      "resultType": "time of day with time zone",
      "leftType": "time zone",
      "op": "&",
      "rightType": "time of day with time zone"
    },
    "<time of day with time zone> as string": {
      "key": "<time of day with time zone> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "time of day with time zone",
      "phrase": "string"
    },
    "<time of day with time zone> = <time of day with time zone>": {
      "key": "<time of day with time zone> = <time of day with time zone>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time of day with time zone",
      "op": "=",
      "rightType": "time of day with time zone"
    },
    "<time of day with time zone> - <time of day with time zone>": {
      "key": "<time of day with time zone> - <time of day with time zone>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "time of day with time zone",
      "op": "-",
      "rightType": "time of day with time zone"
    },
    "<time of day with time zone> & <time zone>": {
      "key": "<time of day with time zone> & <time zone>",
      "type": "binaryOp",
      "resultType": "time of day with time zone",
      "leftType": "time of day with time zone",
      "op": "&",
      "rightType": "time zone"
    },
    "multiplicity of <time of day with multiplicity>": {
      "key": "multiplicity of <time of day with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "time of day with multiplicity"
    },
    "unique value of <time of day>": {
      "key": "unique value of <time of day>",
      "type": "property",
      "resultType": "time of day with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "time of day"
    },
    "two digit second of <time of day>": {
      "key": "two digit second of <time of day>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "two digit second",
      "pluralPhrase": "two digit seconds",
      "directObjectType": "time of day"
    },
    "two digit minute of <time of day>": {
      "key": "two digit minute of <time of day>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "two digit minute",
      "pluralPhrase": "two digit minutes",
      "directObjectType": "time of day"
    },
    "two digit hour of <time of day>": {
      "key": "two digit hour of <time of day>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "two digit hour",
      "pluralPhrase": "two digit hours",
      "directObjectType": "time of day"
    },
    "second_of_minute of <time of day>": {
      "key": "second_of_minute of <time of day>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "second_of_minute",
      "pluralPhrase": "seconds_of_minute",
      "directObjectType": "time of day"
    },
    "minute_of_hour of <time of day>": {
      "key": "minute_of_hour of <time of day>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minute_of_hour",
      "pluralPhrase": "minutes_of_hour",
      "directObjectType": "time of day"
    },
    "minimum of <time of day>": {
      "key": "minimum of <time of day>",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "time of day"
    },
    "maximum of <time of day>": {
      "key": "maximum of <time of day>",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "time of day"
    },
    "hour_of_day of <time of day>": {
      "key": "hour_of_day of <time of day>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "hour_of_day",
      "pluralPhrase": "hours_of_day",
      "directObjectType": "time of day"
    },
    "extrema of <time of day>": {
      "key": "extrema of <time of day>",
      "type": "property",
      "resultType": "( time of day, time of day )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "time of day"
    },
    "<time zone> & <time of day>": {
      "key": "<time zone> & <time of day>",
      "type": "binaryOp",
      "resultType": "time of day with time zone",
      "leftType": "time zone",
      "op": "&",
      "rightType": "time of day"
    },
    "<time of day> as string": {
      "key": "<time of day> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "time of day",
      "phrase": "string"
    },
    "<time of day> = <time of day>": {
      "key": "<time of day> = <time of day>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time of day",
      "op": "=",
      "rightType": "time of day"
    },
    "<time of day> <= <time of day>": {
      "key": "<time of day> <= <time of day>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time of day",
      "op": "<=",
      "rightType": "time of day"
    },
    "<time of day> < <time of day>": {
      "key": "<time of day> < <time of day>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time of day",
      "op": "<",
      "rightType": "time of day"
    },
    "<time of day> - <time of day>": {
      "key": "<time of day> - <time of day>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "time of day",
      "op": "-",
      "rightType": "time of day"
    },
    "<time of day> & <time zone>": {
      "key": "<time of day> & <time zone>",
      "type": "binaryOp",
      "resultType": "time of day with time zone",
      "leftType": "time of day",
      "op": "&",
      "rightType": "time zone"
    },
    "multiplicity of <time interval with multiplicity>": {
      "key": "multiplicity of <time interval with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "time interval with multiplicity"
    },
    "unique value of <time interval>": {
      "key": "unique value of <time interval>",
      "type": "property",
      "resultType": "time interval with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "time interval"
    },
    "sum of <time interval>": {
      "key": "sum of <time interval>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "sum",
      "pluralPhrase": "sums",
      "directObjectType": "time interval"
    },
    "minimum of <time interval>": {
      "key": "minimum of <time interval>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "time interval"
    },
    "maximum of <time interval>": {
      "key": "maximum of <time interval>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "time interval"
    },
    "extrema of <time interval>": {
      "key": "extrema of <time interval>",
      "type": "property",
      "resultType": "( time interval, time interval )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "time interval"
    },
    "absolute value of <time interval>": {
      "key": "absolute value of <time interval>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "absolute value",
      "pluralPhrase": "absolute values",
      "directObjectType": "time interval"
    },
    "<time zone> - <time interval>": {
      "key": "<time zone> - <time interval>",
      "type": "binaryOp",
      "resultType": "time zone",
      "leftType": "time zone",
      "op": "-",
      "rightType": "time interval"
    },
    "<time zone> + <time interval>": {
      "key": "<time zone> + <time interval>",
      "type": "binaryOp",
      "resultType": "time zone",
      "leftType": "time zone",
      "op": "+",
      "rightType": "time interval"
    },
    "<time of day> - <time interval>": {
      "key": "<time of day> - <time interval>",
      "type": "binaryOp",
      "resultType": "time of day",
      "leftType": "time of day",
      "op": "-",
      "rightType": "time interval"
    },
    "<time of day> + <time interval>": {
      "key": "<time of day> + <time interval>",
      "type": "binaryOp",
      "resultType": "time of day",
      "leftType": "time of day",
      "op": "+",
      "rightType": "time interval"
    },
    "<time of day with time zone> - <time interval>": {
      "key": "<time of day with time zone> - <time interval>",
      "type": "binaryOp",
      "resultType": "time of day with time zone",
      "leftType": "time of day with time zone",
      "op": "-",
      "rightType": "time interval"
    },
    "<time of day with time zone> + <time interval>": {
      "key": "<time of day with time zone> + <time interval>",
      "type": "binaryOp",
      "resultType": "time of day with time zone",
      "leftType": "time of day with time zone",
      "op": "+",
      "rightType": "time interval"
    },
    "<time interval> mod <time interval>": {
      "key": "<time interval> mod <time interval>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "time interval",
      "op": "mod",
      "rightType": "time interval"
    },
    "<time interval> as string": {
      "key": "<time interval> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "time interval",
      "phrase": "string"
    },
    "<time interval> = <time interval>": {
      "key": "<time interval> = <time interval>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time interval",
      "op": "=",
      "rightType": "time interval"
    },
    "<time interval> <= <time interval>": {
      "key": "<time interval> <= <time interval>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time interval",
      "op": "<=",
      "rightType": "time interval"
    },
    "<time interval> < <time interval>": {
      "key": "<time interval> < <time interval>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time interval",
      "op": "<",
      "rightType": "time interval"
    },
    "<time interval> / <time interval>": {
      "key": "<time interval> / <time interval>",
      "type": "binaryOp",
      "resultType": "integer",
      "leftType": "time interval",
      "op": "/",
      "rightType": "time interval"
    },
    "<time interval> - <time interval>": {
      "key": "<time interval> - <time interval>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "time interval",
      "op": "-",
      "rightType": "time interval"
    },
    "<time interval> + <time zone>": {
      "key": "<time interval> + <time zone>",
      "type": "binaryOp",
      "resultType": "time zone",
      "leftType": "time interval",
      "op": "+",
      "rightType": "time zone"
    },
    "<time interval> + <time of day>": {
      "key": "<time interval> + <time of day>",
      "type": "binaryOp",
      "resultType": "time of day",
      "leftType": "time interval",
      "op": "+",
      "rightType": "time of day"
    },
    "<time interval> + <time of day with time zone>": {
      "key": "<time interval> + <time of day with time zone>",
      "type": "binaryOp",
      "resultType": "time of day with time zone",
      "leftType": "time interval",
      "op": "+",
      "rightType": "time of day with time zone"
    },
    "<time interval> + <time interval>": {
      "key": "<time interval> + <time interval>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "time interval",
      "op": "+",
      "rightType": "time interval"
    },
    "- <time interval>": {
      "key": "- <time interval>",
      "type": "unaryOp",
      "resultType": "time interval",
      "argType": "time interval",
      "op": "-"
    },
    "unique value of <time>": {
      "key": "unique value of <time>",
      "type": "property",
      "resultType": "time with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "time"
    },
    "time <time zone> of <time>": {
      "key": "time <time zone> of <time>",
      "type": "property",
      "resultType": "time of day with time zone",
      "singularPhrase": "time",
      "pluralPhrase": "times",
      "indexType": "time zone",
      "directObjectType": "time"
    },
    "minimum of <time>": {
      "key": "minimum of <time>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "time"
    },
    "maximum of <time>": {
      "key": "maximum of <time>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "time"
    },
    "extrema of <time>": {
      "key": "extrema of <time>",
      "type": "property",
      "resultType": "( time, time )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "time"
    },
    "date <time zone> of <time>": {
      "key": "date <time zone> of <time>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "date",
      "pluralPhrase": "dates",
      "indexType": "time zone",
      "directObjectType": "time"
    },
    "<time> as universal string": {
      "key": "<time> as universal string",
      "type": "cast",
      "resultType": "string",
      "argType": "time",
      "phrase": "universal string"
    },
    "<time> as string": {
      "key": "<time> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "time",
      "phrase": "string"
    },
    "<time> as local string": {
      "key": "<time> as local string",
      "type": "cast",
      "resultType": "string",
      "argType": "time",
      "phrase": "local string"
    },
    "<time> = <time>": {
      "key": "<time> = <time>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time",
      "op": "=",
      "rightType": "time"
    },
    "<time> <= <time>": {
      "key": "<time> <= <time>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time",
      "op": "<=",
      "rightType": "time"
    },
    "<time> < <time>": {
      "key": "<time> < <time>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time",
      "op": "<",
      "rightType": "time"
    },
    "<time> - <time>": {
      "key": "<time> - <time>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "time",
      "op": "-",
      "rightType": "time"
    },
    "<time> - <time interval>": {
      "key": "<time> - <time interval>",
      "type": "binaryOp",
      "resultType": "time",
      "leftType": "time",
      "op": "-",
      "rightType": "time interval"
    },
    "<time> + <time interval>": {
      "key": "<time> + <time interval>",
      "type": "binaryOp",
      "resultType": "time",
      "leftType": "time",
      "op": "+",
      "rightType": "time interval"
    },
    "<time> & <time>": {
      "key": "<time> & <time>",
      "type": "binaryOp",
      "resultType": "time range",
      "leftType": "time",
      "op": "&",
      "rightType": "time"
    },
    "<time> & <time range>": {
      "key": "<time> & <time range>",
      "type": "binaryOp",
      "resultType": "time range",
      "leftType": "time",
      "op": "&",
      "rightType": "time range"
    },
    "<time> & <time interval>": {
      "key": "<time> & <time interval>",
      "type": "binaryOp",
      "resultType": "time range",
      "leftType": "time",
      "op": "&",
      "rightType": "time interval"
    },
    "<time range> contains <time>": {
      "key": "<time range> contains <time>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time range",
      "op": "contains",
      "rightType": "time"
    },
    "<time range> & <time>": {
      "key": "<time range> & <time>",
      "type": "binaryOp",
      "resultType": "time range",
      "leftType": "time range",
      "op": "&",
      "rightType": "time"
    },
    "<time interval> + <time>": {
      "key": "<time interval> + <time>",
      "type": "binaryOp",
      "resultType": "time",
      "leftType": "time interval",
      "op": "+",
      "rightType": "time"
    },
    "<time interval> & <time>": {
      "key": "<time interval> & <time>",
      "type": "binaryOp",
      "resultType": "time range",
      "leftType": "time interval",
      "op": "&",
      "rightType": "time"
    },
    "start of <substring>": {
      "key": "start of <substring>",
      "type": "property",
      "resultType": "string position",
      "singularPhrase": "start",
      "pluralPhrase": "starts",
      "directObjectType": "substring"
    },
    "preceding text of <substring>": {
      "key": "preceding text of <substring>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "preceding text",
      "pluralPhrase": "preceding texts",
      "directObjectType": "substring"
    },
    "following text of <substring>": {
      "key": "following text of <substring>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "following text",
      "pluralPhrase": "following texts",
      "directObjectType": "substring"
    },
    "end of <substring>": {
      "key": "end of <substring>",
      "type": "property",
      "resultType": "string position",
      "singularPhrase": "end",
      "pluralPhrase": "ends",
      "directObjectType": "substring"
    },
    "multiplicity of <string with multiplicity>": {
      "key": "multiplicity of <string with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "string with multiplicity"
    },
    "union of <string set>": {
      "key": "union of <string set>",
      "type": "property",
      "resultType": "string set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "string set"
    },
    "size of <string set>": {
      "key": "size of <string set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "string set"
    },
    "intersection of <string set>": {
      "key": "intersection of <string set>",
      "type": "property",
      "resultType": "string set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "string set"
    },
    "element of <string set>": {
      "key": "element of <string set>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "string set"
    },
    "<string set> contains <string set>": {
      "key": "<string set> contains <string set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string set",
      "op": "contains",
      "rightType": "string set"
    },
    "<string set> = <string set>": {
      "key": "<string set> = <string set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string set",
      "op": "=",
      "rightType": "string set"
    },
    "<string set> - <string set>": {
      "key": "<string set> - <string set>",
      "type": "binaryOp",
      "resultType": "string set",
      "leftType": "string set",
      "op": "-",
      "rightType": "string set"
    },
    "<string set> + <string set>": {
      "key": "<string set> + <string set>",
      "type": "binaryOp",
      "resultType": "string set",
      "leftType": "string set",
      "op": "+",
      "rightType": "string set"
    },
    "<string set> * <string set>": {
      "key": "<string set> * <string set>",
      "type": "binaryOp",
      "resultType": "string set",
      "leftType": "string set",
      "op": "*",
      "rightType": "string set"
    },
    "preceding text of <string position>": {
      "key": "preceding text of <string position>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "preceding text",
      "pluralPhrase": "preceding texts",
      "directObjectType": "string position"
    },
    "following text of <string position>": {
      "key": "following text of <string position>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "following text",
      "pluralPhrase": "following texts",
      "directObjectType": "string position"
    },
    "xml document of <string>": {
      "key": "xml document of <string>",
      "type": "property",
      "resultType": "xml dom document",
      "singularPhrase": "xml document",
      "pluralPhrase": "xml documents",
      "directObjectType": "string"
    },
    "var of <string>": {
      "key": "var of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "var",
      "pluralPhrase": "vars",
      "directObjectType": "string"
    },
    "var <string> of <string>": {
      "key": "var <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "var",
      "pluralPhrase": "vars",
      "indexType": "string",
      "directObjectType": "string"
    },
    "unordered list of <string>": {
      "key": "unordered list of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "unordered list",
      "pluralPhrase": "unordered lists",
      "directObjectType": "string"
    },
    "unordered list <string> of <string>": {
      "key": "unordered list <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "unordered list",
      "pluralPhrase": "unordered lists",
      "indexType": "string",
      "directObjectType": "string"
    },
    "unique value of <string>": {
      "key": "unique value of <string>",
      "type": "property",
      "resultType": "string with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "string"
    },
    "ul of <string>": {
      "key": "ul of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ul",
      "pluralPhrase": "uls",
      "directObjectType": "string"
    },
    "ul <string> of <string>": {
      "key": "ul <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ul",
      "pluralPhrase": "uls",
      "indexType": "string",
      "directObjectType": "string"
    },
    "tuple string item of <string>": {
      "key": "tuple string item of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "tuple string item",
      "pluralPhrase": "tuple string items",
      "directObjectType": "string"
    },
    "tuple string item <integer> of <string>": {
      "key": "tuple string item <integer> of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "tuple string item",
      "pluralPhrase": "tuple string items",
      "indexType": "integer",
      "directObjectType": "string"
    },
    "tt of <string>": {
      "key": "tt of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tt",
      "pluralPhrase": "tts",
      "directObjectType": "string"
    },
    "tt <string> of <string>": {
      "key": "tt <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tt",
      "pluralPhrase": "tts",
      "indexType": "string",
      "directObjectType": "string"
    },
    "tr of <string>": {
      "key": "tr of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tr",
      "pluralPhrase": "trs",
      "directObjectType": "string"
    },
    "tr <string> of <string>": {
      "key": "tr <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tr",
      "pluralPhrase": "trs",
      "indexType": "string",
      "directObjectType": "string"
    },
    "title of <string>": {
      "key": "title of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "title",
      "pluralPhrase": "titles",
      "directObjectType": "string"
    },
    "title <string> of <string>": {
      "key": "title <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "title",
      "pluralPhrase": "titles",
      "indexType": "string",
      "directObjectType": "string"
    },
    "thead of <string>": {
      "key": "thead of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "thead",
      "pluralPhrase": "theads",
      "directObjectType": "string"
    },
    "thead <string> of <string>": {
      "key": "thead <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "thead",
      "pluralPhrase": "theads",
      "indexType": "string",
      "directObjectType": "string"
    },
    "th of <string>": {
      "key": "th of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "th",
      "pluralPhrase": "ths",
      "directObjectType": "string"
    },
    "th <string> of <string>": {
      "key": "th <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "th",
      "pluralPhrase": "ths",
      "indexType": "string",
      "directObjectType": "string"
    },
    "tfoot of <string>": {
      "key": "tfoot of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tfoot",
      "pluralPhrase": "tfoots",
      "directObjectType": "string"
    },
    "tfoot <string> of <string>": {
      "key": "tfoot <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tfoot",
      "pluralPhrase": "tfoots",
      "indexType": "string",
      "directObjectType": "string"
    },
    "td of <string>": {
      "key": "td of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "td",
      "pluralPhrase": "tds",
      "directObjectType": "string"
    },
    "td <string> of <string>": {
      "key": "td <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "td",
      "pluralPhrase": "tds",
      "indexType": "string",
      "directObjectType": "string"
    },
    "tbody of <string>": {
      "key": "tbody of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tbody",
      "pluralPhrase": "tbodys",
      "directObjectType": "string"
    },
    "tbody <string> of <string>": {
      "key": "tbody <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tbody",
      "pluralPhrase": "tbodys",
      "indexType": "string",
      "directObjectType": "string"
    },
    "table of <string>": {
      "key": "table of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "table",
      "pluralPhrase": "tables",
      "directObjectType": "string"
    },
    "table <string> of <string>": {
      "key": "table <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "table",
      "pluralPhrase": "tables",
      "indexType": "string",
      "directObjectType": "string"
    },
    "sup of <string>": {
      "key": "sup of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "sup",
      "pluralPhrase": "sups",
      "directObjectType": "string"
    },
    "sup <string> of <string>": {
      "key": "sup <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "sup",
      "pluralPhrase": "sups",
      "indexType": "string",
      "directObjectType": "string"
    },
    "substring separated by <string> of <string>": {
      "key": "substring separated by <string> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "substring separated by",
      "pluralPhrase": "substrings separated by",
      "indexType": "string",
      "directObjectType": "string"
    },
    "substring between <string> of <string>": {
      "key": "substring between <string> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "substring between",
      "pluralPhrase": "substrings between",
      "indexType": "string",
      "directObjectType": "string"
    },
    "substring before <string> of <string>": {
      "key": "substring before <string> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "substring before",
      "pluralPhrase": "substrings before",
      "indexType": "string",
      "directObjectType": "string"
    },
    "substring after <string> of <string>": {
      "key": "substring after <string> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "substring after",
      "pluralPhrase": "substrings after",
      "indexType": "string",
      "directObjectType": "string"
    },
    "substring <string> of <string>": {
      "key": "substring <string> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "substring",
      "pluralPhrase": "substrings",
      "indexType": "string",
      "directObjectType": "string"
    },
    "substring <( integer, integer )> of <string>": {
      "key": "substring <( integer, integer )> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "substring",
      "pluralPhrase": "substrings",
      "indexType": "( integer, integer )",
      "directObjectType": "string"
    },
    "sub of <string>": {
      "key": "sub of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "sub",
      "pluralPhrase": "subs",
      "directObjectType": "string"
    },
    "sub <string> of <string>": {
      "key": "sub <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "sub",
      "pluralPhrase": "subs",
      "indexType": "string",
      "directObjectType": "string"
    },
    "strong of <string>": {
      "key": "strong of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "strong",
      "pluralPhrase": "strongs",
      "directObjectType": "string"
    },
    "strong <string> of <string>": {
      "key": "strong <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "strong",
      "pluralPhrase": "strongs",
      "indexType": "string",
      "directObjectType": "string"
    },
    "span of <string>": {
      "key": "span of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "span",
      "pluralPhrase": "spans",
      "directObjectType": "string"
    },
    "span <string> of <string>": {
      "key": "span <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "span",
      "pluralPhrase": "spans",
      "indexType": "string",
      "directObjectType": "string"
    },
    "small of <string>": {
      "key": "small of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "small",
      "pluralPhrase": "smalls",
      "directObjectType": "string"
    },
    "small <string> of <string>": {
      "key": "small <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "small",
      "pluralPhrase": "smalls",
      "indexType": "string",
      "directObjectType": "string"
    },
    "set of <string>": {
      "key": "set of <string>",
      "type": "property",
      "resultType": "string set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "string"
    },
    "samp of <string>": {
      "key": "samp of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "samp",
      "pluralPhrase": "samps",
      "directObjectType": "string"
    },
    "samp <string> of <string>": {
      "key": "samp <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "samp",
      "pluralPhrase": "samps",
      "indexType": "string",
      "directObjectType": "string"
    },
    "regex escape of <string>": {
      "key": "regex escape of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "regex escape",
      "pluralPhrase": "regex escapes",
      "directObjectType": "string"
    },
    "q of <string>": {
      "key": "q of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "q",
      "pluralPhrase": "qs",
      "directObjectType": "string"
    },
    "q <string> of <string>": {
      "key": "q <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "q",
      "pluralPhrase": "qs",
      "indexType": "string",
      "directObjectType": "string"
    },
    "pre of <string>": {
      "key": "pre of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "pre",
      "pluralPhrase": "pres",
      "directObjectType": "string"
    },
    "pre <string> of <string>": {
      "key": "pre <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "pre",
      "pluralPhrase": "pres",
      "indexType": "string",
      "directObjectType": "string"
    },
    "position of <string>": {
      "key": "position of <string>",
      "type": "property",
      "resultType": "string position",
      "singularPhrase": "position",
      "pluralPhrase": "positions",
      "directObjectType": "string"
    },
    "position <integer> of <string>": {
      "key": "position <integer> of <string>",
      "type": "property",
      "resultType": "string position",
      "singularPhrase": "position",
      "pluralPhrase": "positions",
      "indexType": "integer",
      "directObjectType": "string"
    },
    "p of <string>": {
      "key": "p of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "p",
      "pluralPhrase": "ps",
      "directObjectType": "string"
    },
    "p <string> of <string>": {
      "key": "p <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "p",
      "pluralPhrase": "ps",
      "indexType": "string",
      "directObjectType": "string"
    },
    "ordered list of <string>": {
      "key": "ordered list of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ordered list",
      "pluralPhrase": "ordered lists",
      "directObjectType": "string"
    },
    "ordered list <string> of <string>": {
      "key": "ordered list <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ordered list",
      "pluralPhrase": "ordered lists",
      "indexType": "string",
      "directObjectType": "string"
    },
    "ol of <string>": {
      "key": "ol of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ol",
      "pluralPhrase": "ols",
      "directObjectType": "string"
    },
    "ol <string> of <string>": {
      "key": "ol <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ol",
      "pluralPhrase": "ols",
      "indexType": "string",
      "directObjectType": "string"
    },
    "numeric value of <string>": {
      "key": "numeric value of <string>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "numeric value",
      "pluralPhrase": "numeric values",
      "directObjectType": "string"
    },
    "meta of <string>": {
      "key": "meta of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "meta",
      "pluralPhrase": "metas",
      "directObjectType": "string"
    },
    "meta <string> of <string>": {
      "key": "meta <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "meta",
      "pluralPhrase": "metas",
      "indexType": "string",
      "directObjectType": "string"
    },
    "match <regular expression> of <string>": {
      "key": "match <regular expression> of <string>",
      "type": "property",
      "resultType": "regular expression match",
      "singularPhrase": "match",
      "pluralPhrase": "matches",
      "indexType": "regular expression",
      "directObjectType": "string"
    },
    "link of <string>": {
      "key": "link of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "directObjectType": "string"
    },
    "link <string> of <string>": {
      "key": "link <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "string",
      "directObjectType": "string"
    },
    "li of <string>": {
      "key": "li of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "li",
      "pluralPhrase": "lis",
      "directObjectType": "string"
    },
    "li <string> of <string>": {
      "key": "li <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "li",
      "pluralPhrase": "lis",
      "indexType": "string",
      "directObjectType": "string"
    },
    "length of <string>": {
      "key": "length of <string>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "string"
    },
    "last <string> of <string>": {
      "key": "last <string> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "last",
      "pluralPhrase": "lasts",
      "indexType": "string",
      "directObjectType": "string"
    },
    "last <integer> of <string>": {
      "key": "last <integer> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "last",
      "pluralPhrase": "lasts",
      "indexType": "integer",
      "directObjectType": "string"
    },
    "kbd of <string>": {
      "key": "kbd of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "kbd",
      "pluralPhrase": "kbds",
      "directObjectType": "string"
    },
    "kbd <string> of <string>": {
      "key": "kbd <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "kbd",
      "pluralPhrase": "kbds",
      "indexType": "string",
      "directObjectType": "string"
    },
    "javascript array <string> of <string>": {
      "key": "javascript array <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "javascript array",
      "pluralPhrase": "javascript arrays",
      "indexType": "string",
      "directObjectType": "string"
    },
    "italic of <string>": {
      "key": "italic of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "italic",
      "pluralPhrase": "italics",
      "directObjectType": "string"
    },
    "italic <string> of <string>": {
      "key": "italic <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "italic",
      "pluralPhrase": "italics",
      "indexType": "string",
      "directObjectType": "string"
    },
    "ins of <string>": {
      "key": "ins of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ins",
      "pluralPhrase": "inss",
      "directObjectType": "string"
    },
    "ins <string> of <string>": {
      "key": "ins <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ins",
      "pluralPhrase": "inss",
      "indexType": "string",
      "directObjectType": "string"
    },
    "html tag <string> of <string>": {
      "key": "html tag <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html tag",
      "pluralPhrase": "html tags",
      "indexType": "string",
      "directObjectType": "string"
    },
    "html of <string>": {
      "key": "html of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html",
      "pluralPhrase": "htmls",
      "directObjectType": "string"
    },
    "html <string> of <string>": {
      "key": "html <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html",
      "pluralPhrase": "htmls",
      "indexType": "string",
      "directObjectType": "string"
    },
    "head of <string>": {
      "key": "head of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "head",
      "pluralPhrase": "heads",
      "directObjectType": "string"
    },
    "head <string> of <string>": {
      "key": "head <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "head",
      "pluralPhrase": "heads",
      "indexType": "string",
      "directObjectType": "string"
    },
    "h6 of <string>": {
      "key": "h6 of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h6",
      "pluralPhrase": "h6s",
      "directObjectType": "string"
    },
    "h6 <string> of <string>": {
      "key": "h6 <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h6",
      "pluralPhrase": "h6s",
      "indexType": "string",
      "directObjectType": "string"
    },
    "h5 of <string>": {
      "key": "h5 of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h5",
      "pluralPhrase": "h5s",
      "directObjectType": "string"
    },
    "h5 <string> of <string>": {
      "key": "h5 <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h5",
      "pluralPhrase": "h5s",
      "indexType": "string",
      "directObjectType": "string"
    },
    "h4 of <string>": {
      "key": "h4 of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h4",
      "pluralPhrase": "h4s",
      "directObjectType": "string"
    },
    "h4 <string> of <string>": {
      "key": "h4 <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h4",
      "pluralPhrase": "h4s",
      "indexType": "string",
      "directObjectType": "string"
    },
    "h3 of <string>": {
      "key": "h3 of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h3",
      "pluralPhrase": "h3s",
      "directObjectType": "string"
    },
    "h3 <string> of <string>": {
      "key": "h3 <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h3",
      "pluralPhrase": "h3s",
      "indexType": "string",
      "directObjectType": "string"
    },
    "h2 of <string>": {
      "key": "h2 of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h2",
      "pluralPhrase": "h2s",
      "directObjectType": "string"
    },
    "h2 <string> of <string>": {
      "key": "h2 <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h2",
      "pluralPhrase": "h2s",
      "indexType": "string",
      "directObjectType": "string"
    },
    "h1 of <string>": {
      "key": "h1 of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h1",
      "pluralPhrase": "h1s",
      "directObjectType": "string"
    },
    "h1 <string> of <string>": {
      "key": "h1 <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h1",
      "pluralPhrase": "h1s",
      "indexType": "string",
      "directObjectType": "string"
    },
    "first match <regular expression> of <string>": {
      "key": "first match <regular expression> of <string>",
      "type": "property",
      "resultType": "regular expression match",
      "singularPhrase": "first match",
      "pluralPhrase": "first matches",
      "indexType": "regular expression",
      "directObjectType": "string"
    },
    "first <string> of <string>": {
      "key": "first <string> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "first",
      "pluralPhrase": "firsts",
      "indexType": "string",
      "directObjectType": "string"
    },
    "first <integer> of <string>": {
      "key": "first <integer> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "first",
      "pluralPhrase": "firsts",
      "indexType": "integer",
      "directObjectType": "string"
    },
    "em of <string>": {
      "key": "em of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "em",
      "pluralPhrase": "ems",
      "directObjectType": "string"
    },
    "em <string> of <string>": {
      "key": "em <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "em",
      "pluralPhrase": "ems",
      "indexType": "string",
      "directObjectType": "string"
    },
    "dt of <string>": {
      "key": "dt of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dt",
      "pluralPhrase": "dts",
      "directObjectType": "string"
    },
    "dt <string> of <string>": {
      "key": "dt <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dt",
      "pluralPhrase": "dts",
      "indexType": "string",
      "directObjectType": "string"
    },
    "div of <string>": {
      "key": "div of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "div",
      "pluralPhrase": "divs",
      "directObjectType": "string"
    },
    "div <string> of <string>": {
      "key": "div <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "div",
      "pluralPhrase": "divs",
      "indexType": "string",
      "directObjectType": "string"
    },
    "dfn of <string>": {
      "key": "dfn of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dfn",
      "pluralPhrase": "dfns",
      "directObjectType": "string"
    },
    "dfn <string> of <string>": {
      "key": "dfn <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dfn",
      "pluralPhrase": "dfns",
      "indexType": "string",
      "directObjectType": "string"
    },
    "del of <string>": {
      "key": "del of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "del",
      "pluralPhrase": "dels",
      "directObjectType": "string"
    },
    "del <string> of <string>": {
      "key": "del <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "del",
      "pluralPhrase": "dels",
      "indexType": "string",
      "directObjectType": "string"
    },
    "definition list of <string>": {
      "key": "definition list of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "definition list",
      "pluralPhrase": "definition lists",
      "directObjectType": "string"
    },
    "definition list <string> of <string>": {
      "key": "definition list <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "definition list",
      "pluralPhrase": "definition lists",
      "indexType": "string",
      "directObjectType": "string"
    },
    "dd of <string>": {
      "key": "dd of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dd",
      "pluralPhrase": "dds",
      "directObjectType": "string"
    },
    "dd <string> of <string>": {
      "key": "dd <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dd",
      "pluralPhrase": "dds",
      "indexType": "string",
      "directObjectType": "string"
    },
    "concatenation of <string>": {
      "key": "concatenation of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "concatenation",
      "pluralPhrase": "concatenations",
      "directObjectType": "string"
    },
    "concatenation <string> of <string>": {
      "key": "concatenation <string> of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "concatenation",
      "pluralPhrase": "concatenations",
      "indexType": "string",
      "directObjectType": "string"
    },
    "concatenation <html> of <string>": {
      "key": "concatenation <html> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "concatenation",
      "pluralPhrase": "concatenations",
      "indexType": "html",
      "directObjectType": "string"
    },
    "colgroup of <string>": {
      "key": "colgroup of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "colgroup",
      "pluralPhrase": "colgroups",
      "directObjectType": "string"
    },
    "colgroup <string> of <string>": {
      "key": "colgroup <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "colgroup",
      "pluralPhrase": "colgroups",
      "indexType": "string",
      "directObjectType": "string"
    },
    "col of <string>": {
      "key": "col of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "col",
      "pluralPhrase": "cols",
      "directObjectType": "string"
    },
    "col <string> of <string>": {
      "key": "col <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "col",
      "pluralPhrase": "cols",
      "indexType": "string",
      "directObjectType": "string"
    },
    "code of <string>": {
      "key": "code of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "code",
      "pluralPhrase": "codes",
      "directObjectType": "string"
    },
    "code <string> of <string>": {
      "key": "code <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "code",
      "pluralPhrase": "codes",
      "indexType": "string",
      "directObjectType": "string"
    },
    "cite of <string>": {
      "key": "cite of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "cite",
      "pluralPhrase": "cites",
      "directObjectType": "string"
    },
    "cite <string> of <string>": {
      "key": "cite <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "cite",
      "pluralPhrase": "cites",
      "indexType": "string",
      "directObjectType": "string"
    },
    "character of <string>": {
      "key": "character of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "character",
      "pluralPhrase": "characters",
      "directObjectType": "string"
    },
    "character <integer> of <string>": {
      "key": "character <integer> of <string>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "character",
      "pluralPhrase": "characters",
      "indexType": "integer",
      "directObjectType": "string"
    },
    "caption of <string>": {
      "key": "caption of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "caption",
      "pluralPhrase": "captions",
      "directObjectType": "string"
    },
    "caption <string> of <string>": {
      "key": "caption <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "caption",
      "pluralPhrase": "captions",
      "indexType": "string",
      "directObjectType": "string"
    },
    "body of <string>": {
      "key": "body of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "body",
      "pluralPhrase": "bodys",
      "directObjectType": "string"
    },
    "body <string> of <string>": {
      "key": "body <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "body",
      "pluralPhrase": "bodys",
      "indexType": "string",
      "directObjectType": "string"
    },
    "blockquote of <string>": {
      "key": "blockquote of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "blockquote",
      "pluralPhrase": "blockquotes",
      "directObjectType": "string"
    },
    "blockquote <string> of <string>": {
      "key": "blockquote <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "blockquote",
      "pluralPhrase": "blockquotes",
      "indexType": "string",
      "directObjectType": "string"
    },
    "big of <string>": {
      "key": "big of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "big",
      "pluralPhrase": "bigs",
      "directObjectType": "string"
    },
    "big <string> of <string>": {
      "key": "big <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "big",
      "pluralPhrase": "bigs",
      "indexType": "string",
      "directObjectType": "string"
    },
    "base of <string>": {
      "key": "base of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "base",
      "pluralPhrase": "bases",
      "directObjectType": "string"
    },
    "base <string> of <string>": {
      "key": "base <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "base",
      "pluralPhrase": "bases",
      "indexType": "string",
      "directObjectType": "string"
    },
    "b of <string>": {
      "key": "b of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "b",
      "pluralPhrase": "bs",
      "directObjectType": "string"
    },
    "b <string> of <string>": {
      "key": "b <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "b",
      "pluralPhrase": "bs",
      "indexType": "string",
      "directObjectType": "string"
    },
    "anchor of <string>": {
      "key": "anchor of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "anchor",
      "pluralPhrase": "anchors",
      "directObjectType": "string"
    },
    "anchor <string> of <string>": {
      "key": "anchor <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "anchor",
      "pluralPhrase": "anchors",
      "indexType": "string",
      "directObjectType": "string"
    },
    "address of <string>": {
      "key": "address of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "address",
      "pluralPhrase": "addresss",
      "directObjectType": "string"
    },
    "address <string> of <string>": {
      "key": "address <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "address",
      "pluralPhrase": "addresss",
      "indexType": "string",
      "directObjectType": "string"
    },
    "acronym of <string>": {
      "key": "acronym of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "acronym",
      "pluralPhrase": "acronyms",
      "directObjectType": "string"
    },
    "acronym <string> of <string>": {
      "key": "acronym <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "acronym",
      "pluralPhrase": "acronyms",
      "indexType": "string",
      "directObjectType": "string"
    },
    "abbr of <string>": {
      "key": "abbr of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "abbr",
      "pluralPhrase": "abbrs",
      "directObjectType": "string"
    },
    "abbr <string> of <string>": {
      "key": "abbr <string> of <string>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "abbr",
      "pluralPhrase": "abbrs",
      "indexType": "string",
      "directObjectType": "string"
    },
    "<version> = <string>": {
      "key": "<version> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "version",
      "op": "=",
      "rightType": "string"
    },
    "<version> <= <string>": {
      "key": "<version> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "version",
      "op": "<=",
      "rightType": "string"
    },
    "<version> < <string>": {
      "key": "<version> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "version",
      "op": "<",
      "rightType": "string"
    },
    "<string> starts with <string>": {
      "key": "<string> starts with <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "starts with",
      "rightType": "string"
    },
    "<string> ends with <string>": {
      "key": "<string> ends with <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "ends with",
      "rightType": "string"
    },
    "<string> contains <string>": {
      "key": "<string> contains <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "contains",
      "rightType": "string"
    },
    "<string> as zoned time_of_day": {
      "key": "<string> as zoned time_of_day",
      "type": "cast",
      "resultType": "time of day with time zone",
      "argType": "string",
      "phrase": "zoned time_of_day"
    },
    "<string> as year": {
      "key": "<string> as year",
      "type": "cast",
      "resultType": "year",
      "argType": "string",
      "phrase": "year"
    },
    "<string> as windows display time": {
      "key": "<string> as windows display time",
      "type": "cast",
      "resultType": "time",
      "argType": "string",
      "phrase": "windows display time"
    },
    "<string> as version": {
      "key": "<string> as version",
      "type": "cast",
      "resultType": "version",
      "argType": "string",
      "phrase": "version"
    },
    "<string> as uppercase": {
      "key": "<string> as uppercase",
      "type": "cast",
      "resultType": "string",
      "argType": "string",
      "phrase": "uppercase"
    },
    "<string> as universal zoned time_of_day": {
      "key": "<string> as universal zoned time_of_day",
      "type": "cast",
      "resultType": "time of day with time zone",
      "argType": "string",
      "phrase": "universal zoned time_of_day"
    },
    "<string> as universal time": {
      "key": "<string> as universal time",
      "type": "cast",
      "resultType": "time",
      "argType": "string",
      "phrase": "universal time"
    },
    "<string> as trimmed string": {
      "key": "<string> as trimmed string",
      "type": "cast",
      "resultType": "string",
      "argType": "string",
      "phrase": "trimmed string"
    },
    "<string> as time_of_day": {
      "key": "<string> as time_of_day",
      "type": "cast",
      "resultType": "time of day",
      "argType": "string",
      "phrase": "time_of_day"
    },
    "<string> as time": {
      "key": "<string> as time",
      "type": "cast",
      "resultType": "time",
      "argType": "string",
      "phrase": "time"
    },
    "<string> as time zone": {
      "key": "<string> as time zone",
      "type": "cast",
      "resultType": "time zone",
      "argType": "string",
      "phrase": "time zone"
    },
    "<string> as time interval": {
      "key": "<string> as time interval",
      "type": "cast",
      "resultType": "time interval",
      "argType": "string",
      "phrase": "time interval"
    },
    "<string> as string": {
      "key": "<string> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "string",
      "phrase": "string"
    },
    "<string> as site version list": {
      "key": "<string> as site version list",
      "type": "cast",
      "resultType": "site version list",
      "argType": "string",
      "phrase": "site version list"
    },
    "<string> as right trimmed string": {
      "key": "<string> as right trimmed string",
      "type": "cast",
      "resultType": "string",
      "argType": "string",
      "phrase": "right trimmed string"
    },
    "<string> as month": {
      "key": "<string> as month",
      "type": "cast",
      "resultType": "month",
      "argType": "string",
      "phrase": "month"
    },
    "<string> as lowercase": {
      "key": "<string> as lowercase",
      "type": "cast",
      "resultType": "string",
      "argType": "string",
      "phrase": "lowercase"
    },
    "<string> as local zoned time_of_day": {
      "key": "<string> as local zoned time_of_day",
      "type": "cast",
      "resultType": "time of day with time zone",
      "argType": "string",
      "phrase": "local zoned time_of_day"
    },
    "<string> as local time": {
      "key": "<string> as local time",
      "type": "cast",
      "resultType": "time",
      "argType": "string",
      "phrase": "local time"
    },
    "<string> as left trimmed string": {
      "key": "<string> as left trimmed string",
      "type": "cast",
      "resultType": "string",
      "argType": "string",
      "phrase": "left trimmed string"
    },
    "<string> as ipv6 address": {
      "key": "<string> as ipv6 address",
      "type": "cast",
      "resultType": "ipv6 address",
      "argType": "string",
      "phrase": "ipv6 address"
    },
    "<string> as ipv4or6 address": {
      "key": "<string> as ipv4or6 address",
      "type": "cast",
      "resultType": "ipv4or6 address",
      "argType": "string",
      "phrase": "ipv4or6 address"
    },
    "<string> as integer": {
      "key": "<string> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "string",
      "phrase": "integer"
    },
    "<string> as html": {
      "key": "<string> as html",
      "type": "cast",
      "resultType": "html",
      "argType": "string",
      "phrase": "html"
    },
    "<string> as hexadecimal": {
      "key": "<string> as hexadecimal",
      "type": "cast",
      "resultType": "string",
      "argType": "string",
      "phrase": "hexadecimal"
    },
    "<string> as floating point": {
      "key": "<string> as floating point",
      "type": "cast",
      "resultType": "floating point",
      "argType": "string",
      "phrase": "floating point"
    },
    "<string> as day_of_week": {
      "key": "<string> as day_of_week",
      "type": "cast",
      "resultType": "day of week",
      "argType": "string",
      "phrase": "day_of_week"
    },
    "<string> as day_of_month": {
      "key": "<string> as day_of_month",
      "type": "cast",
      "resultType": "day of month",
      "argType": "string",
      "phrase": "day_of_month"
    },
    "<string> as date": {
      "key": "<string> as date",
      "type": "cast",
      "resultType": "date",
      "argType": "string",
      "phrase": "date"
    },
    "<string> as boolean": {
      "key": "<string> as boolean",
      "type": "cast",
      "resultType": "boolean",
      "argType": "string",
      "phrase": "boolean"
    },
    "<string> = <version>": {
      "key": "<string> = <version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "version"
    },
    "<string> = <string>": {
      "key": "<string> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "string"
    },
    "<string> <= <version>": {
      "key": "<string> <= <version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "version"
    },
    "<string> <= <string>": {
      "key": "<string> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "string"
    },
    "<string> < <version>": {
      "key": "<string> < <version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "version"
    },
    "<string> < <string>": {
      "key": "<string> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "string"
    },
    "<string> & <string>": {
      "key": "<string> & <string>",
      "type": "binaryOp",
      "resultType": "string",
      "leftType": "string",
      "op": "&",
      "rightType": "string"
    },
    "<string set> contains <string>": {
      "key": "<string set> contains <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string set",
      "op": "contains",
      "rightType": "string"
    },
    "variance of <statistical bin>": {
      "key": "variance of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "variance",
      "pluralPhrase": "variances",
      "directObjectType": "statistical bin"
    },
    "total upper bound of <statistical bin>": {
      "key": "total upper bound of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "total upper bound",
      "pluralPhrase": "total upper bounds",
      "directObjectType": "statistical bin"
    },
    "total lower bound of <statistical bin>": {
      "key": "total lower bound of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "total lower bound",
      "pluralPhrase": "total lower bounds",
      "directObjectType": "statistical bin"
    },
    "success rate of <statistical bin>": {
      "key": "success rate of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "success rate",
      "pluralPhrase": "success rates",
      "directObjectType": "statistical bin"
    },
    "start of <statistical bin>": {
      "key": "start of <statistical bin>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "start",
      "pluralPhrase": "starts",
      "directObjectType": "statistical bin"
    },
    "standard deviation of <statistical bin>": {
      "key": "standard deviation of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "standard deviation",
      "pluralPhrase": "standard deviations",
      "directObjectType": "statistical bin"
    },
    "skewness of <statistical bin>": {
      "key": "skewness of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "skewness",
      "pluralPhrase": "skewnesses",
      "directObjectType": "statistical bin"
    },
    "minimum value of <statistical bin>": {
      "key": "minimum value of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "minimum value",
      "pluralPhrase": "minimum values",
      "directObjectType": "statistical bin"
    },
    "minimum single computer total of <statistical bin>": {
      "key": "minimum single computer total of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "minimum single computer total",
      "pluralPhrase": "minimum single computer totals",
      "directObjectType": "statistical bin"
    },
    "mean zero value count of <statistical bin>": {
      "key": "mean zero value count of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean zero value count",
      "pluralPhrase": "mean zero value counts",
      "directObjectType": "statistical bin"
    },
    "mean value count of <statistical bin>": {
      "key": "mean value count of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean value count",
      "pluralPhrase": "mean value counts",
      "directObjectType": "statistical bin"
    },
    "mean total of <statistical bin>": {
      "key": "mean total of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean total",
      "pluralPhrase": "mean totals",
      "directObjectType": "statistical bin"
    },
    "mean successful computer count of <statistical bin>": {
      "key": "mean successful computer count of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean successful computer count",
      "pluralPhrase": "mean successful computer counts",
      "directObjectType": "statistical bin"
    },
    "mean sample rate of <statistical bin>": {
      "key": "mean sample rate of <statistical bin>",
      "type": "property",
      "resultType": "rate",
      "singularPhrase": "mean sample rate",
      "pluralPhrase": "mean sample rates",
      "directObjectType": "statistical bin"
    },
    "mean sample interval of <statistical bin>": {
      "key": "mean sample interval of <statistical bin>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "mean sample interval",
      "pluralPhrase": "mean sample intervals",
      "directObjectType": "statistical bin"
    },
    "mean of <statistical bin>": {
      "key": "mean of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean",
      "pluralPhrase": "means",
      "directObjectType": "statistical bin"
    },
    "mean nonzero value count of <statistical bin>": {
      "key": "mean nonzero value count of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean nonzero value count",
      "pluralPhrase": "mean nonzero value counts",
      "directObjectType": "statistical bin"
    },
    "mean logarithm of <statistical bin>": {
      "key": "mean logarithm of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean logarithm",
      "pluralPhrase": "mean logarithms",
      "directObjectType": "statistical bin"
    },
    "mean failing computer count of <statistical bin>": {
      "key": "mean failing computer count of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean failing computer count",
      "pluralPhrase": "mean failing computer counts",
      "directObjectType": "statistical bin"
    },
    "mean computer count of <statistical bin>": {
      "key": "mean computer count of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean computer count",
      "pluralPhrase": "mean computer counts",
      "directObjectType": "statistical bin"
    },
    "maximum value of <statistical bin>": {
      "key": "maximum value of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "maximum value",
      "pluralPhrase": "maximum values",
      "directObjectType": "statistical bin"
    },
    "maximum single computer total of <statistical bin>": {
      "key": "maximum single computer total of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "maximum single computer total",
      "pluralPhrase": "maximum single computer totals",
      "directObjectType": "statistical bin"
    },
    "logarithm variance of <statistical bin>": {
      "key": "logarithm variance of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "logarithm variance",
      "pluralPhrase": "logarithm variances",
      "directObjectType": "statistical bin"
    },
    "logarithm standard deviation of <statistical bin>": {
      "key": "logarithm standard deviation of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "logarithm standard deviation",
      "pluralPhrase": "logarithm standard deviations",
      "directObjectType": "statistical bin"
    },
    "logarithm skewness of <statistical bin>": {
      "key": "logarithm skewness of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "logarithm skewness",
      "pluralPhrase": "logarithm skewnesses",
      "directObjectType": "statistical bin"
    },
    "logarithm kurtosis of <statistical bin>": {
      "key": "logarithm kurtosis of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "logarithm kurtosis",
      "pluralPhrase": "logarithm kurtoses",
      "directObjectType": "statistical bin"
    },
    "linear fit of <statistical bin>": {
      "key": "linear fit of <statistical bin>",
      "type": "property",
      "resultType": "linear projection",
      "singularPhrase": "linear fit",
      "pluralPhrase": "linear fits",
      "directObjectType": "statistical bin"
    },
    "length of <statistical bin>": {
      "key": "length of <statistical bin>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "statistical bin"
    },
    "kurtosis of <statistical bin>": {
      "key": "kurtosis of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "kurtosis",
      "pluralPhrase": "kurtoses",
      "directObjectType": "statistical bin"
    },
    "javascript array <string> of <statistical bin>": {
      "key": "javascript array <string> of <statistical bin>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "javascript array",
      "pluralPhrase": "javascript arrays",
      "indexType": "string",
      "directObjectType": "statistical bin"
    },
    "geometric mean of <statistical bin>": {
      "key": "geometric mean of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "geometric mean",
      "pluralPhrase": "geometric means",
      "directObjectType": "statistical bin"
    },
    "failure rate of <statistical bin>": {
      "key": "failure rate of <statistical bin>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "failure rate",
      "pluralPhrase": "failure rates",
      "directObjectType": "statistical bin"
    },
    "exponential fit of <statistical bin>": {
      "key": "exponential fit of <statistical bin>",
      "type": "property",
      "resultType": "exponential projection",
      "singularPhrase": "exponential fit",
      "pluralPhrase": "exponential fits",
      "directObjectType": "statistical bin"
    },
    "end of <statistical bin>": {
      "key": "end of <statistical bin>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "end",
      "pluralPhrase": "ends",
      "directObjectType": "statistical bin"
    },
    "total of <statistic range>": {
      "key": "total of <statistic range>",
      "type": "property",
      "resultType": "statistical bin",
      "singularPhrase": "total",
      "pluralPhrase": "totals",
      "directObjectType": "statistic range"
    },
    "total <time interval> of <statistic range>": {
      "key": "total <time interval> of <statistic range>",
      "type": "property",
      "resultType": "statistical bin",
      "singularPhrase": "total",
      "pluralPhrase": "totals",
      "indexType": "time interval",
      "directObjectType": "statistic range"
    },
    "start of <statistic range>": {
      "key": "start of <statistic range>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "start",
      "pluralPhrase": "starts",
      "directObjectType": "statistic range"
    },
    "range <time range> of <statistic range>": {
      "key": "range <time range> of <statistic range>",
      "type": "property",
      "resultType": "statistic range",
      "singularPhrase": "range",
      "pluralPhrase": "ranges",
      "indexType": "time range",
      "directObjectType": "statistic range"
    },
    "end of <statistic range>": {
      "key": "end of <statistic range>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "end",
      "pluralPhrase": "ends",
      "directObjectType": "statistic range"
    },
    "bin of <statistic range>": {
      "key": "bin of <statistic range>",
      "type": "property",
      "resultType": "statistical bin",
      "singularPhrase": "bin",
      "pluralPhrase": "bins",
      "directObjectType": "statistic range"
    },
    "bin at <time> of <statistic range>": {
      "key": "bin at <time> of <statistic range>",
      "type": "property",
      "resultType": "statistical bin",
      "singularPhrase": "bin at",
      "pluralPhrase": "bins at",
      "indexType": "time",
      "directObjectType": "statistic range"
    },
    "multiplicity of <site version list with multiplicity>": {
      "key": "multiplicity of <site version list with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "site version list with multiplicity"
    },
    "unique value of <site version list>": {
      "key": "unique value of <site version list>",
      "type": "property",
      "resultType": "site version list with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "site version list"
    },
    "minimum of <site version list>": {
      "key": "minimum of <site version list>",
      "type": "property",
      "resultType": "site version list",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "site version list"
    },
    "maximum of <site version list>": {
      "key": "maximum of <site version list>",
      "type": "property",
      "resultType": "site version list",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "site version list"
    },
    "extrema of <site version list>": {
      "key": "extrema of <site version list>",
      "type": "property",
      "resultType": "( site version list, site version list )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "site version list"
    },
    "component <integer> of <site version list>": {
      "key": "component <integer> of <site version list>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "component",
      "pluralPhrase": "components",
      "indexType": "integer",
      "directObjectType": "site version list"
    },
    "<site version list> contains <site version list>": {
      "key": "<site version list> contains <site version list>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "site version list",
      "op": "contains",
      "rightType": "site version list"
    },
    "<site version list> as string": {
      "key": "<site version list> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "site version list",
      "phrase": "string"
    },
    "<site version list> = <site version list>": {
      "key": "<site version list> = <site version list>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "site version list",
      "op": "=",
      "rightType": "site version list"
    },
    "<site version list> <= <site version list>": {
      "key": "<site version list> <= <site version list>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "site version list",
      "op": "<=",
      "rightType": "site version list"
    },
    "<site version list> < <site version list>": {
      "key": "<site version list> < <site version list>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "site version list",
      "op": "<",
      "rightType": "site version list"
    },
    "length of <rope>": {
      "key": "length of <rope>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "rope"
    },
    "<string> & <rope>": {
      "key": "<string> & <rope>",
      "type": "binaryOp",
      "resultType": "rope",
      "leftType": "string",
      "op": "&",
      "rightType": "rope"
    },
    "<rope> contains <string>": {
      "key": "<rope> contains <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rope",
      "op": "contains",
      "rightType": "string"
    },
    "<rope> as string": {
      "key": "<rope> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "rope",
      "phrase": "string"
    },
    "<rope> & <string>": {
      "key": "<rope> & <string>",
      "type": "binaryOp",
      "resultType": "rope",
      "leftType": "rope",
      "op": "&",
      "rightType": "string"
    },
    "<rope> & <rope>": {
      "key": "<rope> & <rope>",
      "type": "binaryOp",
      "resultType": "rope",
      "leftType": "rope",
      "op": "&",
      "rightType": "rope"
    },
    "parenthesized part of <regular expression match>": {
      "key": "parenthesized part of <regular expression match>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "parenthesized part",
      "pluralPhrase": "parenthesized parts",
      "directObjectType": "regular expression match"
    },
    "parenthesized part <integer> of <regular expression match>": {
      "key": "parenthesized part <integer> of <regular expression match>",
      "type": "property",
      "resultType": "substring",
      "singularPhrase": "parenthesized part",
      "pluralPhrase": "parenthesized parts",
      "indexType": "integer",
      "directObjectType": "regular expression match"
    },
    "<string> starts with <regular expression>": {
      "key": "<string> starts with <regular expression>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "starts with",
      "rightType": "regular expression"
    },
    "<string> ends with <regular expression>": {
      "key": "<string> ends with <regular expression>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "ends with",
      "rightType": "regular expression"
    },
    "<string> contains <regular expression>": {
      "key": "<string> contains <regular expression>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "contains",
      "rightType": "regular expression"
    },
    "<string> = <regular expression>": {
      "key": "<string> = <regular expression>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "regular expression"
    },
    "<regular expression> = <string>": {
      "key": "<regular expression> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "regular expression",
      "op": "=",
      "rightType": "string"
    },
    "multiplicity of <rate with multiplicity>": {
      "key": "multiplicity of <rate with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "rate with multiplicity"
    },
    "unique value of <rate>": {
      "key": "unique value of <rate>",
      "type": "property",
      "resultType": "rate with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "rate"
    },
    "minimum of <rate>": {
      "key": "minimum of <rate>",
      "type": "property",
      "resultType": "rate",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "rate"
    },
    "maximum of <rate>": {
      "key": "maximum of <rate>",
      "type": "property",
      "resultType": "rate",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "rate"
    },
    "extrema of <rate>": {
      "key": "extrema of <rate>",
      "type": "property",
      "resultType": "( rate, rate )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "rate"
    },
    "<time interval> * <rate>": {
      "key": "<time interval> * <rate>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "time interval",
      "op": "*",
      "rightType": "rate"
    },
    "<rate> as string": {
      "key": "<rate> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "rate",
      "phrase": "string"
    },
    "<rate> = <rate>": {
      "key": "<rate> = <rate>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rate",
      "op": "=",
      "rightType": "rate"
    },
    "<rate> <= <rate>": {
      "key": "<rate> <= <rate>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rate",
      "op": "<=",
      "rightType": "rate"
    },
    "<rate> < <rate>": {
      "key": "<rate> < <rate>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rate",
      "op": "<",
      "rightType": "rate"
    },
    "<rate> - <rate>": {
      "key": "<rate> - <rate>",
      "type": "binaryOp",
      "resultType": "rate",
      "leftType": "rate",
      "op": "-",
      "rightType": "rate"
    },
    "<rate> + <rate>": {
      "key": "<rate> + <rate>",
      "type": "binaryOp",
      "resultType": "rate",
      "leftType": "rate",
      "op": "+",
      "rightType": "rate"
    },
    "<rate> * <time interval>": {
      "key": "<rate> * <time interval>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "rate",
      "op": "*",
      "rightType": "time interval"
    },
    "- <rate>": {
      "key": "- <rate>",
      "type": "unaryOp",
      "resultType": "rate",
      "argType": "rate",
      "op": "-"
    },
    "usual name of <property>": {
      "key": "usual name of <property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "usual name",
      "pluralPhrase": "usual names",
      "directObjectType": "property"
    },
    "singular name of <property>": {
      "key": "singular name of <property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "singular name",
      "pluralPhrase": "singular names",
      "directObjectType": "property"
    },
    "result type of <property>": {
      "key": "result type of <property>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "result type",
      "pluralPhrase": "result types",
      "directObjectType": "property"
    },
    "plural name of <property>": {
      "key": "plural name of <property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "plural name",
      "pluralPhrase": "plural names",
      "directObjectType": "property"
    },
    "multivalued of <property>": {
      "key": "multivalued of <property>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "multivalued",
      "pluralPhrase": "multivalueds",
      "directObjectType": "property"
    },
    "index type of <property>": {
      "key": "index type of <property>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "index type",
      "pluralPhrase": "index types",
      "directObjectType": "property"
    },
    "direct object type of <property>": {
      "key": "direct object type of <property>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "direct object type",
      "pluralPhrase": "direct object types",
      "directObjectType": "property"
    },
    "dependency known of <property>": {
      "key": "dependency known of <property>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "dependency known",
      "pluralPhrase": "dependencies known",
      "directObjectType": "property"
    },
    "<property> as string": {
      "key": "<property> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "property",
      "phrase": "string"
    },
    "multiplicity of <number of months with multiplicity>": {
      "key": "multiplicity of <number of months with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "number of months with multiplicity"
    },
    "unique value of <number of months>": {
      "key": "unique value of <number of months>",
      "type": "property",
      "resultType": "number of months with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "number of months"
    },
    "minimum of <number of months>": {
      "key": "minimum of <number of months>",
      "type": "property",
      "resultType": "number of months",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "number of months"
    },
    "maximum of <number of months>": {
      "key": "maximum of <number of months>",
      "type": "property",
      "resultType": "number of months",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "number of months"
    },
    "extrema of <number of months>": {
      "key": "extrema of <number of months>",
      "type": "property",
      "resultType": "( number of months, number of months )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "number of months"
    },
    "<year> - <number of months>": {
      "key": "<year> - <number of months>",
      "type": "binaryOp",
      "resultType": "year",
      "leftType": "year",
      "op": "-",
      "rightType": "number of months"
    },
    "<year> + <number of months>": {
      "key": "<year> + <number of months>",
      "type": "binaryOp",
      "resultType": "year",
      "leftType": "year",
      "op": "+",
      "rightType": "number of months"
    },
    "<number of months> mod <number of months>": {
      "key": "<number of months> mod <number of months>",
      "type": "binaryOp",
      "resultType": "number of months",
      "leftType": "number of months",
      "op": "mod",
      "rightType": "number of months"
    },
    "<number of months> as string": {
      "key": "<number of months> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "number of months",
      "phrase": "string"
    },
    "<number of months> = <number of months>": {
      "key": "<number of months> = <number of months>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "number of months",
      "op": "=",
      "rightType": "number of months"
    },
    "<number of months> <= <number of months>": {
      "key": "<number of months> <= <number of months>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "number of months",
      "op": "<=",
      "rightType": "number of months"
    },
    "<number of months> < <number of months>": {
      "key": "<number of months> < <number of months>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "number of months",
      "op": "<",
      "rightType": "number of months"
    },
    "<number of months> / <number of months>": {
      "key": "<number of months> / <number of months>",
      "type": "binaryOp",
      "resultType": "integer",
      "leftType": "number of months",
      "op": "/",
      "rightType": "number of months"
    },
    "<number of months> - <number of months>": {
      "key": "<number of months> - <number of months>",
      "type": "binaryOp",
      "resultType": "number of months",
      "leftType": "number of months",
      "op": "-",
      "rightType": "number of months"
    },
    "<number of months> + <year>": {
      "key": "<number of months> + <year>",
      "type": "binaryOp",
      "resultType": "year",
      "leftType": "number of months",
      "op": "+",
      "rightType": "year"
    },
    "<number of months> + <number of months>": {
      "key": "<number of months> + <number of months>",
      "type": "binaryOp",
      "resultType": "number of months",
      "leftType": "number of months",
      "op": "+",
      "rightType": "number of months"
    },
    "- <number of months>": {
      "key": "- <number of months>",
      "type": "unaryOp",
      "resultType": "number of months",
      "argType": "number of months",
      "op": "-"
    },
    "multiplicity of <month with multiplicity>": {
      "key": "multiplicity of <month with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "month with multiplicity"
    },
    "multiplicity of <month and year with multiplicity>": {
      "key": "multiplicity of <month and year with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "month and year with multiplicity"
    },
    "year of <month and year>": {
      "key": "year of <month and year>",
      "type": "property",
      "resultType": "year",
      "singularPhrase": "year",
      "pluralPhrase": "years",
      "directObjectType": "month and year"
    },
    "unique value of <month and year>": {
      "key": "unique value of <month and year>",
      "type": "property",
      "resultType": "month and year with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "month and year"
    },
    "month of <month and year>": {
      "key": "month of <month and year>",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "month",
      "pluralPhrase": "months",
      "directObjectType": "month and year"
    },
    "minimum of <month and year>": {
      "key": "minimum of <month and year>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "month and year"
    },
    "maximum of <month and year>": {
      "key": "maximum of <month and year>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "month and year"
    },
    "length of <month and year>": {
      "key": "length of <month and year>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "month and year"
    },
    "first wednesday of <month and year>": {
      "key": "first wednesday of <month and year>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "first wednesday",
      "pluralPhrase": "first wednesdays",
      "directObjectType": "month and year"
    },
    "first tuesday of <month and year>": {
      "key": "first tuesday of <month and year>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "first tuesday",
      "pluralPhrase": "first tuesdays",
      "directObjectType": "month and year"
    },
    "first thursday of <month and year>": {
      "key": "first thursday of <month and year>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "first thursday",
      "pluralPhrase": "first thursdays",
      "directObjectType": "month and year"
    },
    "first sunday of <month and year>": {
      "key": "first sunday of <month and year>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "first sunday",
      "pluralPhrase": "first sundays",
      "directObjectType": "month and year"
    },
    "first saturday of <month and year>": {
      "key": "first saturday of <month and year>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "first saturday",
      "pluralPhrase": "first saturdays",
      "directObjectType": "month and year"
    },
    "first monday of <month and year>": {
      "key": "first monday of <month and year>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "first monday",
      "pluralPhrase": "first mondays",
      "directObjectType": "month and year"
    },
    "first friday of <month and year>": {
      "key": "first friday of <month and year>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "first friday",
      "pluralPhrase": "first fridays",
      "directObjectType": "month and year"
    },
    "first <day of week> of <month and year>": {
      "key": "first <day of week> of <month and year>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "first",
      "pluralPhrase": "firsts",
      "indexType": "day of week",
      "directObjectType": "month and year"
    },
    "extrema of <month and year>": {
      "key": "extrema of <month and year>",
      "type": "property",
      "resultType": "( month and year, month and year )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "month and year"
    },
    "<number of months> + <month and year>": {
      "key": "<number of months> + <month and year>",
      "type": "binaryOp",
      "resultType": "month and year",
      "leftType": "number of months",
      "op": "+",
      "rightType": "month and year"
    },
    "<month and year> as string": {
      "key": "<month and year> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "month and year",
      "phrase": "string"
    },
    "<month and year> = <month and year>": {
      "key": "<month and year> = <month and year>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "month and year",
      "op": "=",
      "rightType": "month and year"
    },
    "<month and year> <= <month and year>": {
      "key": "<month and year> <= <month and year>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "month and year",
      "op": "<=",
      "rightType": "month and year"
    },
    "<month and year> < <month and year>": {
      "key": "<month and year> < <month and year>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "month and year",
      "op": "<",
      "rightType": "month and year"
    },
    "<month and year> - <number of months>": {
      "key": "<month and year> - <number of months>",
      "type": "binaryOp",
      "resultType": "month and year",
      "leftType": "month and year",
      "op": "-",
      "rightType": "number of months"
    },
    "<month and year> - <month and year>": {
      "key": "<month and year> - <month and year>",
      "type": "binaryOp",
      "resultType": "number of months",
      "leftType": "month and year",
      "op": "-",
      "rightType": "month and year"
    },
    "<month and year> + <number of months>": {
      "key": "<month and year> + <number of months>",
      "type": "binaryOp",
      "resultType": "month and year",
      "leftType": "month and year",
      "op": "+",
      "rightType": "number of months"
    },
    "unique value of <month>": {
      "key": "unique value of <month>",
      "type": "property",
      "resultType": "month with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "month"
    },
    "minimum of <month>": {
      "key": "minimum of <month>",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "month"
    },
    "maximum of <month>": {
      "key": "maximum of <month>",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "month"
    },
    "extrema of <month>": {
      "key": "extrema of <month>",
      "type": "property",
      "resultType": "( month, month )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "month"
    },
    "<year> & <month>": {
      "key": "<year> & <month>",
      "type": "binaryOp",
      "resultType": "month and year",
      "leftType": "year",
      "op": "&",
      "rightType": "month"
    },
    "<number of months> + <month>": {
      "key": "<number of months> + <month>",
      "type": "binaryOp",
      "resultType": "month",
      "leftType": "number of months",
      "op": "+",
      "rightType": "month"
    },
    "<month> as two digits": {
      "key": "<month> as two digits",
      "type": "cast",
      "resultType": "string",
      "argType": "month",
      "phrase": "two digits"
    },
    "<month> as three letters": {
      "key": "<month> as three letters",
      "type": "cast",
      "resultType": "string",
      "argType": "month",
      "phrase": "three letters"
    },
    "<month> as string": {
      "key": "<month> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "month",
      "phrase": "string"
    },
    "<month> as integer": {
      "key": "<month> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "month",
      "phrase": "integer"
    },
    "<month> = <month>": {
      "key": "<month> = <month>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "month",
      "op": "=",
      "rightType": "month"
    },
    "<month> <= <month>": {
      "key": "<month> <= <month>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "month",
      "op": "<=",
      "rightType": "month"
    },
    "<month> < <month>": {
      "key": "<month> < <month>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "month",
      "op": "<",
      "rightType": "month"
    },
    "<month> - <number of months>": {
      "key": "<month> - <number of months>",
      "type": "binaryOp",
      "resultType": "month",
      "leftType": "month",
      "op": "-",
      "rightType": "number of months"
    },
    "<month> - <month>": {
      "key": "<month> - <month>",
      "type": "binaryOp",
      "resultType": "number of months",
      "leftType": "month",
      "op": "-",
      "rightType": "month"
    },
    "<month> + <number of months>": {
      "key": "<month> + <number of months>",
      "type": "binaryOp",
      "resultType": "month",
      "leftType": "month",
      "op": "+",
      "rightType": "number of months"
    },
    "<month> & <year>": {
      "key": "<month> & <year>",
      "type": "binaryOp",
      "resultType": "month and year",
      "leftType": "month",
      "op": "&",
      "rightType": "year"
    },
    "version string <string> of <module>": {
      "key": "version string <string> of <module>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version string",
      "pluralPhrase": "version strings",
      "indexType": "string",
      "directObjectType": "module"
    },
    "version of <module>": {
      "key": "version of <module>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "module"
    },
    "name of <module>": {
      "key": "name of <module>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "module"
    },
    "value of <mime field>": {
      "key": "value of <mime field>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "mime field"
    },
    "name of <mime field>": {
      "key": "name of <mime field>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "mime field"
    },
    "rate of <linear projection>": {
      "key": "rate of <linear projection>",
      "type": "property",
      "resultType": "rate",
      "singularPhrase": "rate",
      "pluralPhrase": "rates",
      "directObjectType": "linear projection"
    },
    "extrapolation <time> of <linear projection>": {
      "key": "extrapolation <time> of <linear projection>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "extrapolation",
      "pluralPhrase": "extrapolations",
      "indexType": "time",
      "directObjectType": "linear projection"
    },
    "correlation coefficient of <linear projection>": {
      "key": "correlation coefficient of <linear projection>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "correlation coefficient",
      "pluralPhrase": "correlation coefficients",
      "directObjectType": "linear projection"
    },
    "type of <license>": {
      "key": "type of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "license"
    },
    "start date of <license>": {
      "key": "start date of <license>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "start date",
      "pluralPhrase": "start dates",
      "directObjectType": "license"
    },
    "site number of <license>": {
      "key": "site number of <license>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "site number",
      "pluralPhrase": "site numbers",
      "directObjectType": "license"
    },
    "seat of <license>": {
      "key": "seat of <license>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "seat",
      "pluralPhrase": "seats",
      "directObjectType": "license"
    },
    "seat count state of <license>": {
      "key": "seat count state of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "seat count state",
      "pluralPhrase": "seat count states",
      "directObjectType": "license"
    },
    "registrar number of <license>": {
      "key": "registrar number of <license>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "registrar number",
      "pluralPhrase": "registrar numbers",
      "directObjectType": "license"
    },
    "product of <license>": {
      "key": "product of <license>",
      "type": "property",
      "resultType": "bes product",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "license"
    },
    "organization of <license>": {
      "key": "organization of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "organization",
      "pluralPhrase": "organizations",
      "directObjectType": "license"
    },
    "maximum seat count of <license>": {
      "key": "maximum seat count of <license>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum seat count",
      "pluralPhrase": "maximum seat counts",
      "directObjectType": "license"
    },
    "gather url of <license>": {
      "key": "gather url of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "gather url",
      "pluralPhrase": "gather urls",
      "directObjectType": "license"
    },
    "fips mode of <license>": {
      "key": "fips mode of <license>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fips mode",
      "pluralPhrase": "fips modes",
      "directObjectType": "license"
    },
    "expiration state of <license>": {
      "key": "expiration state of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "expiration state",
      "pluralPhrase": "expiration states",
      "directObjectType": "license"
    },
    "expiration date of <license>": {
      "key": "expiration date of <license>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "expiration date",
      "pluralPhrase": "expiration dates",
      "directObjectType": "license"
    },
    "evaluation of <license>": {
      "key": "evaluation of <license>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "evaluation",
      "pluralPhrase": "evaluations",
      "directObjectType": "license"
    },
    "encryption certificate of <license>": {
      "key": "encryption certificate of <license>",
      "type": "property",
      "resultType": "x509 certificate",
      "singularPhrase": "encryption certificate",
      "pluralPhrase": "encryption certificates",
      "directObjectType": "license"
    },
    "email address of <license>": {
      "key": "email address of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "email address",
      "pluralPhrase": "email addresses",
      "directObjectType": "license"
    },
    "common name of <license>": {
      "key": "common name of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "common name",
      "pluralPhrase": "common names",
      "directObjectType": "license"
    },
    "allow unmentioned site of <license>": {
      "key": "allow unmentioned site of <license>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow unmentioned site",
      "pluralPhrase": "allow unmentioned sites",
      "directObjectType": "license"
    },
    "multiplicity of <ipv6 address with multiplicity>": {
      "key": "multiplicity of <ipv6 address with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "ipv6 address with multiplicity"
    },
    "unique value of <ipv6 address>": {
      "key": "unique value of <ipv6 address>",
      "type": "property",
      "resultType": "ipv6 address with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "ipv6 address"
    },
    "minimum of <ipv6 address>": {
      "key": "minimum of <ipv6 address>",
      "type": "property",
      "resultType": "ipv6 address",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "ipv6 address"
    },
    "maximum of <ipv6 address>": {
      "key": "maximum of <ipv6 address>",
      "type": "property",
      "resultType": "ipv6 address",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "ipv6 address"
    },
    "ipv4 part of <ipv6 address>": {
      "key": "ipv4 part of <ipv6 address>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "ipv4 part",
      "pluralPhrase": "ipv4 parts",
      "directObjectType": "ipv6 address"
    },
    "hexadecet <integer> of <ipv6 address>": {
      "key": "hexadecet <integer> of <ipv6 address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "hexadecet",
      "pluralPhrase": "hexadecets",
      "indexType": "integer",
      "directObjectType": "ipv6 address"
    },
    "extrema of <ipv6 address>": {
      "key": "extrema of <ipv6 address>",
      "type": "property",
      "resultType": "( ipv6 address, ipv6 address )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "ipv6 address"
    },
    "<ipv6 address> as string": {
      "key": "<ipv6 address> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "string"
    },
    "<ipv6 address> as string with zone index": {
      "key": "<ipv6 address> as string with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "string with zone index"
    },
    "<ipv6 address> as string with leading zeros": {
      "key": "<ipv6 address> as string with leading zeros",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "string with leading zeros"
    },
    "<ipv6 address> as string with leading zeros with zone index": {
      "key": "<ipv6 address> as string with leading zeros with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "string with leading zeros with zone index"
    },
    "<ipv6 address> as string with ipv4": {
      "key": "<ipv6 address> as string with ipv4",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "string with ipv4"
    },
    "<ipv6 address> as string with ipv4 with zone index": {
      "key": "<ipv6 address> as string with ipv4 with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "string with ipv4 with zone index"
    },
    "<ipv6 address> as ipv4or6 address": {
      "key": "<ipv6 address> as ipv4or6 address",
      "type": "cast",
      "resultType": "ipv4or6 address",
      "argType": "ipv6 address",
      "phrase": "ipv4or6 address"
    },
    "<ipv6 address> as compressed string": {
      "key": "<ipv6 address> as compressed string",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "compressed string"
    },
    "<ipv6 address> as compressed string with zone index": {
      "key": "<ipv6 address> as compressed string with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "compressed string with zone index"
    },
    "<ipv6 address> as compressed string with ipv4": {
      "key": "<ipv6 address> as compressed string with ipv4",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "compressed string with ipv4"
    },
    "<ipv6 address> as compressed string with ipv4 with zone index": {
      "key": "<ipv6 address> as compressed string with ipv4 with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv6 address",
      "phrase": "compressed string with ipv4 with zone index"
    },
    "<ipv6 address> = <ipv6 address>": {
      "key": "<ipv6 address> = <ipv6 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv6 address",
      "op": "=",
      "rightType": "ipv6 address"
    },
    "<ipv6 address> <= <ipv6 address>": {
      "key": "<ipv6 address> <= <ipv6 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv6 address",
      "op": "<=",
      "rightType": "ipv6 address"
    },
    "<ipv6 address> < <ipv6 address>": {
      "key": "<ipv6 address> < <ipv6 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv6 address",
      "op": "<",
      "rightType": "ipv6 address"
    },
    "multiplicity of <ipv4or6 address with multiplicity>": {
      "key": "multiplicity of <ipv4or6 address with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "ipv4or6 address with multiplicity"
    },
    "unique value of <ipv4or6 address>": {
      "key": "unique value of <ipv4or6 address>",
      "type": "property",
      "resultType": "ipv4or6 address with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "ipv4or6 address"
    },
    "minimum of <ipv4or6 address>": {
      "key": "minimum of <ipv4or6 address>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "ipv4or6 address"
    },
    "maximum of <ipv4or6 address>": {
      "key": "maximum of <ipv4or6 address>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "ipv4or6 address"
    },
    "ipv4 part of <ipv4or6 address>": {
      "key": "ipv4 part of <ipv4or6 address>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "ipv4 part",
      "pluralPhrase": "ipv4 parts",
      "directObjectType": "ipv4or6 address"
    },
    "ip version of <ipv4or6 address>": {
      "key": "ip version of <ipv4or6 address>",
      "type": "property",
      "resultType": "ip version",
      "singularPhrase": "ip version",
      "pluralPhrase": "ip versions",
      "directObjectType": "ipv4or6 address"
    },
    "hexadecet <integer> of <ipv4or6 address>": {
      "key": "hexadecet <integer> of <ipv4or6 address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "hexadecet",
      "pluralPhrase": "hexadecets",
      "indexType": "integer",
      "directObjectType": "ipv4or6 address"
    },
    "extrema of <ipv4or6 address>": {
      "key": "extrema of <ipv4or6 address>",
      "type": "property",
      "resultType": "( ipv4or6 address, ipv4or6 address )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "ipv4or6 address"
    },
    "<string> = <ipv4or6 address>": {
      "key": "<string> = <ipv4or6 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "ipv4or6 address"
    },
    "<string> <= <ipv4or6 address>": {
      "key": "<string> <= <ipv4or6 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "ipv4or6 address"
    },
    "<string> < <ipv4or6 address>": {
      "key": "<string> < <ipv4or6 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "ipv4or6 address"
    },
    "<ipv4or6 address> as string": {
      "key": "<ipv4or6 address> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "string"
    },
    "<ipv4or6 address> as string with zone index": {
      "key": "<ipv4or6 address> as string with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "string with zone index"
    },
    "<ipv4or6 address> as string with leading zeros": {
      "key": "<ipv4or6 address> as string with leading zeros",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "string with leading zeros"
    },
    "<ipv4or6 address> as string with leading zeros with zone index": {
      "key": "<ipv4or6 address> as string with leading zeros with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "string with leading zeros with zone index"
    },
    "<ipv4or6 address> as string with ipv4": {
      "key": "<ipv4or6 address> as string with ipv4",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "string with ipv4"
    },
    "<ipv4or6 address> as string with ipv4 with zone index": {
      "key": "<ipv4or6 address> as string with ipv4 with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "string with ipv4 with zone index"
    },
    "<ipv4or6 address> as compressed string": {
      "key": "<ipv4or6 address> as compressed string",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "compressed string"
    },
    "<ipv4or6 address> as compressed string with zone index": {
      "key": "<ipv4or6 address> as compressed string with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "compressed string with zone index"
    },
    "<ipv4or6 address> as compressed string with ipv4": {
      "key": "<ipv4or6 address> as compressed string with ipv4",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "compressed string with ipv4"
    },
    "<ipv4or6 address> as compressed string with ipv4 with zone index": {
      "key": "<ipv4or6 address> as compressed string with ipv4 with zone index",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4or6 address",
      "phrase": "compressed string with ipv4 with zone index"
    },
    "<ipv4or6 address> = <string>": {
      "key": "<ipv4or6 address> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4or6 address",
      "op": "=",
      "rightType": "string"
    },
    "<ipv4or6 address> = <ipv4or6 address>": {
      "key": "<ipv4or6 address> = <ipv4or6 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4or6 address",
      "op": "=",
      "rightType": "ipv4or6 address"
    },
    "<ipv4or6 address> <= <string>": {
      "key": "<ipv4or6 address> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4or6 address",
      "op": "<=",
      "rightType": "string"
    },
    "<ipv4or6 address> <= <ipv4or6 address>": {
      "key": "<ipv4or6 address> <= <ipv4or6 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4or6 address",
      "op": "<=",
      "rightType": "ipv4or6 address"
    },
    "<ipv4or6 address> < <string>": {
      "key": "<ipv4or6 address> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4or6 address",
      "op": "<",
      "rightType": "string"
    },
    "<ipv4or6 address> < <ipv4or6 address>": {
      "key": "<ipv4or6 address> < <ipv4or6 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4or6 address",
      "op": "<",
      "rightType": "ipv4or6 address"
    },
    "multiplicity of <ipv4 address with multiplicity>": {
      "key": "multiplicity of <ipv4 address with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "ipv4 address with multiplicity"
    },
    "unique value of <ipv4 address>": {
      "key": "unique value of <ipv4 address>",
      "type": "property",
      "resultType": "ipv4 address with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "ipv4 address"
    },
    "minimum of <ipv4 address>": {
      "key": "minimum of <ipv4 address>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "ipv4 address"
    },
    "maximum of <ipv4 address>": {
      "key": "maximum of <ipv4 address>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "ipv4 address"
    },
    "extrema of <ipv4 address>": {
      "key": "extrema of <ipv4 address>",
      "type": "property",
      "resultType": "( ipv4 address, ipv4 address )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "ipv4 address"
    },
    "<string> = <ipv4 address>": {
      "key": "<string> = <ipv4 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "ipv4 address"
    },
    "<string> <= <ipv4 address>": {
      "key": "<string> <= <ipv4 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "ipv4 address"
    },
    "<string> < <ipv4 address>": {
      "key": "<string> < <ipv4 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "ipv4 address"
    },
    "<ipv4 address> as string": {
      "key": "<ipv4 address> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ipv4 address",
      "phrase": "string"
    },
    "<ipv4 address> as ipv6 address": {
      "key": "<ipv4 address> as ipv6 address",
      "type": "cast",
      "resultType": "ipv6 address",
      "argType": "ipv4 address",
      "phrase": "ipv6 address"
    },
    "<ipv4 address> as ipv4or6 address": {
      "key": "<ipv4 address> as ipv4or6 address",
      "type": "cast",
      "resultType": "ipv4or6 address",
      "argType": "ipv4 address",
      "phrase": "ipv4or6 address"
    },
    "<ipv4 address> = <string>": {
      "key": "<ipv4 address> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4 address",
      "op": "=",
      "rightType": "string"
    },
    "<ipv4 address> = <ipv4 address>": {
      "key": "<ipv4 address> = <ipv4 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4 address",
      "op": "=",
      "rightType": "ipv4 address"
    },
    "<ipv4 address> <= <string>": {
      "key": "<ipv4 address> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4 address",
      "op": "<=",
      "rightType": "string"
    },
    "<ipv4 address> <= <ipv4 address>": {
      "key": "<ipv4 address> <= <ipv4 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4 address",
      "op": "<=",
      "rightType": "ipv4 address"
    },
    "<ipv4 address> < <string>": {
      "key": "<ipv4 address> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4 address",
      "op": "<",
      "rightType": "string"
    },
    "<ipv4 address> < <ipv4 address>": {
      "key": "<ipv4 address> < <ipv4 address>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ipv4 address",
      "op": "<",
      "rightType": "ipv4 address"
    },
    "<ip version> as string": {
      "key": "<ip version> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ip version",
      "phrase": "string"
    },
    "<ip version> = <ip version>": {
      "key": "<ip version> = <ip version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ip version",
      "op": "=",
      "rightType": "ip version"
    },
    "multiplicity of <integer with multiplicity>": {
      "key": "multiplicity of <integer with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "integer with multiplicity"
    },
    "union of <integer set>": {
      "key": "union of <integer set>",
      "type": "property",
      "resultType": "integer set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "integer set"
    },
    "size of <integer set>": {
      "key": "size of <integer set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "integer set"
    },
    "intersection of <integer set>": {
      "key": "intersection of <integer set>",
      "type": "property",
      "resultType": "integer set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "integer set"
    },
    "element of <integer set>": {
      "key": "element of <integer set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "integer set"
    },
    "<integer set> contains <integer set>": {
      "key": "<integer set> contains <integer set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer set",
      "op": "contains",
      "rightType": "integer set"
    },
    "<integer set> = <integer set>": {
      "key": "<integer set> = <integer set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer set",
      "op": "=",
      "rightType": "integer set"
    },
    "<integer set> - <integer set>": {
      "key": "<integer set> - <integer set>",
      "type": "binaryOp",
      "resultType": "integer set",
      "leftType": "integer set",
      "op": "-",
      "rightType": "integer set"
    },
    "<integer set> + <integer set>": {
      "key": "<integer set> + <integer set>",
      "type": "binaryOp",
      "resultType": "integer set",
      "leftType": "integer set",
      "op": "+",
      "rightType": "integer set"
    },
    "<integer set> * <integer set>": {
      "key": "<integer set> * <integer set>",
      "type": "binaryOp",
      "resultType": "integer set",
      "leftType": "integer set",
      "op": "*",
      "rightType": "integer set"
    },
    "unique value of <integer>": {
      "key": "unique value of <integer>",
      "type": "property",
      "resultType": "integer with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "integer"
    },
    "sum of <integer>": {
      "key": "sum of <integer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "sum",
      "pluralPhrase": "sums",
      "directObjectType": "integer"
    },
    "standard deviation of <integer>": {
      "key": "standard deviation of <integer>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "standard deviation",
      "pluralPhrase": "standard deviations",
      "directObjectType": "integer"
    },
    "significant digits <integer> of <integer>": {
      "key": "significant digits <integer> of <integer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "significant digits",
      "pluralPhrase": "significant digitss",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "set of <integer>": {
      "key": "set of <integer>",
      "type": "property",
      "resultType": "integer set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "integer"
    },
    "september of <integer>": {
      "key": "september of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "september",
      "pluralPhrase": "septembers",
      "directObjectType": "integer"
    },
    "september <integer> of <integer>": {
      "key": "september <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "september",
      "pluralPhrase": "septembers",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "product of <integer>": {
      "key": "product of <integer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "integer"
    },
    "october of <integer>": {
      "key": "october of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "october",
      "pluralPhrase": "octobers",
      "directObjectType": "integer"
    },
    "october <integer> of <integer>": {
      "key": "october <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "october",
      "pluralPhrase": "octobers",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "november of <integer>": {
      "key": "november of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "november",
      "pluralPhrase": "novembers",
      "directObjectType": "integer"
    },
    "november <integer> of <integer>": {
      "key": "november <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "november",
      "pluralPhrase": "novembers",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "minimum of <integer>": {
      "key": "minimum of <integer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "integer"
    },
    "mean of <integer>": {
      "key": "mean of <integer>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean",
      "pluralPhrase": "means",
      "directObjectType": "integer"
    },
    "may of <integer>": {
      "key": "may of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "may",
      "pluralPhrase": "mays",
      "directObjectType": "integer"
    },
    "may <integer> of <integer>": {
      "key": "may <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "may",
      "pluralPhrase": "mays",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "maximum of <integer>": {
      "key": "maximum of <integer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "integer"
    },
    "march of <integer>": {
      "key": "march of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "march",
      "pluralPhrase": "marchs",
      "directObjectType": "integer"
    },
    "march <integer> of <integer>": {
      "key": "march <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "march",
      "pluralPhrase": "marchs",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "june of <integer>": {
      "key": "june of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "june",
      "pluralPhrase": "junes",
      "directObjectType": "integer"
    },
    "june <integer> of <integer>": {
      "key": "june <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "june",
      "pluralPhrase": "junes",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "july of <integer>": {
      "key": "july of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "july",
      "pluralPhrase": "julys",
      "directObjectType": "integer"
    },
    "july <integer> of <integer>": {
      "key": "july <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "july",
      "pluralPhrase": "julys",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "javascript array <string> of <integer>": {
      "key": "javascript array <string> of <integer>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "javascript array",
      "pluralPhrase": "javascript arrays",
      "indexType": "string",
      "directObjectType": "integer"
    },
    "january of <integer>": {
      "key": "january of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "january",
      "pluralPhrase": "januarys",
      "directObjectType": "integer"
    },
    "january <integer> of <integer>": {
      "key": "january <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "january",
      "pluralPhrase": "januarys",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "february of <integer>": {
      "key": "february of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "february",
      "pluralPhrase": "februarys",
      "directObjectType": "integer"
    },
    "february <integer> of <integer>": {
      "key": "february <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "february",
      "pluralPhrase": "februarys",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "extrema of <integer>": {
      "key": "extrema of <integer>",
      "type": "property",
      "resultType": "( integer, integer )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "integer"
    },
    "december of <integer>": {
      "key": "december of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "december",
      "pluralPhrase": "decembers",
      "directObjectType": "integer"
    },
    "december <integer> of <integer>": {
      "key": "december <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "december",
      "pluralPhrase": "decembers",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "bit <integer> of <integer>": {
      "key": "bit <integer> of <integer>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "bit",
      "pluralPhrase": "bits",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "august of <integer>": {
      "key": "august of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "august",
      "pluralPhrase": "augusts",
      "directObjectType": "integer"
    },
    "august <integer> of <integer>": {
      "key": "august <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "august",
      "pluralPhrase": "augusts",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "april of <integer>": {
      "key": "april of <integer>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "april",
      "pluralPhrase": "aprils",
      "directObjectType": "integer"
    },
    "april <integer> of <integer>": {
      "key": "april <integer> of <integer>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "april",
      "pluralPhrase": "aprils",
      "indexType": "integer",
      "directObjectType": "integer"
    },
    "absolute value of <integer>": {
      "key": "absolute value of <integer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "absolute value",
      "pluralPhrase": "absolute values",
      "directObjectType": "integer"
    },
    "<time range> * <integer>": {
      "key": "<time range> * <integer>",
      "type": "binaryOp",
      "resultType": "timed( time range, integer )",
      "leftType": "time range",
      "op": "*",
      "rightType": "integer"
    },
    "<time interval> / <integer>": {
      "key": "<time interval> / <integer>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "time interval",
      "op": "/",
      "rightType": "integer"
    },
    "<time interval> * <integer>": {
      "key": "<time interval> * <integer>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "time interval",
      "op": "*",
      "rightType": "integer"
    },
    "<number of months> / <integer>": {
      "key": "<number of months> / <integer>",
      "type": "binaryOp",
      "resultType": "number of months",
      "leftType": "number of months",
      "op": "/",
      "rightType": "integer"
    },
    "<number of months> * <integer>": {
      "key": "<number of months> * <integer>",
      "type": "binaryOp",
      "resultType": "number of months",
      "leftType": "number of months",
      "op": "*",
      "rightType": "integer"
    },
    "<integer> mod <integer>": {
      "key": "<integer> mod <integer>",
      "type": "binaryOp",
      "resultType": "integer",
      "leftType": "integer",
      "op": "mod",
      "rightType": "integer"
    },
    "<integer> as year": {
      "key": "<integer> as year",
      "type": "cast",
      "resultType": "year",
      "argType": "integer",
      "phrase": "year"
    },
    "<integer> as string": {
      "key": "<integer> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "integer",
      "phrase": "string"
    },
    "<integer> as month": {
      "key": "<integer> as month",
      "type": "cast",
      "resultType": "month",
      "argType": "integer",
      "phrase": "month"
    },
    "<integer> as integer": {
      "key": "<integer> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "integer",
      "phrase": "integer"
    },
    "<integer> as hexadecimal": {
      "key": "<integer> as hexadecimal",
      "type": "cast",
      "resultType": "string",
      "argType": "integer",
      "phrase": "hexadecimal"
    },
    "<integer> as floating point": {
      "key": "<integer> as floating point",
      "type": "cast",
      "resultType": "floating point",
      "argType": "integer",
      "phrase": "floating point"
    },
    "<integer> as day_of_month": {
      "key": "<integer> as day_of_month",
      "type": "cast",
      "resultType": "day of month",
      "argType": "integer",
      "phrase": "day_of_month"
    },
    "<integer> as bits": {
      "key": "<integer> as bits",
      "type": "cast",
      "resultType": "bit set",
      "argType": "integer",
      "phrase": "bits"
    },
    "<integer> as bit set": {
      "key": "<integer> as bit set",
      "type": "cast",
      "resultType": "bit set",
      "argType": "integer",
      "phrase": "bit set"
    },
    "<integer> = <integer>": {
      "key": "<integer> = <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "=",
      "rightType": "integer"
    },
    "<integer> <= <integer>": {
      "key": "<integer> <= <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "<=",
      "rightType": "integer"
    },
    "<integer> < <integer>": {
      "key": "<integer> < <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "<",
      "rightType": "integer"
    },
    "<integer> / <integer>": {
      "key": "<integer> / <integer>",
      "type": "binaryOp",
      "resultType": "integer",
      "leftType": "integer",
      "op": "/",
      "rightType": "integer"
    },
    "<integer> - <integer>": {
      "key": "<integer> - <integer>",
      "type": "binaryOp",
      "resultType": "integer",
      "leftType": "integer",
      "op": "-",
      "rightType": "integer"
    },
    "<integer> + <integer>": {
      "key": "<integer> + <integer>",
      "type": "binaryOp",
      "resultType": "integer",
      "leftType": "integer",
      "op": "+",
      "rightType": "integer"
    },
    "<integer> * <time range>": {
      "key": "<integer> * <time range>",
      "type": "binaryOp",
      "resultType": "timed( time range, integer )",
      "leftType": "integer",
      "op": "*",
      "rightType": "time range"
    },
    "<integer> * <time interval>": {
      "key": "<integer> * <time interval>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "integer",
      "op": "*",
      "rightType": "time interval"
    },
    "<integer> * <number of months>": {
      "key": "<integer> * <number of months>",
      "type": "binaryOp",
      "resultType": "number of months",
      "leftType": "integer",
      "op": "*",
      "rightType": "number of months"
    },
    "<integer> * <integer>": {
      "key": "<integer> * <integer>",
      "type": "binaryOp",
      "resultType": "integer",
      "leftType": "integer",
      "op": "*",
      "rightType": "integer"
    },
    "<integer set> contains <integer>": {
      "key": "<integer set> contains <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer set",
      "op": "contains",
      "rightType": "integer"
    },
    "- <integer>": {
      "key": "- <integer>",
      "type": "unaryOp",
      "resultType": "integer",
      "argType": "integer",
      "op": "-"
    },
    "var of <html>": {
      "key": "var of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "var",
      "pluralPhrase": "vars",
      "directObjectType": "html"
    },
    "var <string> of <html>": {
      "key": "var <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "var",
      "pluralPhrase": "vars",
      "indexType": "string",
      "directObjectType": "html"
    },
    "unordered list of <html>": {
      "key": "unordered list of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "unordered list",
      "pluralPhrase": "unordered lists",
      "directObjectType": "html"
    },
    "unordered list <string> of <html>": {
      "key": "unordered list <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "unordered list",
      "pluralPhrase": "unordered lists",
      "indexType": "string",
      "directObjectType": "html"
    },
    "ul of <html>": {
      "key": "ul of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ul",
      "pluralPhrase": "uls",
      "directObjectType": "html"
    },
    "ul <string> of <html>": {
      "key": "ul <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ul",
      "pluralPhrase": "uls",
      "indexType": "string",
      "directObjectType": "html"
    },
    "tt of <html>": {
      "key": "tt of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tt",
      "pluralPhrase": "tts",
      "directObjectType": "html"
    },
    "tt <string> of <html>": {
      "key": "tt <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tt",
      "pluralPhrase": "tts",
      "indexType": "string",
      "directObjectType": "html"
    },
    "tr of <html>": {
      "key": "tr of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tr",
      "pluralPhrase": "trs",
      "directObjectType": "html"
    },
    "tr <string> of <html>": {
      "key": "tr <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tr",
      "pluralPhrase": "trs",
      "indexType": "string",
      "directObjectType": "html"
    },
    "title of <html>": {
      "key": "title of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "title",
      "pluralPhrase": "titles",
      "directObjectType": "html"
    },
    "title <string> of <html>": {
      "key": "title <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "title",
      "pluralPhrase": "titles",
      "indexType": "string",
      "directObjectType": "html"
    },
    "thead of <html>": {
      "key": "thead of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "thead",
      "pluralPhrase": "theads",
      "directObjectType": "html"
    },
    "thead <string> of <html>": {
      "key": "thead <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "thead",
      "pluralPhrase": "theads",
      "indexType": "string",
      "directObjectType": "html"
    },
    "th of <html>": {
      "key": "th of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "th",
      "pluralPhrase": "ths",
      "directObjectType": "html"
    },
    "th <string> of <html>": {
      "key": "th <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "th",
      "pluralPhrase": "ths",
      "indexType": "string",
      "directObjectType": "html"
    },
    "tfoot of <html>": {
      "key": "tfoot of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tfoot",
      "pluralPhrase": "tfoots",
      "directObjectType": "html"
    },
    "tfoot <string> of <html>": {
      "key": "tfoot <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tfoot",
      "pluralPhrase": "tfoots",
      "indexType": "string",
      "directObjectType": "html"
    },
    "td of <html>": {
      "key": "td of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "td",
      "pluralPhrase": "tds",
      "directObjectType": "html"
    },
    "td <string> of <html>": {
      "key": "td <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "td",
      "pluralPhrase": "tds",
      "indexType": "string",
      "directObjectType": "html"
    },
    "tbody of <html>": {
      "key": "tbody of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tbody",
      "pluralPhrase": "tbodys",
      "directObjectType": "html"
    },
    "tbody <string> of <html>": {
      "key": "tbody <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "tbody",
      "pluralPhrase": "tbodys",
      "indexType": "string",
      "directObjectType": "html"
    },
    "table of <html>": {
      "key": "table of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "table",
      "pluralPhrase": "tables",
      "directObjectType": "html"
    },
    "table <string> of <html>": {
      "key": "table <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "table",
      "pluralPhrase": "tables",
      "indexType": "string",
      "directObjectType": "html"
    },
    "sup of <html>": {
      "key": "sup of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "sup",
      "pluralPhrase": "sups",
      "directObjectType": "html"
    },
    "sup <string> of <html>": {
      "key": "sup <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "sup",
      "pluralPhrase": "sups",
      "indexType": "string",
      "directObjectType": "html"
    },
    "sub of <html>": {
      "key": "sub of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "sub",
      "pluralPhrase": "subs",
      "directObjectType": "html"
    },
    "sub <string> of <html>": {
      "key": "sub <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "sub",
      "pluralPhrase": "subs",
      "indexType": "string",
      "directObjectType": "html"
    },
    "strong of <html>": {
      "key": "strong of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "strong",
      "pluralPhrase": "strongs",
      "directObjectType": "html"
    },
    "strong <string> of <html>": {
      "key": "strong <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "strong",
      "pluralPhrase": "strongs",
      "indexType": "string",
      "directObjectType": "html"
    },
    "span of <html>": {
      "key": "span of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "span",
      "pluralPhrase": "spans",
      "directObjectType": "html"
    },
    "span <string> of <html>": {
      "key": "span <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "span",
      "pluralPhrase": "spans",
      "indexType": "string",
      "directObjectType": "html"
    },
    "small of <html>": {
      "key": "small of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "small",
      "pluralPhrase": "smalls",
      "directObjectType": "html"
    },
    "small <string> of <html>": {
      "key": "small <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "small",
      "pluralPhrase": "smalls",
      "indexType": "string",
      "directObjectType": "html"
    },
    "samp of <html>": {
      "key": "samp of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "samp",
      "pluralPhrase": "samps",
      "directObjectType": "html"
    },
    "samp <string> of <html>": {
      "key": "samp <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "samp",
      "pluralPhrase": "samps",
      "indexType": "string",
      "directObjectType": "html"
    },
    "q of <html>": {
      "key": "q of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "q",
      "pluralPhrase": "qs",
      "directObjectType": "html"
    },
    "q <string> of <html>": {
      "key": "q <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "q",
      "pluralPhrase": "qs",
      "indexType": "string",
      "directObjectType": "html"
    },
    "pre of <html>": {
      "key": "pre of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "pre",
      "pluralPhrase": "pres",
      "directObjectType": "html"
    },
    "pre <string> of <html>": {
      "key": "pre <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "pre",
      "pluralPhrase": "pres",
      "indexType": "string",
      "directObjectType": "html"
    },
    "p of <html>": {
      "key": "p of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "p",
      "pluralPhrase": "ps",
      "directObjectType": "html"
    },
    "p <string> of <html>": {
      "key": "p <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "p",
      "pluralPhrase": "ps",
      "indexType": "string",
      "directObjectType": "html"
    },
    "ordered list of <html>": {
      "key": "ordered list of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ordered list",
      "pluralPhrase": "ordered lists",
      "directObjectType": "html"
    },
    "ordered list <string> of <html>": {
      "key": "ordered list <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ordered list",
      "pluralPhrase": "ordered lists",
      "indexType": "string",
      "directObjectType": "html"
    },
    "ol of <html>": {
      "key": "ol of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ol",
      "pluralPhrase": "ols",
      "directObjectType": "html"
    },
    "ol <string> of <html>": {
      "key": "ol <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ol",
      "pluralPhrase": "ols",
      "indexType": "string",
      "directObjectType": "html"
    },
    "meta of <html>": {
      "key": "meta of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "meta",
      "pluralPhrase": "metas",
      "directObjectType": "html"
    },
    "meta <string> of <html>": {
      "key": "meta <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "meta",
      "pluralPhrase": "metas",
      "indexType": "string",
      "directObjectType": "html"
    },
    "link of <html>": {
      "key": "link of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "directObjectType": "html"
    },
    "link <string> of <html>": {
      "key": "link <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "string",
      "directObjectType": "html"
    },
    "li of <html>": {
      "key": "li of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "li",
      "pluralPhrase": "lis",
      "directObjectType": "html"
    },
    "li <string> of <html>": {
      "key": "li <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "li",
      "pluralPhrase": "lis",
      "indexType": "string",
      "directObjectType": "html"
    },
    "kbd of <html>": {
      "key": "kbd of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "kbd",
      "pluralPhrase": "kbds",
      "directObjectType": "html"
    },
    "kbd <string> of <html>": {
      "key": "kbd <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "kbd",
      "pluralPhrase": "kbds",
      "indexType": "string",
      "directObjectType": "html"
    },
    "italic of <html>": {
      "key": "italic of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "italic",
      "pluralPhrase": "italics",
      "directObjectType": "html"
    },
    "italic <string> of <html>": {
      "key": "italic <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "italic",
      "pluralPhrase": "italics",
      "indexType": "string",
      "directObjectType": "html"
    },
    "ins of <html>": {
      "key": "ins of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ins",
      "pluralPhrase": "inss",
      "directObjectType": "html"
    },
    "ins <string> of <html>": {
      "key": "ins <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "ins",
      "pluralPhrase": "inss",
      "indexType": "string",
      "directObjectType": "html"
    },
    "html tag <string> of <html>": {
      "key": "html tag <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html tag",
      "pluralPhrase": "html tags",
      "indexType": "string",
      "directObjectType": "html"
    },
    "html of <html>": {
      "key": "html of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html",
      "pluralPhrase": "htmls",
      "directObjectType": "html"
    },
    "html concatenation of <html>": {
      "key": "html concatenation of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html concatenation",
      "pluralPhrase": "html concatenations",
      "directObjectType": "html"
    },
    "html concatenation <string> of <html>": {
      "key": "html concatenation <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html concatenation",
      "pluralPhrase": "html concatenations",
      "indexType": "string",
      "directObjectType": "html"
    },
    "html <string> of <html>": {
      "key": "html <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "html",
      "pluralPhrase": "htmls",
      "indexType": "string",
      "directObjectType": "html"
    },
    "head of <html>": {
      "key": "head of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "head",
      "pluralPhrase": "heads",
      "directObjectType": "html"
    },
    "head <string> of <html>": {
      "key": "head <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "head",
      "pluralPhrase": "heads",
      "indexType": "string",
      "directObjectType": "html"
    },
    "h6 of <html>": {
      "key": "h6 of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h6",
      "pluralPhrase": "h6s",
      "directObjectType": "html"
    },
    "h6 <string> of <html>": {
      "key": "h6 <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h6",
      "pluralPhrase": "h6s",
      "indexType": "string",
      "directObjectType": "html"
    },
    "h5 of <html>": {
      "key": "h5 of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h5",
      "pluralPhrase": "h5s",
      "directObjectType": "html"
    },
    "h5 <string> of <html>": {
      "key": "h5 <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h5",
      "pluralPhrase": "h5s",
      "indexType": "string",
      "directObjectType": "html"
    },
    "h4 of <html>": {
      "key": "h4 of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h4",
      "pluralPhrase": "h4s",
      "directObjectType": "html"
    },
    "h4 <string> of <html>": {
      "key": "h4 <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h4",
      "pluralPhrase": "h4s",
      "indexType": "string",
      "directObjectType": "html"
    },
    "h3 of <html>": {
      "key": "h3 of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h3",
      "pluralPhrase": "h3s",
      "directObjectType": "html"
    },
    "h3 <string> of <html>": {
      "key": "h3 <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h3",
      "pluralPhrase": "h3s",
      "indexType": "string",
      "directObjectType": "html"
    },
    "h2 of <html>": {
      "key": "h2 of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h2",
      "pluralPhrase": "h2s",
      "directObjectType": "html"
    },
    "h2 <string> of <html>": {
      "key": "h2 <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h2",
      "pluralPhrase": "h2s",
      "indexType": "string",
      "directObjectType": "html"
    },
    "h1 of <html>": {
      "key": "h1 of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h1",
      "pluralPhrase": "h1s",
      "directObjectType": "html"
    },
    "h1 <string> of <html>": {
      "key": "h1 <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "h1",
      "pluralPhrase": "h1s",
      "indexType": "string",
      "directObjectType": "html"
    },
    "em of <html>": {
      "key": "em of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "em",
      "pluralPhrase": "ems",
      "directObjectType": "html"
    },
    "em <string> of <html>": {
      "key": "em <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "em",
      "pluralPhrase": "ems",
      "indexType": "string",
      "directObjectType": "html"
    },
    "dt of <html>": {
      "key": "dt of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dt",
      "pluralPhrase": "dts",
      "directObjectType": "html"
    },
    "dt <string> of <html>": {
      "key": "dt <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dt",
      "pluralPhrase": "dts",
      "indexType": "string",
      "directObjectType": "html"
    },
    "div of <html>": {
      "key": "div of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "div",
      "pluralPhrase": "divs",
      "directObjectType": "html"
    },
    "div <string> of <html>": {
      "key": "div <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "div",
      "pluralPhrase": "divs",
      "indexType": "string",
      "directObjectType": "html"
    },
    "dfn of <html>": {
      "key": "dfn of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dfn",
      "pluralPhrase": "dfns",
      "directObjectType": "html"
    },
    "dfn <string> of <html>": {
      "key": "dfn <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dfn",
      "pluralPhrase": "dfns",
      "indexType": "string",
      "directObjectType": "html"
    },
    "del of <html>": {
      "key": "del of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "del",
      "pluralPhrase": "dels",
      "directObjectType": "html"
    },
    "del <string> of <html>": {
      "key": "del <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "del",
      "pluralPhrase": "dels",
      "indexType": "string",
      "directObjectType": "html"
    },
    "definition list of <html>": {
      "key": "definition list of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "definition list",
      "pluralPhrase": "definition lists",
      "directObjectType": "html"
    },
    "definition list <string> of <html>": {
      "key": "definition list <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "definition list",
      "pluralPhrase": "definition lists",
      "indexType": "string",
      "directObjectType": "html"
    },
    "dd of <html>": {
      "key": "dd of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dd",
      "pluralPhrase": "dds",
      "directObjectType": "html"
    },
    "dd <string> of <html>": {
      "key": "dd <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "dd",
      "pluralPhrase": "dds",
      "indexType": "string",
      "directObjectType": "html"
    },
    "concatenation of <html>": {
      "key": "concatenation of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "concatenation",
      "pluralPhrase": "concatenations",
      "directObjectType": "html"
    },
    "concatenation <string> of <html>": {
      "key": "concatenation <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "concatenation",
      "pluralPhrase": "concatenations",
      "indexType": "string",
      "directObjectType": "html"
    },
    "concatenation <html> of <html>": {
      "key": "concatenation <html> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "concatenation",
      "pluralPhrase": "concatenations",
      "indexType": "html",
      "directObjectType": "html"
    },
    "colgroup of <html>": {
      "key": "colgroup of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "colgroup",
      "pluralPhrase": "colgroups",
      "directObjectType": "html"
    },
    "colgroup <string> of <html>": {
      "key": "colgroup <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "colgroup",
      "pluralPhrase": "colgroups",
      "indexType": "string",
      "directObjectType": "html"
    },
    "col of <html>": {
      "key": "col of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "col",
      "pluralPhrase": "cols",
      "directObjectType": "html"
    },
    "col <string> of <html>": {
      "key": "col <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "col",
      "pluralPhrase": "cols",
      "indexType": "string",
      "directObjectType": "html"
    },
    "code of <html>": {
      "key": "code of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "code",
      "pluralPhrase": "codes",
      "directObjectType": "html"
    },
    "code <string> of <html>": {
      "key": "code <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "code",
      "pluralPhrase": "codes",
      "indexType": "string",
      "directObjectType": "html"
    },
    "cite of <html>": {
      "key": "cite of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "cite",
      "pluralPhrase": "cites",
      "directObjectType": "html"
    },
    "cite <string> of <html>": {
      "key": "cite <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "cite",
      "pluralPhrase": "cites",
      "indexType": "string",
      "directObjectType": "html"
    },
    "caption of <html>": {
      "key": "caption of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "caption",
      "pluralPhrase": "captions",
      "directObjectType": "html"
    },
    "caption <string> of <html>": {
      "key": "caption <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "caption",
      "pluralPhrase": "captions",
      "indexType": "string",
      "directObjectType": "html"
    },
    "body of <html>": {
      "key": "body of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "body",
      "pluralPhrase": "bodys",
      "directObjectType": "html"
    },
    "body <string> of <html>": {
      "key": "body <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "body",
      "pluralPhrase": "bodys",
      "indexType": "string",
      "directObjectType": "html"
    },
    "blockquote of <html>": {
      "key": "blockquote of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "blockquote",
      "pluralPhrase": "blockquotes",
      "directObjectType": "html"
    },
    "blockquote <string> of <html>": {
      "key": "blockquote <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "blockquote",
      "pluralPhrase": "blockquotes",
      "indexType": "string",
      "directObjectType": "html"
    },
    "big of <html>": {
      "key": "big of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "big",
      "pluralPhrase": "bigs",
      "directObjectType": "html"
    },
    "big <string> of <html>": {
      "key": "big <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "big",
      "pluralPhrase": "bigs",
      "indexType": "string",
      "directObjectType": "html"
    },
    "base of <html>": {
      "key": "base of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "base",
      "pluralPhrase": "bases",
      "directObjectType": "html"
    },
    "base <string> of <html>": {
      "key": "base <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "base",
      "pluralPhrase": "bases",
      "indexType": "string",
      "directObjectType": "html"
    },
    "b of <html>": {
      "key": "b of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "b",
      "pluralPhrase": "bs",
      "directObjectType": "html"
    },
    "b <string> of <html>": {
      "key": "b <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "b",
      "pluralPhrase": "bs",
      "indexType": "string",
      "directObjectType": "html"
    },
    "anchor of <html>": {
      "key": "anchor of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "anchor",
      "pluralPhrase": "anchors",
      "directObjectType": "html"
    },
    "anchor <string> of <html>": {
      "key": "anchor <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "anchor",
      "pluralPhrase": "anchors",
      "indexType": "string",
      "directObjectType": "html"
    },
    "address of <html>": {
      "key": "address of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "address",
      "pluralPhrase": "addresss",
      "directObjectType": "html"
    },
    "address <string> of <html>": {
      "key": "address <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "address",
      "pluralPhrase": "addresss",
      "indexType": "string",
      "directObjectType": "html"
    },
    "acronym of <html>": {
      "key": "acronym of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "acronym",
      "pluralPhrase": "acronyms",
      "directObjectType": "html"
    },
    "acronym <string> of <html>": {
      "key": "acronym <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "acronym",
      "pluralPhrase": "acronyms",
      "indexType": "string",
      "directObjectType": "html"
    },
    "abbr of <html>": {
      "key": "abbr of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "abbr",
      "pluralPhrase": "abbrs",
      "directObjectType": "html"
    },
    "abbr <string> of <html>": {
      "key": "abbr <string> of <html>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "abbr",
      "pluralPhrase": "abbrs",
      "indexType": "string",
      "directObjectType": "html"
    },
    "<string> & <html>": {
      "key": "<string> & <html>",
      "type": "binaryOp",
      "resultType": "html",
      "leftType": "string",
      "op": "&",
      "rightType": "html"
    },
    "<html> as string": {
      "key": "<html> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "html",
      "phrase": "string"
    },
    "<html> as html": {
      "key": "<html> as html",
      "type": "cast",
      "resultType": "html",
      "argType": "html",
      "phrase": "html"
    },
    "<html> & <string>": {
      "key": "<html> & <string>",
      "type": "binaryOp",
      "resultType": "html",
      "leftType": "html",
      "op": "&",
      "rightType": "string"
    },
    "<html> & <html>": {
      "key": "<html> & <html>",
      "type": "binaryOp",
      "resultType": "html",
      "leftType": "html",
      "op": "&",
      "rightType": "html"
    },
    "time of <historical fixlet count>": {
      "key": "time of <historical fixlet count>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time",
      "pluralPhrase": "times",
      "directObjectType": "historical fixlet count"
    },
    "database id of <historical fixlet count>": {
      "key": "database id of <historical fixlet count>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "historical fixlet count"
    },
    "count map of <historical fixlet count>": {
      "key": "count map of <historical fixlet count>",
      "type": "property",
      "resultType": "fixlet count pair",
      "singularPhrase": "count map",
      "pluralPhrase": "count maps",
      "directObjectType": "historical fixlet count"
    },
    "time of <historical computer count>": {
      "key": "time of <historical computer count>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time",
      "pluralPhrase": "times",
      "directObjectType": "historical computer count"
    },
    "database id of <historical computer count>": {
      "key": "database id of <historical computer count>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "historical computer count"
    },
    "count of <historical computer count>": {
      "key": "count of <historical computer count>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "count",
      "pluralPhrase": "counts",
      "directObjectType": "historical computer count"
    },
    "multiplicity of <hertz with multiplicity>": {
      "key": "multiplicity of <hertz with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "hertz with multiplicity"
    },
    "unique value of <hertz>": {
      "key": "unique value of <hertz>",
      "type": "property",
      "resultType": "hertz with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "hertz"
    },
    "significant digits <integer> of <hertz>": {
      "key": "significant digits <integer> of <hertz>",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "significant digits",
      "pluralPhrase": "significant digitss",
      "indexType": "integer",
      "directObjectType": "hertz"
    },
    "minimum of <hertz>": {
      "key": "minimum of <hertz>",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "hertz"
    },
    "maximum of <hertz>": {
      "key": "maximum of <hertz>",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "hertz"
    },
    "extrema of <hertz>": {
      "key": "extrema of <hertz>",
      "type": "property",
      "resultType": "( hertz, hertz )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "hertz"
    },
    "absolute value of <hertz>": {
      "key": "absolute value of <hertz>",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "absolute value",
      "pluralPhrase": "absolute values",
      "directObjectType": "hertz"
    },
    "<integer> * <hertz>": {
      "key": "<integer> * <hertz>",
      "type": "binaryOp",
      "resultType": "hertz",
      "leftType": "integer",
      "op": "*",
      "rightType": "hertz"
    },
    "<hertz> mod <hertz>": {
      "key": "<hertz> mod <hertz>",
      "type": "binaryOp",
      "resultType": "hertz",
      "leftType": "hertz",
      "op": "mod",
      "rightType": "hertz"
    },
    "<hertz> as string": {
      "key": "<hertz> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "hertz",
      "phrase": "string"
    },
    "<hertz> = <hertz>": {
      "key": "<hertz> = <hertz>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "hertz",
      "op": "=",
      "rightType": "hertz"
    },
    "<hertz> <= <hertz>": {
      "key": "<hertz> <= <hertz>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "hertz",
      "op": "<=",
      "rightType": "hertz"
    },
    "<hertz> < <hertz>": {
      "key": "<hertz> < <hertz>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "hertz",
      "op": "<",
      "rightType": "hertz"
    },
    "<hertz> / <integer>": {
      "key": "<hertz> / <integer>",
      "type": "binaryOp",
      "resultType": "hertz",
      "leftType": "hertz",
      "op": "/",
      "rightType": "integer"
    },
    "<hertz> / <hertz>": {
      "key": "<hertz> / <hertz>",
      "type": "binaryOp",
      "resultType": "integer",
      "leftType": "hertz",
      "op": "/",
      "rightType": "hertz"
    },
    "<hertz> - <hertz>": {
      "key": "<hertz> - <hertz>",
      "type": "binaryOp",
      "resultType": "hertz",
      "leftType": "hertz",
      "op": "-",
      "rightType": "hertz"
    },
    "<hertz> + <hertz>": {
      "key": "<hertz> + <hertz>",
      "type": "binaryOp",
      "resultType": "hertz",
      "leftType": "hertz",
      "op": "+",
      "rightType": "hertz"
    },
    "<hertz> * <integer>": {
      "key": "<hertz> * <integer>",
      "type": "binaryOp",
      "resultType": "hertz",
      "leftType": "hertz",
      "op": "*",
      "rightType": "integer"
    },
    "- <hertz>": {
      "key": "- <hertz>",
      "type": "unaryOp",
      "resultType": "hertz",
      "argType": "hertz",
      "op": "-"
    },
    "<format> as string": {
      "key": "<format> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "format",
      "phrase": "string"
    },
    "<format> + <time>": {
      "key": "<format> + <time>",
      "type": "binaryOp",
      "resultType": "format",
      "leftType": "format",
      "op": "+",
      "rightType": "time"
    },
    "<format> + <time of day>": {
      "key": "<format> + <time of day>",
      "type": "binaryOp",
      "resultType": "format",
      "leftType": "format",
      "op": "+",
      "rightType": "time of day"
    },
    "<format> + <time interval>": {
      "key": "<format> + <time interval>",
      "type": "binaryOp",
      "resultType": "format",
      "leftType": "format",
      "op": "+",
      "rightType": "time interval"
    },
    "<format> + <string>": {
      "key": "<format> + <string>",
      "type": "binaryOp",
      "resultType": "format",
      "leftType": "format",
      "op": "+",
      "rightType": "string"
    },
    "<format> + <integer>": {
      "key": "<format> + <integer>",
      "type": "binaryOp",
      "resultType": "format",
      "leftType": "format",
      "op": "+",
      "rightType": "integer"
    },
    "<format> + <format>": {
      "key": "<format> + <format>",
      "type": "binaryOp",
      "resultType": "format",
      "leftType": "format",
      "op": "+",
      "rightType": "format"
    },
    "multiplicity of <floating point with multiplicity>": {
      "key": "multiplicity of <floating point with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "floating point with multiplicity"
    },
    "unique value of <floating point>": {
      "key": "unique value of <floating point>",
      "type": "property",
      "resultType": "floating point with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "floating point"
    },
    "underflow of <floating point>": {
      "key": "underflow of <floating point>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "underflow",
      "pluralPhrase": "underflows",
      "directObjectType": "floating point"
    },
    "sum of <floating point>": {
      "key": "sum of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "sum",
      "pluralPhrase": "sums",
      "directObjectType": "floating point"
    },
    "standard deviation of <floating point>": {
      "key": "standard deviation of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "standard deviation",
      "pluralPhrase": "standard deviations",
      "directObjectType": "floating point"
    },
    "significance threshold of <floating point>": {
      "key": "significance threshold of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "significance threshold",
      "pluralPhrase": "significance thresholds",
      "directObjectType": "floating point"
    },
    "significance place of <floating point>": {
      "key": "significance place of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "significance place",
      "pluralPhrase": "significance places",
      "directObjectType": "floating point"
    },
    "significance place <integer> of <floating point>": {
      "key": "significance place <integer> of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "significance place",
      "pluralPhrase": "significance places",
      "indexType": "integer",
      "directObjectType": "floating point"
    },
    "relative significance place of <floating point>": {
      "key": "relative significance place of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "relative significance place",
      "pluralPhrase": "relative significance places",
      "directObjectType": "floating point"
    },
    "relative significance place <integer> of <floating point>": {
      "key": "relative significance place <integer> of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "relative significance place",
      "pluralPhrase": "relative significance places",
      "indexType": "integer",
      "directObjectType": "floating point"
    },
    "product of <floating point>": {
      "key": "product of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "floating point"
    },
    "overflow of <floating point>": {
      "key": "overflow of <floating point>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "overflow",
      "pluralPhrase": "overflows",
      "directObjectType": "floating point"
    },
    "normal of <floating point>": {
      "key": "normal of <floating point>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "normal",
      "pluralPhrase": "normals",
      "directObjectType": "floating point"
    },
    "nan of <floating point>": {
      "key": "nan of <floating point>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "nan",
      "pluralPhrase": "nans",
      "directObjectType": "floating point"
    },
    "more significance <integer> of <floating point>": {
      "key": "more significance <integer> of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "more significance",
      "pluralPhrase": "more significances",
      "indexType": "integer",
      "directObjectType": "floating point"
    },
    "minimum of <floating point>": {
      "key": "minimum of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "floating point"
    },
    "mean of <floating point>": {
      "key": "mean of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "mean",
      "pluralPhrase": "means",
      "directObjectType": "floating point"
    },
    "maximum of <floating point>": {
      "key": "maximum of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "floating point"
    },
    "less significance <integer> of <floating point>": {
      "key": "less significance <integer> of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "less significance",
      "pluralPhrase": "less significances",
      "indexType": "integer",
      "directObjectType": "floating point"
    },
    "invalid of <floating point>": {
      "key": "invalid of <floating point>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "invalid",
      "pluralPhrase": "invalids",
      "directObjectType": "floating point"
    },
    "integer floor of <floating point>": {
      "key": "integer floor of <floating point>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer floor",
      "pluralPhrase": "integer floors",
      "directObjectType": "floating point"
    },
    "integer ceiling of <floating point>": {
      "key": "integer ceiling of <floating point>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer ceiling",
      "pluralPhrase": "integer ceilings",
      "directObjectType": "floating point"
    },
    "infinite of <floating point>": {
      "key": "infinite of <floating point>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "infinite",
      "pluralPhrase": "infinites",
      "directObjectType": "floating point"
    },
    "inexact of <floating point>": {
      "key": "inexact of <floating point>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "inexact",
      "pluralPhrase": "inexacts",
      "directObjectType": "floating point"
    },
    "finite of <floating point>": {
      "key": "finite of <floating point>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "finite",
      "pluralPhrase": "finites",
      "directObjectType": "floating point"
    },
    "extrema of <floating point>": {
      "key": "extrema of <floating point>",
      "type": "property",
      "resultType": "( floating point, floating point )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "floating point"
    },
    "divided by zero of <floating point>": {
      "key": "divided by zero of <floating point>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "divided by zero",
      "pluralPhrase": "divided by zeroes",
      "directObjectType": "floating point"
    },
    "<rate> / <floating point>": {
      "key": "<rate> / <floating point>",
      "type": "binaryOp",
      "resultType": "rate",
      "leftType": "rate",
      "op": "/",
      "rightType": "floating point"
    },
    "<rate> * <floating point>": {
      "key": "<rate> * <floating point>",
      "type": "binaryOp",
      "resultType": "rate",
      "leftType": "rate",
      "op": "*",
      "rightType": "floating point"
    },
    "<integer> = <floating point>": {
      "key": "<integer> = <floating point>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "=",
      "rightType": "floating point"
    },
    "<integer> <= <floating point>": {
      "key": "<integer> <= <floating point>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "<=",
      "rightType": "floating point"
    },
    "<integer> < <floating point>": {
      "key": "<integer> < <floating point>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "<",
      "rightType": "floating point"
    },
    "<integer> / <floating point>": {
      "key": "<integer> / <floating point>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "integer",
      "op": "/",
      "rightType": "floating point"
    },
    "<integer> - <floating point>": {
      "key": "<integer> - <floating point>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "integer",
      "op": "-",
      "rightType": "floating point"
    },
    "<integer> + <floating point>": {
      "key": "<integer> + <floating point>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "integer",
      "op": "+",
      "rightType": "floating point"
    },
    "<integer> * <floating point>": {
      "key": "<integer> * <floating point>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "integer",
      "op": "*",
      "rightType": "floating point"
    },
    "<floating point> as string": {
      "key": "<floating point> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "floating point",
      "phrase": "string"
    },
    "<floating point> as standard notation": {
      "key": "<floating point> as standard notation",
      "type": "cast",
      "resultType": "string",
      "argType": "floating point",
      "phrase": "standard notation"
    },
    "<floating point> as scientific notation": {
      "key": "<floating point> as scientific notation",
      "type": "cast",
      "resultType": "string",
      "argType": "floating point",
      "phrase": "scientific notation"
    },
    "<floating point> as integer": {
      "key": "<floating point> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "floating point",
      "phrase": "integer"
    },
    "<floating point> as floating point": {
      "key": "<floating point> as floating point",
      "type": "cast",
      "resultType": "floating point",
      "argType": "floating point",
      "phrase": "floating point"
    },
    "<floating point> = <integer>": {
      "key": "<floating point> = <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "floating point",
      "op": "=",
      "rightType": "integer"
    },
    "<floating point> = <floating point>": {
      "key": "<floating point> = <floating point>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "floating point",
      "op": "=",
      "rightType": "floating point"
    },
    "<floating point> <= <integer>": {
      "key": "<floating point> <= <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "floating point",
      "op": "<=",
      "rightType": "integer"
    },
    "<floating point> <= <floating point>": {
      "key": "<floating point> <= <floating point>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "floating point",
      "op": "<=",
      "rightType": "floating point"
    },
    "<floating point> < <integer>": {
      "key": "<floating point> < <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "floating point",
      "op": "<",
      "rightType": "integer"
    },
    "<floating point> < <floating point>": {
      "key": "<floating point> < <floating point>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "floating point",
      "op": "<",
      "rightType": "floating point"
    },
    "<floating point> / <time interval>": {
      "key": "<floating point> / <time interval>",
      "type": "binaryOp",
      "resultType": "rate",
      "leftType": "floating point",
      "op": "/",
      "rightType": "time interval"
    },
    "<floating point> / <integer>": {
      "key": "<floating point> / <integer>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "floating point",
      "op": "/",
      "rightType": "integer"
    },
    "<floating point> / <floating point>": {
      "key": "<floating point> / <floating point>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "floating point",
      "op": "/",
      "rightType": "floating point"
    },
    "<floating point> - <integer>": {
      "key": "<floating point> - <integer>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "floating point",
      "op": "-",
      "rightType": "integer"
    },
    "<floating point> - <floating point>": {
      "key": "<floating point> - <floating point>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "floating point",
      "op": "-",
      "rightType": "floating point"
    },
    "<floating point> + <integer>": {
      "key": "<floating point> + <integer>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "floating point",
      "op": "+",
      "rightType": "integer"
    },
    "<floating point> + <floating point>": {
      "key": "<floating point> + <floating point>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "floating point",
      "op": "+",
      "rightType": "floating point"
    },
    "<floating point> * <rate>": {
      "key": "<floating point> * <rate>",
      "type": "binaryOp",
      "resultType": "rate",
      "leftType": "floating point",
      "op": "*",
      "rightType": "rate"
    },
    "<floating point> * <integer>": {
      "key": "<floating point> * <integer>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "floating point",
      "op": "*",
      "rightType": "integer"
    },
    "<floating point> * <floating point>": {
      "key": "<floating point> * <floating point>",
      "type": "binaryOp",
      "resultType": "floating point",
      "leftType": "floating point",
      "op": "*",
      "rightType": "floating point"
    },
    "- <floating point>": {
      "key": "- <floating point>",
      "type": "unaryOp",
      "resultType": "floating point",
      "argType": "floating point",
      "op": "-"
    },
    "source severity of <fixlet count pair>": {
      "key": "source severity of <fixlet count pair>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "source severity",
      "pluralPhrase": "source severitys",
      "directObjectType": "fixlet count pair"
    },
    "count of <fixlet count pair>": {
      "key": "count of <fixlet count pair>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "count",
      "pluralPhrase": "counts",
      "directObjectType": "fixlet count pair"
    },
    "rate <time interval> of <exponential projection>": {
      "key": "rate <time interval> of <exponential projection>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "rate",
      "pluralPhrase": "rates",
      "indexType": "time interval",
      "directObjectType": "exponential projection"
    },
    "extrapolation <time> of <exponential projection>": {
      "key": "extrapolation <time> of <exponential projection>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "extrapolation",
      "pluralPhrase": "extrapolations",
      "indexType": "time",
      "directObjectType": "exponential projection"
    },
    "correlation coefficient of <exponential projection>": {
      "key": "correlation coefficient of <exponential projection>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "correlation coefficient",
      "pluralPhrase": "correlation coefficients",
      "directObjectType": "exponential projection"
    },
    "value of <distinguished name component>": {
      "key": "value of <distinguished name component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "distinguished name component"
    },
    "type of <distinguished name component>": {
      "key": "type of <distinguished name component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "distinguished name component"
    },
    "component of <distinguished name>": {
      "key": "component of <distinguished name>",
      "type": "property",
      "resultType": "distinguished name component",
      "singularPhrase": "component",
      "pluralPhrase": "components",
      "directObjectType": "distinguished name"
    },
    "component <integer> of <distinguished name>": {
      "key": "component <integer> of <distinguished name>",
      "type": "property",
      "resultType": "distinguished name component",
      "singularPhrase": "component",
      "pluralPhrase": "components",
      "indexType": "integer",
      "directObjectType": "distinguished name"
    },
    "multiplicity of <day of year with multiplicity>": {
      "key": "multiplicity of <day of year with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "day of year with multiplicity"
    },
    "unique value of <day of year>": {
      "key": "unique value of <day of year>",
      "type": "property",
      "resultType": "day of year with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "day of year"
    },
    "month of <day of year>": {
      "key": "month of <day of year>",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "month",
      "pluralPhrase": "months",
      "directObjectType": "day of year"
    },
    "minimum of <day of year>": {
      "key": "minimum of <day of year>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "day of year"
    },
    "maximum of <day of year>": {
      "key": "maximum of <day of year>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "day of year"
    },
    "extrema of <day of year>": {
      "key": "extrema of <day of year>",
      "type": "property",
      "resultType": "( day of year, day of year )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "day of year"
    },
    "day of <day of year>": {
      "key": "day of <day of year>",
      "type": "property",
      "resultType": "day of month",
      "singularPhrase": "day",
      "pluralPhrase": "days",
      "directObjectType": "day of year"
    },
    "<year> & <day of year>": {
      "key": "<year> & <day of year>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "year",
      "op": "&",
      "rightType": "day of year"
    },
    "<time interval> + <day of year>": {
      "key": "<time interval> + <day of year>",
      "type": "binaryOp",
      "resultType": "day of year",
      "leftType": "time interval",
      "op": "+",
      "rightType": "day of year"
    },
    "<number of months> + <day of year>": {
      "key": "<number of months> + <day of year>",
      "type": "binaryOp",
      "resultType": "day of year",
      "leftType": "number of months",
      "op": "+",
      "rightType": "day of year"
    },
    "<month and year> & <day of year>": {
      "key": "<month and year> & <day of year>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "month and year",
      "op": "&",
      "rightType": "day of year"
    },
    "<day of year> as string": {
      "key": "<day of year> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "day of year",
      "phrase": "string"
    },
    "<day of year> = <day of year>": {
      "key": "<day of year> = <day of year>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "day of year",
      "op": "=",
      "rightType": "day of year"
    },
    "<day of year> <= <day of year>": {
      "key": "<day of year> <= <day of year>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "day of year",
      "op": "<=",
      "rightType": "day of year"
    },
    "<day of year> < <day of year>": {
      "key": "<day of year> < <day of year>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "day of year",
      "op": "<",
      "rightType": "day of year"
    },
    "<day of year> - <time interval>": {
      "key": "<day of year> - <time interval>",
      "type": "binaryOp",
      "resultType": "day of year",
      "leftType": "day of year",
      "op": "-",
      "rightType": "time interval"
    },
    "<day of year> - <number of months>": {
      "key": "<day of year> - <number of months>",
      "type": "binaryOp",
      "resultType": "day of year",
      "leftType": "day of year",
      "op": "-",
      "rightType": "number of months"
    },
    "<day of year> - <day of year>": {
      "key": "<day of year> - <day of year>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "day of year",
      "op": "-",
      "rightType": "day of year"
    },
    "<day of year> + <time interval>": {
      "key": "<day of year> + <time interval>",
      "type": "binaryOp",
      "resultType": "day of year",
      "leftType": "day of year",
      "op": "+",
      "rightType": "time interval"
    },
    "<day of year> + <number of months>": {
      "key": "<day of year> + <number of months>",
      "type": "binaryOp",
      "resultType": "day of year",
      "leftType": "day of year",
      "op": "+",
      "rightType": "number of months"
    },
    "<day of year> & <year>": {
      "key": "<day of year> & <year>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "day of year",
      "op": "&",
      "rightType": "year"
    },
    "<day of year> & <month and year>": {
      "key": "<day of year> & <month and year>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "day of year",
      "op": "&",
      "rightType": "month and year"
    },
    "multiplicity of <day of week with multiplicity>": {
      "key": "multiplicity of <day of week with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "day of week with multiplicity"
    },
    "unique value of <day of week>": {
      "key": "unique value of <day of week>",
      "type": "property",
      "resultType": "day of week with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "day of week"
    },
    "<time interval> + <day of week>": {
      "key": "<time interval> + <day of week>",
      "type": "binaryOp",
      "resultType": "day of week",
      "leftType": "time interval",
      "op": "+",
      "rightType": "day of week"
    },
    "<format> + <day of week>": {
      "key": "<format> + <day of week>",
      "type": "binaryOp",
      "resultType": "format",
      "leftType": "format",
      "op": "+",
      "rightType": "day of week"
    },
    "<day of week> as three letters": {
      "key": "<day of week> as three letters",
      "type": "cast",
      "resultType": "string",
      "argType": "day of week",
      "phrase": "three letters"
    },
    "<day of week> as string": {
      "key": "<day of week> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "day of week",
      "phrase": "string"
    },
    "<day of week> = <day of week>": {
      "key": "<day of week> = <day of week>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "day of week",
      "op": "=",
      "rightType": "day of week"
    },
    "<day of week> - <time interval>": {
      "key": "<day of week> - <time interval>",
      "type": "binaryOp",
      "resultType": "day of week",
      "leftType": "day of week",
      "op": "-",
      "rightType": "time interval"
    },
    "<day of week> - <day of week>": {
      "key": "<day of week> - <day of week>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "day of week",
      "op": "-",
      "rightType": "day of week"
    },
    "<day of week> + <time interval>": {
      "key": "<day of week> + <time interval>",
      "type": "binaryOp",
      "resultType": "day of week",
      "leftType": "day of week",
      "op": "+",
      "rightType": "time interval"
    },
    "multiplicity of <day of month with multiplicity>": {
      "key": "multiplicity of <day of month with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "day of month with multiplicity"
    },
    "unique value of <day of month>": {
      "key": "unique value of <day of month>",
      "type": "property",
      "resultType": "day of month with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "day of month"
    },
    "minimum of <day of month>": {
      "key": "minimum of <day of month>",
      "type": "property",
      "resultType": "day of month",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "day of month"
    },
    "maximum of <day of month>": {
      "key": "maximum of <day of month>",
      "type": "property",
      "resultType": "day of month",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "day of month"
    },
    "extrema of <day of month>": {
      "key": "extrema of <day of month>",
      "type": "property",
      "resultType": "( day of month, day of month )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "day of month"
    },
    "<time interval> + <day of month>": {
      "key": "<time interval> + <day of month>",
      "type": "binaryOp",
      "resultType": "day of month",
      "leftType": "time interval",
      "op": "+",
      "rightType": "day of month"
    },
    "<month> & <day of month>": {
      "key": "<month> & <day of month>",
      "type": "binaryOp",
      "resultType": "day of year",
      "leftType": "month",
      "op": "&",
      "rightType": "day of month"
    },
    "<month and year> & <day of month>": {
      "key": "<month and year> & <day of month>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "month and year",
      "op": "&",
      "rightType": "day of month"
    },
    "<day of month> as two digits": {
      "key": "<day of month> as two digits",
      "type": "cast",
      "resultType": "string",
      "argType": "day of month",
      "phrase": "two digits"
    },
    "<day of month> as string": {
      "key": "<day of month> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "day of month",
      "phrase": "string"
    },
    "<day of month> as integer": {
      "key": "<day of month> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "day of month",
      "phrase": "integer"
    },
    "<day of month> = <day of month>": {
      "key": "<day of month> = <day of month>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "day of month",
      "op": "=",
      "rightType": "day of month"
    },
    "<day of month> <= <day of month>": {
      "key": "<day of month> <= <day of month>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "day of month",
      "op": "<=",
      "rightType": "day of month"
    },
    "<day of month> < <day of month>": {
      "key": "<day of month> < <day of month>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "day of month",
      "op": "<",
      "rightType": "day of month"
    },
    "<day of month> - <time interval>": {
      "key": "<day of month> - <time interval>",
      "type": "binaryOp",
      "resultType": "day of month",
      "leftType": "day of month",
      "op": "-",
      "rightType": "time interval"
    },
    "<day of month> - <day of month>": {
      "key": "<day of month> - <day of month>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "day of month",
      "op": "-",
      "rightType": "day of month"
    },
    "<day of month> + <time interval>": {
      "key": "<day of month> + <time interval>",
      "type": "binaryOp",
      "resultType": "day of month",
      "leftType": "day of month",
      "op": "+",
      "rightType": "time interval"
    },
    "<day of month> & <month>": {
      "key": "<day of month> & <month>",
      "type": "binaryOp",
      "resultType": "day of year",
      "leftType": "day of month",
      "op": "&",
      "rightType": "month"
    },
    "<day of month> & <month and year>": {
      "key": "<day of month> & <month and year>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "day of month",
      "op": "&",
      "rightType": "month and year"
    },
    "multiplicity of <date with multiplicity>": {
      "key": "multiplicity of <date with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "date with multiplicity"
    },
    "year of <date>": {
      "key": "year of <date>",
      "type": "property",
      "resultType": "year",
      "singularPhrase": "year",
      "pluralPhrase": "years",
      "directObjectType": "date"
    },
    "unique value of <date>": {
      "key": "unique value of <date>",
      "type": "property",
      "resultType": "date with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "date"
    },
    "month_and_year of <date>": {
      "key": "month_and_year of <date>",
      "type": "property",
      "resultType": "month and year",
      "singularPhrase": "month_and_year",
      "pluralPhrase": "months_and_years",
      "directObjectType": "date"
    },
    "month of <date>": {
      "key": "month of <date>",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "month",
      "pluralPhrase": "months",
      "directObjectType": "date"
    },
    "minimum of <date>": {
      "key": "minimum of <date>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "date"
    },
    "maximum of <date>": {
      "key": "maximum of <date>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "date"
    },
    "extrema of <date>": {
      "key": "extrema of <date>",
      "type": "property",
      "resultType": "( date, date )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "date"
    },
    "day_of_year of <date>": {
      "key": "day_of_year of <date>",
      "type": "property",
      "resultType": "day of year",
      "singularPhrase": "day_of_year",
      "pluralPhrase": "days_of_year",
      "directObjectType": "date"
    },
    "day_of_week of <date>": {
      "key": "day_of_week of <date>",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "day_of_week",
      "pluralPhrase": "days_of_week",
      "directObjectType": "date"
    },
    "day_of_month of <date>": {
      "key": "day_of_month of <date>",
      "type": "property",
      "resultType": "day of month",
      "singularPhrase": "day_of_month",
      "pluralPhrase": "days_of_month",
      "directObjectType": "date"
    },
    "<time of day with time zone> & <date>": {
      "key": "<time of day with time zone> & <date>",
      "type": "binaryOp",
      "resultType": "time",
      "leftType": "time of day with time zone",
      "op": "&",
      "rightType": "date"
    },
    "<time interval> + <date>": {
      "key": "<time interval> + <date>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "time interval",
      "op": "+",
      "rightType": "date"
    },
    "<number of months> + <date>": {
      "key": "<number of months> + <date>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "number of months",
      "op": "+",
      "rightType": "date"
    },
    "<format> + <date>": {
      "key": "<format> + <date>",
      "type": "binaryOp",
      "resultType": "format",
      "leftType": "format",
      "op": "+",
      "rightType": "date"
    },
    "<date> as string": {
      "key": "<date> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "date",
      "phrase": "string"
    },
    "<date> = <date>": {
      "key": "<date> = <date>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "date",
      "op": "=",
      "rightType": "date"
    },
    "<date> <= <date>": {
      "key": "<date> <= <date>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "date",
      "op": "<=",
      "rightType": "date"
    },
    "<date> < <date>": {
      "key": "<date> < <date>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "date",
      "op": "<",
      "rightType": "date"
    },
    "<date> - <time interval>": {
      "key": "<date> - <time interval>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "date",
      "op": "-",
      "rightType": "time interval"
    },
    "<date> - <number of months>": {
      "key": "<date> - <number of months>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "date",
      "op": "-",
      "rightType": "number of months"
    },
    "<date> - <date>": {
      "key": "<date> - <date>",
      "type": "binaryOp",
      "resultType": "time interval",
      "leftType": "date",
      "op": "-",
      "rightType": "date"
    },
    "<date> + <time interval>": {
      "key": "<date> + <time interval>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "date",
      "op": "+",
      "rightType": "time interval"
    },
    "<date> + <number of months>": {
      "key": "<date> + <number of months>",
      "type": "binaryOp",
      "resultType": "date",
      "leftType": "date",
      "op": "+",
      "rightType": "number of months"
    },
    "<date> & <time of day with time zone>": {
      "key": "<date> & <time of day with time zone>",
      "type": "binaryOp",
      "resultType": "time",
      "leftType": "date",
      "op": "&",
      "rightType": "time of day with time zone"
    },
    "fips mode of <cryptography>": {
      "key": "fips mode of <cryptography>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fips mode",
      "pluralPhrase": "fips modes",
      "directObjectType": "cryptography"
    },
    "fips mode failure message of <cryptography>": {
      "key": "fips mode failure message of <cryptography>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "fips mode failure message",
      "pluralPhrase": "fips mode failure messages",
      "directObjectType": "cryptography"
    },
    "desired fips mode of <cryptography>": {
      "key": "desired fips mode of <cryptography>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "desired fips mode",
      "pluralPhrase": "desired fips modes",
      "directObjectType": "cryptography"
    },
    "result type of <cast>": {
      "key": "result type of <cast>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "result type",
      "pluralPhrase": "result types",
      "directObjectType": "cast"
    },
    "operand type of <cast>": {
      "key": "operand type of <cast>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "operand type",
      "pluralPhrase": "operand types",
      "directObjectType": "cast"
    },
    "name of <cast>": {
      "key": "name of <cast>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "cast"
    },
    "<cast> as string": {
      "key": "<cast> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "cast",
      "phrase": "string"
    },
    "javascript array <string> of <boolean>": {
      "key": "javascript array <string> of <boolean>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "javascript array",
      "pluralPhrase": "javascript arrays",
      "indexType": "string",
      "directObjectType": "boolean"
    },
    "disjunction of <boolean>": {
      "key": "disjunction of <boolean>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "disjunction",
      "pluralPhrase": "disjunctions",
      "directObjectType": "boolean"
    },
    "conjunction of <boolean>": {
      "key": "conjunction of <boolean>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "conjunction",
      "pluralPhrase": "conjunctions",
      "directObjectType": "boolean"
    },
    "<time range> * <boolean>": {
      "key": "<time range> * <boolean>",
      "type": "binaryOp",
      "resultType": "timed( time range, boolean )",
      "leftType": "time range",
      "op": "*",
      "rightType": "boolean"
    },
    "<boolean> as string": {
      "key": "<boolean> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "boolean",
      "phrase": "string"
    },
    "<boolean> as boolean": {
      "key": "<boolean> as boolean",
      "type": "cast",
      "resultType": "boolean",
      "argType": "boolean",
      "phrase": "boolean"
    },
    "<boolean> = <boolean>": {
      "key": "<boolean> = <boolean>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "boolean",
      "op": "=",
      "rightType": "boolean"
    },
    "<boolean> * <time range>": {
      "key": "<boolean> * <time range>",
      "type": "binaryOp",
      "resultType": "timed( time range, boolean )",
      "leftType": "boolean",
      "op": "*",
      "rightType": "time range"
    },
    "right shift <integer> of <bit set>": {
      "key": "right shift <integer> of <bit set>",
      "type": "property",
      "resultType": "bit set",
      "singularPhrase": "right shift",
      "pluralPhrase": "right shifts",
      "indexType": "integer",
      "directObjectType": "bit set"
    },
    "one bit of <bit set>": {
      "key": "one bit of <bit set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "one bit",
      "pluralPhrase": "one bits",
      "directObjectType": "bit set"
    },
    "most significant one bit of <bit set>": {
      "key": "most significant one bit of <bit set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "most significant one bit",
      "pluralPhrase": "most significant one bits",
      "directObjectType": "bit set"
    },
    "left shift <integer> of <bit set>": {
      "key": "left shift <integer> of <bit set>",
      "type": "property",
      "resultType": "bit set",
      "singularPhrase": "left shift",
      "pluralPhrase": "left shifts",
      "indexType": "integer",
      "directObjectType": "bit set"
    },
    "least significant one bit of <bit set>": {
      "key": "least significant one bit of <bit set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "least significant one bit",
      "pluralPhrase": "least significant one bits",
      "directObjectType": "bit set"
    },
    "bit <integer> of <bit set>": {
      "key": "bit <integer> of <bit set>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "bit",
      "pluralPhrase": "bits",
      "indexType": "integer",
      "directObjectType": "bit set"
    },
    "<bit set> contains <bit set>": {
      "key": "<bit set> contains <bit set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bit set",
      "op": "contains",
      "rightType": "bit set"
    },
    "<bit set> as string": {
      "key": "<bit set> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "bit set",
      "phrase": "string"
    },
    "<bit set> as integer": {
      "key": "<bit set> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "bit set",
      "phrase": "integer"
    },
    "<bit set> = <bit set>": {
      "key": "<bit set> = <bit set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bit set",
      "op": "=",
      "rightType": "bit set"
    },
    "<bit set> - <bit set>": {
      "key": "<bit set> - <bit set>",
      "type": "binaryOp",
      "resultType": "bit set",
      "leftType": "bit set",
      "op": "-",
      "rightType": "bit set"
    },
    "<bit set> + <bit set>": {
      "key": "<bit set> + <bit set>",
      "type": "binaryOp",
      "resultType": "bit set",
      "leftType": "bit set",
      "op": "+",
      "rightType": "bit set"
    },
    "<bit set> * <bit set>": {
      "key": "<bit set> * <bit set>",
      "type": "binaryOp",
      "resultType": "bit set",
      "leftType": "bit set",
      "op": "*",
      "rightType": "bit set"
    },
    "symbol of <binary operator>": {
      "key": "symbol of <binary operator>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "symbol",
      "pluralPhrase": "symbols",
      "directObjectType": "binary operator"
    },
    "right operand type of <binary operator>": {
      "key": "right operand type of <binary operator>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "right operand type",
      "pluralPhrase": "right operand types",
      "directObjectType": "binary operator"
    },
    "result type of <binary operator>": {
      "key": "result type of <binary operator>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "result type",
      "pluralPhrase": "result types",
      "directObjectType": "binary operator"
    },
    "name of <binary operator>": {
      "key": "name of <binary operator>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "binary operator"
    },
    "left operand type of <binary operator>": {
      "key": "left operand type of <binary operator>",
      "type": "property",
      "resultType": "type",
      "singularPhrase": "left operand type",
      "pluralPhrase": "left operand types",
      "directObjectType": "binary operator"
    },
    "<binary operator> as string": {
      "key": "<binary operator> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "binary operator",
      "phrase": "string"
    },
    "multiplicity of <bes wizard with multiplicity>": {
      "key": "multiplicity of <bes wizard with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes wizard with multiplicity"
    },
    "wizard of <bes wizard variable>": {
      "key": "wizard of <bes wizard variable>",
      "type": "property",
      "resultType": "bes wizard",
      "singularPhrase": "wizard",
      "pluralPhrase": "wizards",
      "directObjectType": "bes wizard variable"
    },
    "value of <bes wizard variable>": {
      "key": "value of <bes wizard variable>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "bes wizard variable"
    },
    "private flag of <bes wizard variable>": {
      "key": "private flag of <bes wizard variable>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "private flag",
      "pluralPhrase": "private flags",
      "directObjectType": "bes wizard variable"
    },
    "name of <bes wizard variable>": {
      "key": "name of <bes wizard variable>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes wizard variable"
    },
    "union of <bes wizard set>": {
      "key": "union of <bes wizard set>",
      "type": "property",
      "resultType": "bes wizard set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes wizard set"
    },
    "size of <bes wizard set>": {
      "key": "size of <bes wizard set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes wizard set"
    },
    "intersection of <bes wizard set>": {
      "key": "intersection of <bes wizard set>",
      "type": "property",
      "resultType": "bes wizard set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes wizard set"
    },
    "element of <bes wizard set>": {
      "key": "element of <bes wizard set>",
      "type": "property",
      "resultType": "bes wizard",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes wizard set"
    },
    "<bes wizard set> contains <bes wizard set>": {
      "key": "<bes wizard set> contains <bes wizard set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes wizard set",
      "op": "contains",
      "rightType": "bes wizard set"
    },
    "<bes wizard set> = <bes wizard set>": {
      "key": "<bes wizard set> = <bes wizard set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes wizard set",
      "op": "=",
      "rightType": "bes wizard set"
    },
    "<bes wizard set> - <bes wizard set>": {
      "key": "<bes wizard set> - <bes wizard set>",
      "type": "binaryOp",
      "resultType": "bes wizard set",
      "leftType": "bes wizard set",
      "op": "-",
      "rightType": "bes wizard set"
    },
    "<bes wizard set> + <bes wizard set>": {
      "key": "<bes wizard set> + <bes wizard set>",
      "type": "binaryOp",
      "resultType": "bes wizard set",
      "leftType": "bes wizard set",
      "op": "+",
      "rightType": "bes wizard set"
    },
    "<bes wizard set> * <bes wizard set>": {
      "key": "<bes wizard set> * <bes wizard set>",
      "type": "binaryOp",
      "resultType": "bes wizard set",
      "leftType": "bes wizard set",
      "op": "*",
      "rightType": "bes wizard set"
    },
    "variable of <bes wizard>": {
      "key": "variable of <bes wizard>",
      "type": "property",
      "resultType": "bes wizard variable",
      "singularPhrase": "variable",
      "pluralPhrase": "variables",
      "directObjectType": "bes wizard"
    },
    "url of <bes wizard>": {
      "key": "url of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "url",
      "pluralPhrase": "urls",
      "directObjectType": "bes wizard"
    },
    "unique value of <bes wizard>": {
      "key": "unique value of <bes wizard>",
      "type": "property",
      "resultType": "bes wizard with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes wizard"
    },
    "site of <bes wizard>": {
      "key": "site of <bes wizard>",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "site",
      "pluralPhrase": "sites",
      "directObjectType": "bes wizard"
    },
    "shared variable of <bes wizard>": {
      "key": "shared variable of <bes wizard>",
      "type": "property",
      "resultType": "bes wizard variable",
      "singularPhrase": "shared variable",
      "pluralPhrase": "shared variables",
      "directObjectType": "bes wizard"
    },
    "shared variable <string> of <bes wizard>": {
      "key": "shared variable <string> of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "shared variable",
      "pluralPhrase": "shared variables",
      "indexType": "string",
      "directObjectType": "bes wizard"
    },
    "set of <bes wizard>": {
      "key": "set of <bes wizard>",
      "type": "property",
      "resultType": "bes wizard set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes wizard"
    },
    "requires authoring flag of <bes wizard>": {
      "key": "requires authoring flag of <bes wizard>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "requires authoring flag",
      "pluralPhrase": "requires authoring flags",
      "directObjectType": "bes wizard"
    },
    "private variable of <bes wizard>": {
      "key": "private variable of <bes wizard>",
      "type": "property",
      "resultType": "bes wizard variable",
      "singularPhrase": "private variable",
      "pluralPhrase": "private variables",
      "directObjectType": "bes wizard"
    },
    "private variable <string> of <bes wizard>": {
      "key": "private variable <string> of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "private variable",
      "pluralPhrase": "private variables",
      "indexType": "string",
      "directObjectType": "bes wizard"
    },
    "pre60 flag of <bes wizard>": {
      "key": "pre60 flag of <bes wizard>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "pre60 flag",
      "pluralPhrase": "pre60 flags",
      "directObjectType": "bes wizard"
    },
    "navbar name of <bes wizard>": {
      "key": "navbar name of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "navbar name",
      "pluralPhrase": "navbar names",
      "directObjectType": "bes wizard"
    },
    "name of <bes wizard>": {
      "key": "name of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes wizard"
    },
    "menu path of <bes wizard>": {
      "key": "menu path of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "menu path",
      "pluralPhrase": "menu paths",
      "directObjectType": "bes wizard"
    },
    "link of <bes wizard>": {
      "key": "link of <bes wizard>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "directObjectType": "bes wizard"
    },
    "link href of <bes wizard>": {
      "key": "link href of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "link href",
      "pluralPhrase": "link hrefs",
      "directObjectType": "bes wizard"
    },
    "link <string> of <bes wizard>": {
      "key": "link <string> of <bes wizard>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "string",
      "directObjectType": "bes wizard"
    },
    "link <html> of <bes wizard>": {
      "key": "link <html> of <bes wizard>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "html",
      "directObjectType": "bes wizard"
    },
    "document flag of <bes wizard>": {
      "key": "document flag of <bes wizard>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "document flag",
      "pluralPhrase": "document flags",
      "directObjectType": "bes wizard"
    },
    "display name of <bes wizard>": {
      "key": "display name of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display name",
      "pluralPhrase": "display names",
      "directObjectType": "bes wizard"
    },
    "dialog flag of <bes wizard>": {
      "key": "dialog flag of <bes wizard>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "dialog flag",
      "pluralPhrase": "dialog flags",
      "directObjectType": "bes wizard"
    },
    "default page name of <bes wizard>": {
      "key": "default page name of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "default page name",
      "pluralPhrase": "default page names",
      "directObjectType": "bes wizard"
    },
    "database name of <bes wizard>": {
      "key": "database name of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "database name",
      "pluralPhrase": "database names",
      "directObjectType": "bes wizard"
    },
    "database id of <bes wizard>": {
      "key": "database id of <bes wizard>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "bes wizard"
    },
    "dashboard id of <bes wizard>": {
      "key": "dashboard id of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "dashboard id",
      "pluralPhrase": "dashboard ids",
      "directObjectType": "bes wizard"
    },
    "charset of <bes wizard>": {
      "key": "charset of <bes wizard>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "charset",
      "pluralPhrase": "charsets",
      "directObjectType": "bes wizard"
    },
    "<bes wizard> = <bes wizard>": {
      "key": "<bes wizard> = <bes wizard>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes wizard",
      "op": "=",
      "rightType": "bes wizard"
    },
    "<bes wizard set> contains <bes wizard>": {
      "key": "<bes wizard set> contains <bes wizard>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes wizard set",
      "op": "contains",
      "rightType": "bes wizard"
    },
    "enabled of <bes wakeonlan status>": {
      "key": "enabled of <bes wakeonlan status>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "bes wakeonlan status"
    },
    "database name of <bes wakeonlan status>": {
      "key": "database name of <bes wakeonlan status>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "database name",
      "pluralPhrase": "database names",
      "directObjectType": "bes wakeonlan status"
    },
    "database id of <bes wakeonlan status>": {
      "key": "database id of <bes wakeonlan status>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "bes wakeonlan status"
    },
    "multiplicity of <bes user with multiplicity>": {
      "key": "multiplicity of <bes user with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes user with multiplicity"
    },
    "union of <bes user set>": {
      "key": "union of <bes user set>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes user set"
    },
    "size of <bes user set>": {
      "key": "size of <bes user set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes user set"
    },
    "intersection of <bes user set>": {
      "key": "intersection of <bes user set>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes user set"
    },
    "element of <bes user set>": {
      "key": "element of <bes user set>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes user set"
    },
    "<bes user set> contains <bes user set>": {
      "key": "<bes user set> contains <bes user set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes user set",
      "op": "contains",
      "rightType": "bes user set"
    },
    "<bes user set> = <bes user set>": {
      "key": "<bes user set> = <bes user set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes user set",
      "op": "=",
      "rightType": "bes user set"
    },
    "<bes user set> - <bes user set>": {
      "key": "<bes user set> - <bes user set>",
      "type": "binaryOp",
      "resultType": "bes user set",
      "leftType": "bes user set",
      "op": "-",
      "rightType": "bes user set"
    },
    "<bes user set> + <bes user set>": {
      "key": "<bes user set> + <bes user set>",
      "type": "binaryOp",
      "resultType": "bes user set",
      "leftType": "bes user set",
      "op": "+",
      "rightType": "bes user set"
    },
    "<bes user set> * <bes user set>": {
      "key": "<bes user set> * <bes user set>",
      "type": "binaryOp",
      "resultType": "bes user set",
      "leftType": "bes user set",
      "op": "*",
      "rightType": "bes user set"
    },
    "unmanagedasset privilege shownone flag of <bes user>": {
      "key": "unmanagedasset privilege shownone flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unmanagedasset privilege shownone flag",
      "pluralPhrase": "unmanagedasset privilege shownone flags",
      "directObjectType": "bes user"
    },
    "unmanagedasset privilege showall flag of <bes user>": {
      "key": "unmanagedasset privilege showall flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unmanagedasset privilege showall flag",
      "pluralPhrase": "unmanagedasset privilege showall flags",
      "directObjectType": "bes user"
    },
    "unmanagedasset privilege scanpoint flag of <bes user>": {
      "key": "unmanagedasset privilege scanpoint flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unmanagedasset privilege scanpoint flag",
      "pluralPhrase": "unmanagedasset privilege scanpoint flags",
      "directObjectType": "bes user"
    },
    "unique value of <bes user>": {
      "key": "unique value of <bes user>",
      "type": "property",
      "resultType": "bes user with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes user"
    },
    "set of <bes user>": {
      "key": "set of <bes user>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes user"
    },
    "operator site of <bes user>": {
      "key": "operator site of <bes user>",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "operator site",
      "pluralPhrase": "operator sites",
      "directObjectType": "bes user"
    },
    "name of <bes user>": {
      "key": "name of <bes user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes user"
    },
    "master flag of <bes user>": {
      "key": "master flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "master flag",
      "pluralPhrase": "master flags",
      "directObjectType": "bes user"
    },
    "link of <bes user>": {
      "key": "link of <bes user>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "directObjectType": "bes user"
    },
    "link href of <bes user>": {
      "key": "link href of <bes user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "link href",
      "pluralPhrase": "link hrefs",
      "directObjectType": "bes user"
    },
    "link <string> of <bes user>": {
      "key": "link <string> of <bes user>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "string",
      "directObjectType": "bes user"
    },
    "link <html> of <bes user>": {
      "key": "link <html> of <bes user>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "html",
      "directObjectType": "bes user"
    },
    "last login time of <bes user>": {
      "key": "last login time of <bes user>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last login time",
      "pluralPhrase": "last login times",
      "directObjectType": "bes user"
    },
    "issued fixlet set of <bes user>": {
      "key": "issued fixlet set of <bes user>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "issued fixlet set",
      "pluralPhrase": "issued fixlet sets",
      "directObjectType": "bes user"
    },
    "issued fixlet of <bes user>": {
      "key": "issued fixlet of <bes user>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "issued fixlet",
      "pluralPhrase": "issued fixlets",
      "directObjectType": "bes user"
    },
    "issued computer group set of <bes user>": {
      "key": "issued computer group set of <bes user>",
      "type": "property",
      "resultType": "bes computer group set",
      "singularPhrase": "issued computer group set",
      "pluralPhrase": "issued computer group sets",
      "directObjectType": "bes user"
    },
    "issued computer group of <bes user>": {
      "key": "issued computer group of <bes user>",
      "type": "property",
      "resultType": "bes computer group",
      "singularPhrase": "issued computer group",
      "pluralPhrase": "issued computer groups",
      "directObjectType": "bes user"
    },
    "issued action set of <bes user>": {
      "key": "issued action set of <bes user>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "issued action set",
      "pluralPhrase": "issued action sets",
      "directObjectType": "bes user"
    },
    "issued action of <bes user>": {
      "key": "issued action of <bes user>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "issued action",
      "pluralPhrase": "issued actions",
      "directObjectType": "bes user"
    },
    "custom content flag of <bes user>": {
      "key": "custom content flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "custom content flag",
      "pluralPhrase": "custom content flags",
      "directObjectType": "bes user"
    },
    "creation time of <bes user>": {
      "key": "creation time of <bes user>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "creation time",
      "pluralPhrase": "creation times",
      "directObjectType": "bes user"
    },
    "administrator <bes computer> of <bes user>": {
      "key": "administrator <bes computer> of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "administrator",
      "pluralPhrase": "administrators",
      "indexType": "bes computer",
      "directObjectType": "bes user"
    },
    "administered computer set of <bes user>": {
      "key": "administered computer set of <bes user>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "administered computer set",
      "pluralPhrase": "administered computer sets",
      "directObjectType": "bes user"
    },
    "administered computer of <bes user>": {
      "key": "administered computer of <bes user>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "administered computer",
      "pluralPhrase": "administered computers",
      "directObjectType": "bes user"
    },
    "action site of <bes user>": {
      "key": "action site of <bes user>",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "action site",
      "pluralPhrase": "action sites",
      "directObjectType": "bes user"
    },
    "<bes user> = <bes user>": {
      "key": "<bes user> = <bes user>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes user",
      "op": "=",
      "rightType": "bes user"
    },
    "<bes user set> contains <bes user>": {
      "key": "<bes user set> contains <bes user>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes user set",
      "op": "contains",
      "rightType": "bes user"
    },
    "multiplicity of <bes unmanagedasset with multiplicity>": {
      "key": "multiplicity of <bes unmanagedasset with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes unmanagedasset with multiplicity"
    },
    "union of <bes unmanagedasset set>": {
      "key": "union of <bes unmanagedasset set>",
      "type": "property",
      "resultType": "bes unmanagedasset set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes unmanagedasset set"
    },
    "size of <bes unmanagedasset set>": {
      "key": "size of <bes unmanagedasset set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes unmanagedasset set"
    },
    "intersection of <bes unmanagedasset set>": {
      "key": "intersection of <bes unmanagedasset set>",
      "type": "property",
      "resultType": "bes unmanagedasset set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes unmanagedasset set"
    },
    "element of <bes unmanagedasset set>": {
      "key": "element of <bes unmanagedasset set>",
      "type": "property",
      "resultType": "bes unmanagedasset",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes unmanagedasset set"
    },
    "<bes unmanagedasset set> contains <bes unmanagedasset set>": {
      "key": "<bes unmanagedasset set> contains <bes unmanagedasset set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes unmanagedasset set",
      "op": "contains",
      "rightType": "bes unmanagedasset set"
    },
    "<bes unmanagedasset set> = <bes unmanagedasset set>": {
      "key": "<bes unmanagedasset set> = <bes unmanagedasset set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes unmanagedasset set",
      "op": "=",
      "rightType": "bes unmanagedasset set"
    },
    "<bes unmanagedasset set> - <bes unmanagedasset set>": {
      "key": "<bes unmanagedasset set> - <bes unmanagedasset set>",
      "type": "binaryOp",
      "resultType": "bes unmanagedasset set",
      "leftType": "bes unmanagedasset set",
      "op": "-",
      "rightType": "bes unmanagedasset set"
    },
    "<bes unmanagedasset set> + <bes unmanagedasset set>": {
      "key": "<bes unmanagedasset set> + <bes unmanagedasset set>",
      "type": "binaryOp",
      "resultType": "bes unmanagedasset set",
      "leftType": "bes unmanagedasset set",
      "op": "+",
      "rightType": "bes unmanagedasset set"
    },
    "<bes unmanagedasset set> * <bes unmanagedasset set>": {
      "key": "<bes unmanagedasset set> * <bes unmanagedasset set>",
      "type": "binaryOp",
      "resultType": "bes unmanagedasset set",
      "leftType": "bes unmanagedasset set",
      "op": "*",
      "rightType": "bes unmanagedasset set"
    },
    "value of <bes unmanagedasset field>": {
      "key": "value of <bes unmanagedasset field>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "bes unmanagedasset field"
    },
    "name of <bes unmanagedasset field>": {
      "key": "name of <bes unmanagedasset field>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes unmanagedasset field"
    },
    "filterable flag of <bes unmanagedasset field>": {
      "key": "filterable flag of <bes unmanagedasset field>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "filterable flag",
      "pluralPhrase": "filterable flags",
      "directObjectType": "bes unmanagedasset field"
    },
    "editable flag of <bes unmanagedasset field>": {
      "key": "editable flag of <bes unmanagedasset field>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "editable flag",
      "pluralPhrase": "editable flags",
      "directObjectType": "bes unmanagedasset field"
    },
    "asset of <bes unmanagedasset field>": {
      "key": "asset of <bes unmanagedasset field>",
      "type": "property",
      "resultType": "bes unmanagedasset",
      "singularPhrase": "asset",
      "pluralPhrase": "assets",
      "directObjectType": "bes unmanagedasset field"
    },
    "unique value of <bes unmanagedasset>": {
      "key": "unique value of <bes unmanagedasset>",
      "type": "property",
      "resultType": "bes unmanagedasset with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes unmanagedasset"
    },
    "source of <bes unmanagedasset>": {
      "key": "source of <bes unmanagedasset>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "source",
      "pluralPhrase": "sources",
      "directObjectType": "bes unmanagedasset"
    },
    "set of <bes unmanagedasset>": {
      "key": "set of <bes unmanagedasset>",
      "type": "property",
      "resultType": "bes unmanagedasset set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes unmanagedasset"
    },
    "link of <bes unmanagedasset>": {
      "key": "link of <bes unmanagedasset>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "directObjectType": "bes unmanagedasset"
    },
    "link href of <bes unmanagedasset>": {
      "key": "link href of <bes unmanagedasset>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "link href",
      "pluralPhrase": "link hrefs",
      "directObjectType": "bes unmanagedasset"
    },
    "link <string> of <bes unmanagedasset>": {
      "key": "link <string> of <bes unmanagedasset>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "string",
      "directObjectType": "bes unmanagedasset"
    },
    "link <html> of <bes unmanagedasset>": {
      "key": "link <html> of <bes unmanagedasset>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "html",
      "directObjectType": "bes unmanagedasset"
    },
    "id of <bes unmanagedasset>": {
      "key": "id of <bes unmanagedasset>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes unmanagedasset"
    },
    "field of <bes unmanagedasset>": {
      "key": "field of <bes unmanagedasset>",
      "type": "property",
      "resultType": "bes unmanagedasset field",
      "singularPhrase": "field",
      "pluralPhrase": "fields",
      "directObjectType": "bes unmanagedasset"
    },
    "client installed flag of <bes unmanagedasset>": {
      "key": "client installed flag of <bes unmanagedasset>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "client installed flag",
      "pluralPhrase": "client installed flags",
      "directObjectType": "bes unmanagedasset"
    },
    "<bes unmanagedasset> = <bes unmanagedasset>": {
      "key": "<bes unmanagedasset> = <bes unmanagedasset>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes unmanagedasset",
      "op": "=",
      "rightType": "bes unmanagedasset"
    },
    "<bes unmanagedasset set> contains <bes unmanagedasset>": {
      "key": "<bes unmanagedasset set> contains <bes unmanagedasset>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes unmanagedasset set",
      "op": "contains",
      "rightType": "bes unmanagedasset"
    },
    "multiplicity of <bes site with multiplicity>": {
      "key": "multiplicity of <bes site with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes site with multiplicity"
    },
    "union of <bes site set>": {
      "key": "union of <bes site set>",
      "type": "property",
      "resultType": "bes site set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes site set"
    },
    "size of <bes site set>": {
      "key": "size of <bes site set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes site set"
    },
    "intersection of <bes site set>": {
      "key": "intersection of <bes site set>",
      "type": "property",
      "resultType": "bes site set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes site set"
    },
    "element of <bes site set>": {
      "key": "element of <bes site set>",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes site set"
    },
    "<bes site set> contains <bes site set>": {
      "key": "<bes site set> contains <bes site set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes site set",
      "op": "contains",
      "rightType": "bes site set"
    },
    "<bes site set> = <bes site set>": {
      "key": "<bes site set> = <bes site set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes site set",
      "op": "=",
      "rightType": "bes site set"
    },
    "<bes site set> - <bes site set>": {
      "key": "<bes site set> - <bes site set>",
      "type": "binaryOp",
      "resultType": "bes site set",
      "leftType": "bes site set",
      "op": "-",
      "rightType": "bes site set"
    },
    "<bes site set> + <bes site set>": {
      "key": "<bes site set> + <bes site set>",
      "type": "binaryOp",
      "resultType": "bes site set",
      "leftType": "bes site set",
      "op": "+",
      "rightType": "bes site set"
    },
    "<bes site set> * <bes site set>": {
      "key": "<bes site set> * <bes site set>",
      "type": "binaryOp",
      "resultType": "bes site set",
      "leftType": "bes site set",
      "op": "*",
      "rightType": "bes site set"
    },
    "writer set of <bes site>": {
      "key": "writer set of <bes site>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "writer set",
      "pluralPhrase": "writer sets",
      "directObjectType": "bes site"
    },
    "writer of <bes site>": {
      "key": "writer of <bes site>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "writer",
      "pluralPhrase": "writers",
      "directObjectType": "bes site"
    },
    "wizard set of <bes site>": {
      "key": "wizard set of <bes site>",
      "type": "property",
      "resultType": "bes wizard set",
      "singularPhrase": "wizard set",
      "pluralPhrase": "wizard sets",
      "directObjectType": "bes site"
    },
    "wizard of <bes site>": {
      "key": "wizard of <bes site>",
      "type": "property",
      "resultType": "bes wizard",
      "singularPhrase": "wizard",
      "pluralPhrase": "wizards",
      "directObjectType": "bes site"
    },
    "version of <bes site>": {
      "key": "version of <bes site>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "bes site"
    },
    "url of <bes site>": {
      "key": "url of <bes site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "url",
      "pluralPhrase": "urls",
      "directObjectType": "bes site"
    },
    "unique value of <bes site>": {
      "key": "unique value of <bes site>",
      "type": "property",
      "resultType": "bes site with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes site"
    },
    "tag of <bes site>": {
      "key": "tag of <bes site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "tag",
      "pluralPhrase": "tags",
      "directObjectType": "bes site"
    },
    "subscription mode of <bes site>": {
      "key": "subscription mode of <bes site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "subscription mode",
      "pluralPhrase": "subscription modes",
      "directObjectType": "bes site"
    },
    "subscribed computer set of <bes site>": {
      "key": "subscribed computer set of <bes site>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "subscribed computer set",
      "pluralPhrase": "subscribed computer sets",
      "directObjectType": "bes site"
    },
    "subscribed computer of <bes site>": {
      "key": "subscribed computer of <bes site>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "subscribed computer",
      "pluralPhrase": "subscribed computers",
      "directObjectType": "bes site"
    },
    "subscribed <bes computer> of <bes site>": {
      "key": "subscribed <bes computer> of <bes site>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "subscribed",
      "pluralPhrase": "subscribeds",
      "indexType": "bes computer",
      "directObjectType": "bes site"
    },
    "set of <bes site>": {
      "key": "set of <bes site>",
      "type": "property",
      "resultType": "bes site set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes site"
    },
    "reader set of <bes site>": {
      "key": "reader set of <bes site>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "reader set",
      "pluralPhrase": "reader sets",
      "directObjectType": "bes site"
    },
    "reader of <bes site>": {
      "key": "reader of <bes site>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "reader",
      "pluralPhrase": "readers",
      "directObjectType": "bes site"
    },
    "owner set of <bes site>": {
      "key": "owner set of <bes site>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "owner set",
      "pluralPhrase": "owner sets",
      "directObjectType": "bes site"
    },
    "owner of <bes site>": {
      "key": "owner of <bes site>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "owner",
      "pluralPhrase": "owners",
      "directObjectType": "bes site"
    },
    "owner flag <bes user> of <bes site>": {
      "key": "owner flag <bes user> of <bes site>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "owner flag",
      "pluralPhrase": "owner flags",
      "indexType": "bes user",
      "directObjectType": "bes site"
    },
    "operator site flag of <bes site>": {
      "key": "operator site flag of <bes site>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "operator site flag",
      "pluralPhrase": "operator site flags",
      "directObjectType": "bes site"
    },
    "name of <bes site>": {
      "key": "name of <bes site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes site"
    },
    "master site flag of <bes site>": {
      "key": "master site flag of <bes site>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "master site flag",
      "pluralPhrase": "master site flags",
      "directObjectType": "bes site"
    },
    "id of <bes site>": {
      "key": "id of <bes site>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes site"
    },
    "globally readable flag of <bes site>": {
      "key": "globally readable flag of <bes site>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "globally readable flag",
      "pluralPhrase": "globally readable flags",
      "directObjectType": "bes site"
    },
    "fixlet set of <bes site>": {
      "key": "fixlet set of <bes site>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "fixlet set",
      "pluralPhrase": "fixlet sets",
      "directObjectType": "bes site"
    },
    "fixlet of <bes site>": {
      "key": "fixlet of <bes site>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "fixlet",
      "pluralPhrase": "fixlets",
      "directObjectType": "bes site"
    },
    "fixlet <integer> of <bes site>": {
      "key": "fixlet <integer> of <bes site>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "fixlet",
      "pluralPhrase": "fixlets",
      "indexType": "integer",
      "directObjectType": "bes site"
    },
    "external site flag of <bes site>": {
      "key": "external site flag of <bes site>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "external site flag",
      "pluralPhrase": "external site flags",
      "directObjectType": "bes site"
    },
    "explicit writer set of <bes site>": {
      "key": "explicit writer set of <bes site>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "explicit writer set",
      "pluralPhrase": "explicit writer sets",
      "directObjectType": "bes site"
    },
    "explicit writer of <bes site>": {
      "key": "explicit writer of <bes site>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "explicit writer",
      "pluralPhrase": "explicit writers",
      "directObjectType": "bes site"
    },
    "explicit reader set of <bes site>": {
      "key": "explicit reader set of <bes site>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "explicit reader set",
      "pluralPhrase": "explicit reader sets",
      "directObjectType": "bes site"
    },
    "explicit reader of <bes site>": {
      "key": "explicit reader of <bes site>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "explicit reader",
      "pluralPhrase": "explicit readers",
      "directObjectType": "bes site"
    },
    "explicit owner set of <bes site>": {
      "key": "explicit owner set of <bes site>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "explicit owner set",
      "pluralPhrase": "explicit owner sets",
      "directObjectType": "bes site"
    },
    "explicit owner of <bes site>": {
      "key": "explicit owner of <bes site>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "explicit owner",
      "pluralPhrase": "explicit owners",
      "directObjectType": "bes site"
    },
    "domain set of <bes site>": {
      "key": "domain set of <bes site>",
      "type": "property",
      "resultType": "bes domain set",
      "singularPhrase": "domain set",
      "pluralPhrase": "domain sets",
      "directObjectType": "bes site"
    },
    "domain of <bes site>": {
      "key": "domain of <bes site>",
      "type": "property",
      "resultType": "bes domain",
      "singularPhrase": "domain",
      "pluralPhrase": "domains",
      "directObjectType": "bes site"
    },
    "display name of <bes site>": {
      "key": "display name of <bes site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display name",
      "pluralPhrase": "display names",
      "directObjectType": "bes site"
    },
    "description of <bes site>": {
      "key": "description of <bes site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "bes site"
    },
    "custom site flag of <bes site>": {
      "key": "custom site flag of <bes site>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "custom site flag",
      "pluralPhrase": "custom site flags",
      "directObjectType": "bes site"
    },
    "creator of <bes site>": {
      "key": "creator of <bes site>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "creator",
      "pluralPhrase": "creators",
      "directObjectType": "bes site"
    },
    "creation date of <bes site>": {
      "key": "creation date of <bes site>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "creation date",
      "pluralPhrase": "creation dates",
      "directObjectType": "bes site"
    },
    "<bes site> = <bes site>": {
      "key": "<bes site> = <bes site>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes site",
      "op": "=",
      "rightType": "bes site"
    },
    "<bes site set> contains <bes site>": {
      "key": "<bes site set> contains <bes site>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes site set",
      "op": "contains",
      "rightType": "bes site"
    },
    "url of <bes server>": {
      "key": "url of <bes server>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "url",
      "pluralPhrase": "urls",
      "directObjectType": "bes server"
    },
    "database name of <bes server>": {
      "key": "database name of <bes server>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "database name",
      "pluralPhrase": "database names",
      "directObjectType": "bes server"
    },
    "database id of <bes server>": {
      "key": "database id of <bes server>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "bes server"
    },
    "multiplicity of <bes property with multiplicity>": {
      "key": "multiplicity of <bes property with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes property with multiplicity"
    },
    "union of <bes property set>": {
      "key": "union of <bes property set>",
      "type": "property",
      "resultType": "bes property set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes property set"
    },
    "size of <bes property set>": {
      "key": "size of <bes property set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes property set"
    },
    "intersection of <bes property set>": {
      "key": "intersection of <bes property set>",
      "type": "property",
      "resultType": "bes property set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes property set"
    },
    "element of <bes property set>": {
      "key": "element of <bes property set>",
      "type": "property",
      "resultType": "bes property",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes property set"
    },
    "<bes property set> contains <bes property set>": {
      "key": "<bes property set> contains <bes property set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes property set",
      "op": "contains",
      "rightType": "bes property set"
    },
    "<bes property set> as xml": {
      "key": "<bes property set> as xml",
      "type": "cast",
      "resultType": "utf8 string",
      "argType": "bes property set",
      "phrase": "xml"
    },
    "<bes property set> = <bes property set>": {
      "key": "<bes property set> = <bes property set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes property set",
      "op": "=",
      "rightType": "bes property set"
    },
    "<bes property set> - <bes property set>": {
      "key": "<bes property set> - <bes property set>",
      "type": "binaryOp",
      "resultType": "bes property set",
      "leftType": "bes property set",
      "op": "-",
      "rightType": "bes property set"
    },
    "<bes property set> + <bes property set>": {
      "key": "<bes property set> + <bes property set>",
      "type": "binaryOp",
      "resultType": "bes property set",
      "leftType": "bes property set",
      "op": "+",
      "rightType": "bes property set"
    },
    "<bes property set> * <bes property set>": {
      "key": "<bes property set> * <bes property set>",
      "type": "binaryOp",
      "resultType": "bes property set",
      "leftType": "bes property set",
      "op": "*",
      "rightType": "bes property set"
    },
    "value of <bes property result>": {
      "key": "value of <bes property result>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "bes property result"
    },
    "value count of <bes property result>": {
      "key": "value count of <bes property result>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "value count",
      "pluralPhrase": "value counts",
      "directObjectType": "bes property result"
    },
    "property of <bes property result>": {
      "key": "property of <bes property result>",
      "type": "property",
      "resultType": "bes property",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "directObjectType": "bes property result"
    },
    "plural flag of <bes property result>": {
      "key": "plural flag of <bes property result>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "plural flag",
      "pluralPhrase": "plural flags",
      "directObjectType": "bes property result"
    },
    "error message of <bes property result>": {
      "key": "error message of <bes property result>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "error message",
      "pluralPhrase": "error messages",
      "directObjectType": "bes property result"
    },
    "error flag of <bes property result>": {
      "key": "error flag of <bes property result>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "error flag",
      "pluralPhrase": "error flags",
      "directObjectType": "bes property result"
    },
    "computer of <bes property result>": {
      "key": "computer of <bes property result>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "computer",
      "pluralPhrase": "computers",
      "directObjectType": "bes property result"
    },
    "unique value of <bes property>": {
      "key": "unique value of <bes property>",
      "type": "property",
      "resultType": "bes property with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes property"
    },
    "statistic range of <bes property>": {
      "key": "statistic range of <bes property>",
      "type": "property",
      "resultType": "statistic range",
      "singularPhrase": "statistic range",
      "pluralPhrase": "statistic ranges",
      "directObjectType": "bes property"
    },
    "source name of <bes property>": {
      "key": "source name of <bes property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "source name",
      "pluralPhrase": "source names",
      "directObjectType": "bes property"
    },
    "source id of <bes property>": {
      "key": "source id of <bes property>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "source id",
      "pluralPhrase": "source ids",
      "directObjectType": "bes property"
    },
    "source evaluation period of <bes property>": {
      "key": "source evaluation period of <bes property>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "source evaluation period",
      "pluralPhrase": "source evaluation periods",
      "directObjectType": "bes property"
    },
    "source analysis of <bes property>": {
      "key": "source analysis of <bes property>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "source analysis",
      "pluralPhrase": "source analyses",
      "directObjectType": "bes property"
    },
    "simple name of <bes property>": {
      "key": "simple name of <bes property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "simple name",
      "pluralPhrase": "simple names",
      "directObjectType": "bes property"
    },
    "set of <bes property>": {
      "key": "set of <bes property>",
      "type": "property",
      "resultType": "bes property set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes property"
    },
    "result of <bes property>": {
      "key": "result of <bes property>",
      "type": "property",
      "resultType": "bes property result",
      "singularPhrase": "result",
      "pluralPhrase": "results",
      "directObjectType": "bes property"
    },
    "result from <bes computer> of <bes property>": {
      "key": "result from <bes computer> of <bes property>",
      "type": "property",
      "resultType": "bes property result",
      "singularPhrase": "result from",
      "pluralPhrase": "results from",
      "indexType": "bes computer",
      "directObjectType": "bes property"
    },
    "reserved flag of <bes property>": {
      "key": "reserved flag of <bes property>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "reserved flag",
      "pluralPhrase": "reserved flags",
      "directObjectType": "bes property"
    },
    "reported computer set of <bes property>": {
      "key": "reported computer set of <bes property>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "reported computer set",
      "pluralPhrase": "reported computer sets",
      "directObjectType": "bes property"
    },
    "name of <bes property>": {
      "key": "name of <bes property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes property"
    },
    "memory usage of <bes property>": {
      "key": "memory usage of <bes property>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory usage",
      "pluralPhrase": "memory usages",
      "directObjectType": "bes property"
    },
    "keep statistics flag of <bes property>": {
      "key": "keep statistics flag of <bes property>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "keep statistics flag",
      "pluralPhrase": "keep statistics flags",
      "directObjectType": "bes property"
    },
    "id of <bes property>": {
      "key": "id of <bes property>",
      "type": "property",
      "resultType": "( integer, integer, integer )",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes property"
    },
    "evaluation period of <bes property>": {
      "key": "evaluation period of <bes property>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "evaluation period",
      "pluralPhrase": "evaluation periods",
      "directObjectType": "bes property"
    },
    "display simple name of <bes property>": {
      "key": "display simple name of <bes property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display simple name",
      "pluralPhrase": "display simple names",
      "directObjectType": "bes property"
    },
    "display name of <bes property>": {
      "key": "display name of <bes property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display name",
      "pluralPhrase": "display names",
      "directObjectType": "bes property"
    },
    "display category of <bes property>": {
      "key": "display category of <bes property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display category",
      "pluralPhrase": "display categories",
      "directObjectType": "bes property"
    },
    "disk usage of <bes property>": {
      "key": "disk usage of <bes property>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "disk usage",
      "pluralPhrase": "disk usages",
      "directObjectType": "bes property"
    },
    "definition of <bes property>": {
      "key": "definition of <bes property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "definition",
      "pluralPhrase": "definitions",
      "directObjectType": "bes property"
    },
    "default flag of <bes property>": {
      "key": "default flag of <bes property>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "default flag",
      "pluralPhrase": "default flags",
      "directObjectType": "bes property"
    },
    "database id of <bes property>": {
      "key": "database id of <bes property>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "bes property"
    },
    "custom flag of <bes property>": {
      "key": "custom flag of <bes property>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "custom flag",
      "pluralPhrase": "custom flags",
      "directObjectType": "bes property"
    },
    "category of <bes property>": {
      "key": "category of <bes property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "category",
      "pluralPhrase": "categories",
      "directObjectType": "bes property"
    },
    "analysis flag of <bes property>": {
      "key": "analysis flag of <bes property>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "analysis flag",
      "pluralPhrase": "analysis flags",
      "directObjectType": "bes property"
    },
    "<bes property> as xml": {
      "key": "<bes property> as xml",
      "type": "cast",
      "resultType": "utf8 string",
      "argType": "bes property",
      "phrase": "xml"
    },
    "<bes property> = <bes property>": {
      "key": "<bes property> = <bes property>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes property",
      "op": "=",
      "rightType": "bes property"
    },
    "<bes property set> contains <bes property>": {
      "key": "<bes property set> contains <bes property>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes property set",
      "op": "contains",
      "rightType": "bes property"
    },
    "workstation count of <bes product>": {
      "key": "workstation count of <bes product>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "workstation count",
      "pluralPhrase": "workstation counts",
      "directObjectType": "bes product"
    },
    "windows server count of <bes product>": {
      "key": "windows server count of <bes product>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "windows server count",
      "pluralPhrase": "windows server counts",
      "directObjectType": "bes product"
    },
    "site url of <bes product>": {
      "key": "site url of <bes product>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "site url",
      "pluralPhrase": "site urls",
      "directObjectType": "bes product"
    },
    "non windows server count of <bes product>": {
      "key": "non windows server count of <bes product>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "non windows server count",
      "pluralPhrase": "non windows server counts",
      "directObjectType": "bes product"
    },
    "name of <bes product>": {
      "key": "name of <bes product>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes product"
    },
    "expiration date of <bes product>": {
      "key": "expiration date of <bes product>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "expiration date",
      "pluralPhrase": "expiration dates",
      "directObjectType": "bes product"
    },
    "computer count of <bes product>": {
      "key": "computer count of <bes product>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "computer count",
      "pluralPhrase": "computer counts",
      "directObjectType": "bes product"
    },
    "multiplicity of <bes fixlet with multiplicity>": {
      "key": "multiplicity of <bes fixlet with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes fixlet with multiplicity"
    },
    "union of <bes fixlet set>": {
      "key": "union of <bes fixlet set>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes fixlet set"
    },
    "size of <bes fixlet set>": {
      "key": "size of <bes fixlet set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes fixlet set"
    },
    "intersection of <bes fixlet set>": {
      "key": "intersection of <bes fixlet set>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes fixlet set"
    },
    "element of <bes fixlet set>": {
      "key": "element of <bes fixlet set>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes fixlet set"
    },
    "<bes fixlet set> contains <bes fixlet set>": {
      "key": "<bes fixlet set> contains <bes fixlet set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes fixlet set",
      "op": "contains",
      "rightType": "bes fixlet set"
    },
    "<bes fixlet set> as xml": {
      "key": "<bes fixlet set> as xml",
      "type": "cast",
      "resultType": "utf8 string",
      "argType": "bes fixlet set",
      "phrase": "xml"
    },
    "<bes fixlet set> = <bes fixlet set>": {
      "key": "<bes fixlet set> = <bes fixlet set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes fixlet set",
      "op": "=",
      "rightType": "bes fixlet set"
    },
    "<bes fixlet set> - <bes fixlet set>": {
      "key": "<bes fixlet set> - <bes fixlet set>",
      "type": "binaryOp",
      "resultType": "bes fixlet set",
      "leftType": "bes fixlet set",
      "op": "-",
      "rightType": "bes fixlet set"
    },
    "<bes fixlet set> + <bes fixlet set>": {
      "key": "<bes fixlet set> + <bes fixlet set>",
      "type": "binaryOp",
      "resultType": "bes fixlet set",
      "leftType": "bes fixlet set",
      "op": "+",
      "rightType": "bes fixlet set"
    },
    "<bes fixlet set> * <bes fixlet set>": {
      "key": "<bes fixlet set> * <bes fixlet set>",
      "type": "binaryOp",
      "resultType": "bes fixlet set",
      "leftType": "bes fixlet set",
      "op": "*",
      "rightType": "bes fixlet set"
    },
    "relevant flag of <bes fixlet result>": {
      "key": "relevant flag of <bes fixlet result>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "relevant flag",
      "pluralPhrase": "relevant flags",
      "directObjectType": "bes fixlet result"
    },
    "last became relevant of <bes fixlet result>": {
      "key": "last became relevant of <bes fixlet result>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last became relevant",
      "pluralPhrase": "last became relevants",
      "directObjectType": "bes fixlet result"
    },
    "last became nonrelevant of <bes fixlet result>": {
      "key": "last became nonrelevant of <bes fixlet result>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last became nonrelevant",
      "pluralPhrase": "last became nonrelevants",
      "directObjectType": "bes fixlet result"
    },
    "fixlet of <bes fixlet result>": {
      "key": "fixlet of <bes fixlet result>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "fixlet",
      "pluralPhrase": "fixlets",
      "directObjectType": "bes fixlet result"
    },
    "first became relevant of <bes fixlet result>": {
      "key": "first became relevant of <bes fixlet result>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "first became relevant",
      "pluralPhrase": "first became relevants",
      "directObjectType": "bes fixlet result"
    },
    "computer of <bes fixlet result>": {
      "key": "computer of <bes fixlet result>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "computer",
      "pluralPhrase": "computers",
      "directObjectType": "bes fixlet result"
    },
    "display value of <bes fixlet field value>": {
      "key": "display value of <bes fixlet field value>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display value",
      "pluralPhrase": "display values",
      "directObjectType": "bes fixlet field value"
    },
    "<bes fixlet field value> as time": {
      "key": "<bes fixlet field value> as time",
      "type": "cast",
      "resultType": "time",
      "argType": "bes fixlet field value",
      "phrase": "time"
    },
    "<bes fixlet field value> as string": {
      "key": "<bes fixlet field value> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "bes fixlet field value",
      "phrase": "string"
    },
    "<bes fixlet field value> as integer": {
      "key": "<bes fixlet field value> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "bes fixlet field value",
      "phrase": "integer"
    },
    "<bes fixlet field value> as date": {
      "key": "<bes fixlet field value> as date",
      "type": "cast",
      "resultType": "date",
      "argType": "bes fixlet field value",
      "phrase": "date"
    },
    "value of <bes fixlet field>": {
      "key": "value of <bes fixlet field>",
      "type": "property",
      "resultType": "bes fixlet field value",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "bes fixlet field"
    },
    "name of <bes fixlet field>": {
      "key": "name of <bes fixlet field>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes fixlet field"
    },
    "script type of <bes fixlet action>": {
      "key": "script type of <bes fixlet action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "script type",
      "pluralPhrase": "script types",
      "directObjectType": "bes fixlet action"
    },
    "script of <bes fixlet action>": {
      "key": "script of <bes fixlet action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "script",
      "pluralPhrase": "scripts",
      "directObjectType": "bes fixlet action"
    },
    "content id of <bes fixlet action>": {
      "key": "content id of <bes fixlet action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "content id",
      "pluralPhrase": "content ids",
      "directObjectType": "bes fixlet action"
    },
    "wizard name of <bes fixlet>": {
      "key": "wizard name of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "wizard name",
      "pluralPhrase": "wizard names",
      "directObjectType": "bes fixlet"
    },
    "wizard link of <bes fixlet>": {
      "key": "wizard link of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "wizard link",
      "pluralPhrase": "wizard links",
      "directObjectType": "bes fixlet"
    },
    "wizard data of <bes fixlet>": {
      "key": "wizard data of <bes fixlet>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "wizard data",
      "pluralPhrase": "wizard datas",
      "directObjectType": "bes fixlet"
    },
    "visible flag of <bes fixlet>": {
      "key": "visible flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "visible flag",
      "pluralPhrase": "visible flags",
      "directObjectType": "bes fixlet"
    },
    "unlocked computer count of <bes fixlet>": {
      "key": "unlocked computer count of <bes fixlet>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "unlocked computer count",
      "pluralPhrase": "unlocked computer counts",
      "directObjectType": "bes fixlet"
    },
    "unique value of <bes fixlet>": {
      "key": "unique value of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes fixlet"
    },
    "type of <bes fixlet>": {
      "key": "type of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "bes fixlet"
    },
    "task flag of <bes fixlet>": {
      "key": "task flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "task flag",
      "pluralPhrase": "task flags",
      "directObjectType": "bes fixlet"
    },
    "taken action set of <bes fixlet>": {
      "key": "taken action set of <bes fixlet>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "taken action set",
      "pluralPhrase": "taken action sets",
      "directObjectType": "bes fixlet"
    },
    "taken action of <bes fixlet>": {
      "key": "taken action of <bes fixlet>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "taken action",
      "pluralPhrase": "taken actions",
      "directObjectType": "bes fixlet"
    },
    "source severity of <bes fixlet>": {
      "key": "source severity of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "source severity",
      "pluralPhrase": "source severities",
      "directObjectType": "bes fixlet"
    },
    "source release date of <bes fixlet>": {
      "key": "source release date of <bes fixlet>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "source release date",
      "pluralPhrase": "source release dates",
      "directObjectType": "bes fixlet"
    },
    "source of <bes fixlet>": {
      "key": "source of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "source",
      "pluralPhrase": "sources",
      "directObjectType": "bes fixlet"
    },
    "source id of <bes fixlet>": {
      "key": "source id of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "source id",
      "pluralPhrase": "source ids",
      "directObjectType": "bes fixlet"
    },
    "site of <bes fixlet>": {
      "key": "site of <bes fixlet>",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "site",
      "pluralPhrase": "sites",
      "directObjectType": "bes fixlet"
    },
    "set of <bes fixlet>": {
      "key": "set of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes fixlet"
    },
    "sans id list of <bes fixlet>": {
      "key": "sans id list of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sans id list",
      "pluralPhrase": "sans id lists",
      "directObjectType": "bes fixlet"
    },
    "result of <bes fixlet>": {
      "key": "result of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet result",
      "singularPhrase": "result",
      "pluralPhrase": "results",
      "directObjectType": "bes fixlet"
    },
    "result from <bes computer> of <bes fixlet>": {
      "key": "result from <bes computer> of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet result",
      "singularPhrase": "result from",
      "pluralPhrase": "results from",
      "indexType": "bes computer",
      "directObjectType": "bes fixlet"
    },
    "relevant <bes computer> of <bes fixlet>": {
      "key": "relevant <bes computer> of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "relevant",
      "pluralPhrase": "relevants",
      "indexType": "bes computer",
      "directObjectType": "bes fixlet"
    },
    "relevance of <bes fixlet>": {
      "key": "relevance of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "relevance",
      "pluralPhrase": "relevances",
      "directObjectType": "bes fixlet"
    },
    "relevance clause of <bes fixlet>": {
      "key": "relevance clause of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "relevance clause",
      "pluralPhrase": "relevance clauses",
      "directObjectType": "bes fixlet"
    },
    "property of <bes fixlet>": {
      "key": "property of <bes fixlet>",
      "type": "property",
      "resultType": "bes property",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "directObjectType": "bes fixlet"
    },
    "property <integer> of <bes fixlet>": {
      "key": "property <integer> of <bes fixlet>",
      "type": "property",
      "resultType": "bes property",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "indexType": "integer",
      "directObjectType": "bes fixlet"
    },
    "operator site flag of <bes fixlet>": {
      "key": "operator site flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "operator site flag",
      "pluralPhrase": "operator site flags",
      "directObjectType": "bes fixlet"
    },
    "open action count of <bes fixlet>": {
      "key": "open action count of <bes fixlet>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "open action count",
      "pluralPhrase": "open action counts",
      "directObjectType": "bes fixlet"
    },
    "name of <bes fixlet>": {
      "key": "name of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes fixlet"
    },
    "modification time of <bes fixlet>": {
      "key": "modification time of <bes fixlet>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "modification time",
      "pluralPhrase": "modification times",
      "directObjectType": "bes fixlet"
    },
    "mime field of <bes fixlet>": {
      "key": "mime field of <bes fixlet>",
      "type": "property",
      "resultType": "mime field",
      "singularPhrase": "mime field",
      "pluralPhrase": "mime fields",
      "directObjectType": "bes fixlet"
    },
    "mime field <string> of <bes fixlet>": {
      "key": "mime field <string> of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "mime field",
      "pluralPhrase": "mime fields",
      "indexType": "string",
      "directObjectType": "bes fixlet"
    },
    "message of <bes fixlet>": {
      "key": "message of <bes fixlet>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "message",
      "pluralPhrase": "messages",
      "directObjectType": "bes fixlet"
    },
    "master site flag of <bes fixlet>": {
      "key": "master site flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "master site flag",
      "pluralPhrase": "master site flags",
      "directObjectType": "bes fixlet"
    },
    "locally visible flag of <bes fixlet>": {
      "key": "locally visible flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "locally visible flag",
      "pluralPhrase": "locally visible flags",
      "directObjectType": "bes fixlet"
    },
    "link of <bes fixlet>": {
      "key": "link of <bes fixlet>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "directObjectType": "bes fixlet"
    },
    "link href of <bes fixlet>": {
      "key": "link href of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "link href",
      "pluralPhrase": "link hrefs",
      "directObjectType": "bes fixlet"
    },
    "link <string> of <bes fixlet>": {
      "key": "link <string> of <bes fixlet>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "string",
      "directObjectType": "bes fixlet"
    },
    "link <html> of <bes fixlet>": {
      "key": "link <html> of <bes fixlet>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "html",
      "directObjectType": "bes fixlet"
    },
    "issuer of <bes fixlet>": {
      "key": "issuer of <bes fixlet>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "issuer",
      "pluralPhrase": "issuers",
      "directObjectType": "bes fixlet"
    },
    "id of <bes fixlet>": {
      "key": "id of <bes fixlet>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes fixlet"
    },
    "group flag of <bes fixlet>": {
      "key": "group flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "group flag",
      "pluralPhrase": "group flags",
      "directObjectType": "bes fixlet"
    },
    "globally visible flag of <bes fixlet>": {
      "key": "globally visible flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "globally visible flag",
      "pluralPhrase": "globally visible flags",
      "directObjectType": "bes fixlet"
    },
    "fixlet flag of <bes fixlet>": {
      "key": "fixlet flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fixlet flag",
      "pluralPhrase": "fixlet flags",
      "directObjectType": "bes fixlet"
    },
    "field of <bes fixlet>": {
      "key": "field of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet field",
      "singularPhrase": "field",
      "pluralPhrase": "fields",
      "directObjectType": "bes fixlet"
    },
    "field <string> of <bes fixlet>": {
      "key": "field <string> of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet field",
      "singularPhrase": "field",
      "pluralPhrase": "fields",
      "indexType": "string",
      "directObjectType": "bes fixlet"
    },
    "download size of <bes fixlet>": {
      "key": "download size of <bes fixlet>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "download size",
      "pluralPhrase": "download sizes",
      "directObjectType": "bes fixlet"
    },
    "domain of <bes fixlet>": {
      "key": "domain of <bes fixlet>",
      "type": "property",
      "resultType": "bes domain",
      "singularPhrase": "domain",
      "pluralPhrase": "domains",
      "directObjectType": "bes fixlet"
    },
    "display source severity of <bes fixlet>": {
      "key": "display source severity of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display source severity",
      "pluralPhrase": "display source severities",
      "directObjectType": "bes fixlet"
    },
    "display source of <bes fixlet>": {
      "key": "display source of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display source",
      "pluralPhrase": "display sources",
      "directObjectType": "bes fixlet"
    },
    "display source id of <bes fixlet>": {
      "key": "display source id of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display source id",
      "pluralPhrase": "display source ids",
      "directObjectType": "bes fixlet"
    },
    "display name of <bes fixlet>": {
      "key": "display name of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display name",
      "pluralPhrase": "display names",
      "directObjectType": "bes fixlet"
    },
    "display message of <bes fixlet>": {
      "key": "display message of <bes fixlet>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "display message",
      "pluralPhrase": "display messages",
      "directObjectType": "bes fixlet"
    },
    "display category of <bes fixlet>": {
      "key": "display category of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display category",
      "pluralPhrase": "display categories",
      "directObjectType": "bes fixlet"
    },
    "digest file name of <bes fixlet>": {
      "key": "digest file name of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "digest file name",
      "pluralPhrase": "digest file names",
      "directObjectType": "bes fixlet"
    },
    "default action of <bes fixlet>": {
      "key": "default action of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet action",
      "singularPhrase": "default action",
      "pluralPhrase": "default actions",
      "directObjectType": "bes fixlet"
    },
    "cve id list of <bes fixlet>": {
      "key": "cve id list of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cve id list",
      "pluralPhrase": "cve id lists",
      "directObjectType": "bes fixlet"
    },
    "custom site of <bes fixlet>": {
      "key": "custom site of <bes fixlet>",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "custom site",
      "pluralPhrase": "custom sites",
      "directObjectType": "bes fixlet"
    },
    "custom site flag of <bes fixlet>": {
      "key": "custom site flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "custom site flag",
      "pluralPhrase": "custom site flags",
      "directObjectType": "bes fixlet"
    },
    "custom flag of <bes fixlet>": {
      "key": "custom flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "custom flag",
      "pluralPhrase": "custom flags",
      "directObjectType": "bes fixlet"
    },
    "creation time of <bes fixlet>": {
      "key": "creation time of <bes fixlet>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "creation time",
      "pluralPhrase": "creation times",
      "directObjectType": "bes fixlet"
    },
    "components xml of <bes fixlet>": {
      "key": "components xml of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "components xml",
      "pluralPhrase": "components xmls",
      "directObjectType": "bes fixlet"
    },
    "component group of <bes fixlet>": {
      "key": "component group of <bes fixlet>",
      "type": "property",
      "resultType": "bes baseline component group",
      "singularPhrase": "component group",
      "pluralPhrase": "component groups",
      "directObjectType": "bes fixlet"
    },
    "comment of <bes fixlet>": {
      "key": "comment of <bes fixlet>",
      "type": "property",
      "resultType": "bes comment",
      "singularPhrase": "comment",
      "pluralPhrase": "comments",
      "directObjectType": "bes fixlet"
    },
    "charset of <bes fixlet>": {
      "key": "charset of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "charset",
      "pluralPhrase": "charsets",
      "directObjectType": "bes fixlet"
    },
    "category of <bes fixlet>": {
      "key": "category of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "category",
      "pluralPhrase": "categories",
      "directObjectType": "bes fixlet"
    },
    "body of <bes fixlet>": {
      "key": "body of <bes fixlet>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "body",
      "pluralPhrase": "bodies",
      "directObjectType": "bes fixlet"
    },
    "best activation of <bes fixlet>": {
      "key": "best activation of <bes fixlet>",
      "type": "property",
      "resultType": "bes activation",
      "singularPhrase": "best activation",
      "pluralPhrase": "best activations",
      "directObjectType": "bes fixlet"
    },
    "baseline flag of <bes fixlet>": {
      "key": "baseline flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "baseline flag",
      "pluralPhrase": "baseline flags",
      "directObjectType": "bes fixlet"
    },
    "applicable computer set of <bes fixlet>": {
      "key": "applicable computer set of <bes fixlet>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "applicable computer set",
      "pluralPhrase": "applicable computer sets",
      "directObjectType": "bes fixlet"
    },
    "applicable computer of <bes fixlet>": {
      "key": "applicable computer of <bes fixlet>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "applicable computer",
      "pluralPhrase": "applicable computers",
      "directObjectType": "bes fixlet"
    },
    "applicable computer count of <bes fixlet>": {
      "key": "applicable computer count of <bes fixlet>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "applicable computer count",
      "pluralPhrase": "applicable computer counts",
      "directObjectType": "bes fixlet"
    },
    "analysis flag of <bes fixlet>": {
      "key": "analysis flag of <bes fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "analysis flag",
      "pluralPhrase": "analysis flags",
      "directObjectType": "bes fixlet"
    },
    "activation of <bes fixlet>": {
      "key": "activation of <bes fixlet>",
      "type": "property",
      "resultType": "bes activation",
      "singularPhrase": "activation",
      "pluralPhrase": "activations",
      "directObjectType": "bes fixlet"
    },
    "action of <bes fixlet>": {
      "key": "action of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "directObjectType": "bes fixlet"
    },
    "action <string> of <bes fixlet>": {
      "key": "action <string> of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "indexType": "string",
      "directObjectType": "bes fixlet"
    },
    "action <integer> of <bes fixlet>": {
      "key": "action <integer> of <bes fixlet>",
      "type": "property",
      "resultType": "bes fixlet action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "indexType": "integer",
      "directObjectType": "bes fixlet"
    },
    "<bes fixlet> as xml": {
      "key": "<bes fixlet> as xml",
      "type": "cast",
      "resultType": "utf8 string",
      "argType": "bes fixlet",
      "phrase": "xml"
    },
    "<bes fixlet> = <bes fixlet>": {
      "key": "<bes fixlet> = <bes fixlet>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes fixlet",
      "op": "=",
      "rightType": "bes fixlet"
    },
    "<bes fixlet set> contains <bes fixlet>": {
      "key": "<bes fixlet set> contains <bes fixlet>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes fixlet set",
      "op": "contains",
      "rightType": "bes fixlet"
    },
    "multiplicity of <bes filter with multiplicity>": {
      "key": "multiplicity of <bes filter with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes filter with multiplicity"
    },
    "union of <bes filter set>": {
      "key": "union of <bes filter set>",
      "type": "property",
      "resultType": "bes filter set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes filter set"
    },
    "size of <bes filter set>": {
      "key": "size of <bes filter set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes filter set"
    },
    "intersection of <bes filter set>": {
      "key": "intersection of <bes filter set>",
      "type": "property",
      "resultType": "bes filter set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes filter set"
    },
    "element of <bes filter set>": {
      "key": "element of <bes filter set>",
      "type": "property",
      "resultType": "bes filter",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes filter set"
    },
    "<bes filter set> contains <bes filter set>": {
      "key": "<bes filter set> contains <bes filter set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes filter set",
      "op": "contains",
      "rightType": "bes filter set"
    },
    "<bes filter set> = <bes filter set>": {
      "key": "<bes filter set> = <bes filter set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes filter set",
      "op": "=",
      "rightType": "bes filter set"
    },
    "<bes filter set> - <bes filter set>": {
      "key": "<bes filter set> - <bes filter set>",
      "type": "binaryOp",
      "resultType": "bes filter set",
      "leftType": "bes filter set",
      "op": "-",
      "rightType": "bes filter set"
    },
    "<bes filter set> + <bes filter set>": {
      "key": "<bes filter set> + <bes filter set>",
      "type": "binaryOp",
      "resultType": "bes filter set",
      "leftType": "bes filter set",
      "op": "+",
      "rightType": "bes filter set"
    },
    "<bes filter set> * <bes filter set>": {
      "key": "<bes filter set> * <bes filter set>",
      "type": "binaryOp",
      "resultType": "bes filter set",
      "leftType": "bes filter set",
      "op": "*",
      "rightType": "bes filter set"
    },
    "user set of <bes filter>": {
      "key": "user set of <bes filter>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "user set",
      "pluralPhrase": "user sets",
      "directObjectType": "bes filter"
    },
    "user flag of <bes filter>": {
      "key": "user flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "user flag",
      "pluralPhrase": "user flags",
      "directObjectType": "bes filter"
    },
    "unmanagedasset flag of <bes filter>": {
      "key": "unmanagedasset flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unmanagedasset flag",
      "pluralPhrase": "unmanagedasset flags",
      "directObjectType": "bes filter"
    },
    "unique value of <bes filter>": {
      "key": "unique value of <bes filter>",
      "type": "property",
      "resultType": "bes filter with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes filter"
    },
    "task set of <bes filter>": {
      "key": "task set of <bes filter>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "task set",
      "pluralPhrase": "task sets",
      "directObjectType": "bes filter"
    },
    "task flag of <bes filter>": {
      "key": "task flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "task flag",
      "pluralPhrase": "task flags",
      "directObjectType": "bes filter"
    },
    "set of <bes filter>": {
      "key": "set of <bes filter>",
      "type": "property",
      "resultType": "bes filter set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes filter"
    },
    "private flag of <bes filter>": {
      "key": "private flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "private flag",
      "pluralPhrase": "private flags",
      "directObjectType": "bes filter"
    },
    "name of <bes filter>": {
      "key": "name of <bes filter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes filter"
    },
    "join by intersection flag of <bes filter>": {
      "key": "join by intersection flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "join by intersection flag",
      "pluralPhrase": "join by intersection flags",
      "directObjectType": "bes filter"
    },
    "id of <bes filter>": {
      "key": "id of <bes filter>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes filter"
    },
    "group flag of <bes filter>": {
      "key": "group flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "group flag",
      "pluralPhrase": "group flags",
      "directObjectType": "bes filter"
    },
    "fixlet set of <bes filter>": {
      "key": "fixlet set of <bes filter>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "fixlet set",
      "pluralPhrase": "fixlet sets",
      "directObjectType": "bes filter"
    },
    "fixlet flag of <bes filter>": {
      "key": "fixlet flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fixlet flag",
      "pluralPhrase": "fixlet flags",
      "directObjectType": "bes filter"
    },
    "domain of <bes filter>": {
      "key": "domain of <bes filter>",
      "type": "property",
      "resultType": "bes domain",
      "singularPhrase": "domain",
      "pluralPhrase": "domains",
      "directObjectType": "bes filter"
    },
    "computer set of <bes filter>": {
      "key": "computer set of <bes filter>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "computer set",
      "pluralPhrase": "computer sets",
      "directObjectType": "bes filter"
    },
    "computer group set of <bes filter>": {
      "key": "computer group set of <bes filter>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "computer group set",
      "pluralPhrase": "computer group sets",
      "directObjectType": "bes filter"
    },
    "computer flag of <bes filter>": {
      "key": "computer flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "computer flag",
      "pluralPhrase": "computer flags",
      "directObjectType": "bes filter"
    },
    "baseline set of <bes filter>": {
      "key": "baseline set of <bes filter>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "baseline set",
      "pluralPhrase": "baseline sets",
      "directObjectType": "bes filter"
    },
    "baseline flag of <bes filter>": {
      "key": "baseline flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "baseline flag",
      "pluralPhrase": "baseline flags",
      "directObjectType": "bes filter"
    },
    "analysis set of <bes filter>": {
      "key": "analysis set of <bes filter>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "analysis set",
      "pluralPhrase": "analysis sets",
      "directObjectType": "bes filter"
    },
    "analysis flag of <bes filter>": {
      "key": "analysis flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "analysis flag",
      "pluralPhrase": "analysis flags",
      "directObjectType": "bes filter"
    },
    "action set of <bes filter>": {
      "key": "action set of <bes filter>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "action set",
      "pluralPhrase": "action sets",
      "directObjectType": "bes filter"
    },
    "action flag of <bes filter>": {
      "key": "action flag of <bes filter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "action flag",
      "pluralPhrase": "action flags",
      "directObjectType": "bes filter"
    },
    "<bes filter> = <bes filter>": {
      "key": "<bes filter> = <bes filter>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes filter",
      "op": "=",
      "rightType": "bes filter"
    },
    "<bes filter set> contains <bes filter>": {
      "key": "<bes filter set> contains <bes filter>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes filter set",
      "op": "contains",
      "rightType": "bes filter"
    },
    "multiplicity of <bes domain with multiplicity>": {
      "key": "multiplicity of <bes domain with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes domain with multiplicity"
    },
    "union of <bes domain set>": {
      "key": "union of <bes domain set>",
      "type": "property",
      "resultType": "bes domain set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes domain set"
    },
    "size of <bes domain set>": {
      "key": "size of <bes domain set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes domain set"
    },
    "intersection of <bes domain set>": {
      "key": "intersection of <bes domain set>",
      "type": "property",
      "resultType": "bes domain set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes domain set"
    },
    "element of <bes domain set>": {
      "key": "element of <bes domain set>",
      "type": "property",
      "resultType": "bes domain",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes domain set"
    },
    "<bes domain set> contains <bes domain set>": {
      "key": "<bes domain set> contains <bes domain set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes domain set",
      "op": "contains",
      "rightType": "bes domain set"
    },
    "<bes domain set> = <bes domain set>": {
      "key": "<bes domain set> = <bes domain set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes domain set",
      "op": "=",
      "rightType": "bes domain set"
    },
    "<bes domain set> - <bes domain set>": {
      "key": "<bes domain set> - <bes domain set>",
      "type": "binaryOp",
      "resultType": "bes domain set",
      "leftType": "bes domain set",
      "op": "-",
      "rightType": "bes domain set"
    },
    "<bes domain set> + <bes domain set>": {
      "key": "<bes domain set> + <bes domain set>",
      "type": "binaryOp",
      "resultType": "bes domain set",
      "leftType": "bes domain set",
      "op": "+",
      "rightType": "bes domain set"
    },
    "<bes domain set> * <bes domain set>": {
      "key": "<bes domain set> * <bes domain set>",
      "type": "binaryOp",
      "resultType": "bes domain set",
      "leftType": "bes domain set",
      "op": "*",
      "rightType": "bes domain set"
    },
    "unique value of <bes domain>": {
      "key": "unique value of <bes domain>",
      "type": "property",
      "resultType": "bes domain with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes domain"
    },
    "set of <bes domain>": {
      "key": "set of <bes domain>",
      "type": "property",
      "resultType": "bes domain set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes domain"
    },
    "name of <bes domain>": {
      "key": "name of <bes domain>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes domain"
    },
    "link of <bes domain>": {
      "key": "link of <bes domain>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "directObjectType": "bes domain"
    },
    "link href of <bes domain>": {
      "key": "link href of <bes domain>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "link href",
      "pluralPhrase": "link hrefs",
      "directObjectType": "bes domain"
    },
    "link <string> of <bes domain>": {
      "key": "link <string> of <bes domain>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "string",
      "directObjectType": "bes domain"
    },
    "link <html> of <bes domain>": {
      "key": "link <html> of <bes domain>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "html",
      "directObjectType": "bes domain"
    },
    "id of <bes domain>": {
      "key": "id of <bes domain>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes domain"
    },
    "filter set of <bes domain>": {
      "key": "filter set of <bes domain>",
      "type": "property",
      "resultType": "bes filter set",
      "singularPhrase": "filter set",
      "pluralPhrase": "filter sets",
      "directObjectType": "bes domain"
    },
    "filter of <bes domain>": {
      "key": "filter of <bes domain>",
      "type": "property",
      "resultType": "bes filter",
      "singularPhrase": "filter",
      "pluralPhrase": "filters",
      "directObjectType": "bes domain"
    },
    "display name of <bes domain>": {
      "key": "display name of <bes domain>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display name",
      "pluralPhrase": "display names",
      "directObjectType": "bes domain"
    },
    "custom site set of <bes domain>": {
      "key": "custom site set of <bes domain>",
      "type": "property",
      "resultType": "bes site set",
      "singularPhrase": "custom site set",
      "pluralPhrase": "custom site sets",
      "directObjectType": "bes domain"
    },
    "custom site of <bes domain>": {
      "key": "custom site of <bes domain>",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "custom site",
      "pluralPhrase": "custom sites",
      "directObjectType": "bes domain"
    },
    "custom fixlet set of <bes domain>": {
      "key": "custom fixlet set of <bes domain>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "custom fixlet set",
      "pluralPhrase": "custom fixlet sets",
      "directObjectType": "bes domain"
    },
    "custom fixlet of <bes domain>": {
      "key": "custom fixlet of <bes domain>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "custom fixlet",
      "pluralPhrase": "custom fixlets",
      "directObjectType": "bes domain"
    },
    "computer group set of <bes domain>": {
      "key": "computer group set of <bes domain>",
      "type": "property",
      "resultType": "bes computer group set",
      "singularPhrase": "computer group set",
      "pluralPhrase": "computer group sets",
      "directObjectType": "bes domain"
    },
    "computer group of <bes domain>": {
      "key": "computer group of <bes domain>",
      "type": "property",
      "resultType": "bes computer group",
      "singularPhrase": "computer group",
      "pluralPhrase": "computer groups",
      "directObjectType": "bes domain"
    },
    "action set of <bes domain>": {
      "key": "action set of <bes domain>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "action set",
      "pluralPhrase": "action sets",
      "directObjectType": "bes domain"
    },
    "action of <bes domain>": {
      "key": "action of <bes domain>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "directObjectType": "bes domain"
    },
    "<bes domain> = <bes domain>": {
      "key": "<bes domain> = <bes domain>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes domain",
      "op": "=",
      "rightType": "bes domain"
    },
    "<bes domain set> contains <bes domain>": {
      "key": "<bes domain set> contains <bes domain>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes domain set",
      "op": "contains",
      "rightType": "bes domain"
    },
    "value of <bes deployment option>": {
      "key": "value of <bes deployment option>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "bes deployment option"
    },
    "name of <bes deployment option>": {
      "key": "name of <bes deployment option>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes deployment option"
    },
    "database name of <bes deployment option>": {
      "key": "database name of <bes deployment option>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "database name",
      "pluralPhrase": "database names",
      "directObjectType": "bes deployment option"
    },
    "database id of <bes deployment option>": {
      "key": "database id of <bes deployment option>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "bes deployment option"
    },
    "multiplicity of <bes computer with multiplicity>": {
      "key": "multiplicity of <bes computer with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes computer with multiplicity"
    },
    "union of <bes computer set>": {
      "key": "union of <bes computer set>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes computer set"
    },
    "size of <bes computer set>": {
      "key": "size of <bes computer set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes computer set"
    },
    "intersection of <bes computer set>": {
      "key": "intersection of <bes computer set>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes computer set"
    },
    "element of <bes computer set>": {
      "key": "element of <bes computer set>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes computer set"
    },
    "<bes computer set> contains <bes computer set>": {
      "key": "<bes computer set> contains <bes computer set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes computer set",
      "op": "contains",
      "rightType": "bes computer set"
    },
    "<bes computer set> = <bes computer set>": {
      "key": "<bes computer set> = <bes computer set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes computer set",
      "op": "=",
      "rightType": "bes computer set"
    },
    "<bes computer set> - <bes computer set>": {
      "key": "<bes computer set> - <bes computer set>",
      "type": "binaryOp",
      "resultType": "bes computer set",
      "leftType": "bes computer set",
      "op": "-",
      "rightType": "bes computer set"
    },
    "<bes computer set> + <bes computer set>": {
      "key": "<bes computer set> + <bes computer set>",
      "type": "binaryOp",
      "resultType": "bes computer set",
      "leftType": "bes computer set",
      "op": "+",
      "rightType": "bes computer set"
    },
    "<bes computer set> * <bes computer set>": {
      "key": "<bes computer set> * <bes computer set>",
      "type": "binaryOp",
      "resultType": "bes computer set",
      "leftType": "bes computer set",
      "op": "*",
      "rightType": "bes computer set"
    },
    "multiplicity of <bes computer group with multiplicity>": {
      "key": "multiplicity of <bes computer group with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes computer group with multiplicity"
    },
    "union of <bes computer group set>": {
      "key": "union of <bes computer group set>",
      "type": "property",
      "resultType": "bes computer group set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes computer group set"
    },
    "size of <bes computer group set>": {
      "key": "size of <bes computer group set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes computer group set"
    },
    "intersection of <bes computer group set>": {
      "key": "intersection of <bes computer group set>",
      "type": "property",
      "resultType": "bes computer group set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes computer group set"
    },
    "element of <bes computer group set>": {
      "key": "element of <bes computer group set>",
      "type": "property",
      "resultType": "bes computer group",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes computer group set"
    },
    "<bes computer group set> contains <bes computer group set>": {
      "key": "<bes computer group set> contains <bes computer group set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes computer group set",
      "op": "contains",
      "rightType": "bes computer group set"
    },
    "<bes computer group set> as xml": {
      "key": "<bes computer group set> as xml",
      "type": "cast",
      "resultType": "utf8 string",
      "argType": "bes computer group set",
      "phrase": "xml"
    },
    "<bes computer group set> = <bes computer group set>": {
      "key": "<bes computer group set> = <bes computer group set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes computer group set",
      "op": "=",
      "rightType": "bes computer group set"
    },
    "<bes computer group set> - <bes computer group set>": {
      "key": "<bes computer group set> - <bes computer group set>",
      "type": "binaryOp",
      "resultType": "bes computer group set",
      "leftType": "bes computer group set",
      "op": "-",
      "rightType": "bes computer group set"
    },
    "<bes computer group set> + <bes computer group set>": {
      "key": "<bes computer group set> + <bes computer group set>",
      "type": "binaryOp",
      "resultType": "bes computer group set",
      "leftType": "bes computer group set",
      "op": "+",
      "rightType": "bes computer group set"
    },
    "<bes computer group set> * <bes computer group set>": {
      "key": "<bes computer group set> * <bes computer group set>",
      "type": "binaryOp",
      "resultType": "bes computer group set",
      "leftType": "bes computer group set",
      "op": "*",
      "rightType": "bes computer group set"
    },
    "unique value of <bes computer group>": {
      "key": "unique value of <bes computer group>",
      "type": "property",
      "resultType": "bes computer group with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes computer group"
    },
    "site of <bes computer group>": {
      "key": "site of <bes computer group>",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "site",
      "pluralPhrase": "sites",
      "directObjectType": "bes computer group"
    },
    "set of <bes computer group>": {
      "key": "set of <bes computer group>",
      "type": "property",
      "resultType": "bes computer group set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes computer group"
    },
    "name of <bes computer group>": {
      "key": "name of <bes computer group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes computer group"
    },
    "member set of <bes computer group>": {
      "key": "member set of <bes computer group>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "member set",
      "pluralPhrase": "member sets",
      "directObjectType": "bes computer group"
    },
    "member of <bes computer group>": {
      "key": "member of <bes computer group>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "member",
      "pluralPhrase": "members",
      "directObjectType": "bes computer group"
    },
    "manual flag of <bes computer group>": {
      "key": "manual flag of <bes computer group>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "manual flag",
      "pluralPhrase": "manual flags",
      "directObjectType": "bes computer group"
    },
    "issuer of <bes computer group>": {
      "key": "issuer of <bes computer group>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "issuer",
      "pluralPhrase": "issuers",
      "directObjectType": "bes computer group"
    },
    "id of <bes computer group>": {
      "key": "id of <bes computer group>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes computer group"
    },
    "domain of <bes computer group>": {
      "key": "domain of <bes computer group>",
      "type": "property",
      "resultType": "bes domain",
      "singularPhrase": "domain",
      "pluralPhrase": "domains",
      "directObjectType": "bes computer group"
    },
    "database id of <bes computer group>": {
      "key": "database id of <bes computer group>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "bes computer group"
    },
    "creation time of <bes computer group>": {
      "key": "creation time of <bes computer group>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "creation time",
      "pluralPhrase": "creation times",
      "directObjectType": "bes computer group"
    },
    "client evaluated flag of <bes computer group>": {
      "key": "client evaluated flag of <bes computer group>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "client evaluated flag",
      "pluralPhrase": "client evaluated flags",
      "directObjectType": "bes computer group"
    },
    "automatic flag of <bes computer group>": {
      "key": "automatic flag of <bes computer group>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "automatic flag",
      "pluralPhrase": "automatic flags",
      "directObjectType": "bes computer group"
    },
    "<bes computer group> as xml": {
      "key": "<bes computer group> as xml",
      "type": "cast",
      "resultType": "utf8 string",
      "argType": "bes computer group",
      "phrase": "xml"
    },
    "<bes computer group> = <bes computer group>": {
      "key": "<bes computer group> = <bes computer group>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes computer group",
      "op": "=",
      "rightType": "bes computer group"
    },
    "<bes computer group set> contains <bes computer group>": {
      "key": "<bes computer group set> contains <bes computer group>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes computer group set",
      "op": "contains",
      "rightType": "bes computer group"
    },
    "unique value of <bes computer>": {
      "key": "unique value of <bes computer>",
      "type": "property",
      "resultType": "bes computer with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes computer"
    },
    "subscribed site set of <bes computer>": {
      "key": "subscribed site set of <bes computer>",
      "type": "property",
      "resultType": "bes site set",
      "singularPhrase": "subscribed site set",
      "pluralPhrase": "subscribed site sets",
      "directObjectType": "bes computer"
    },
    "subscribed site of <bes computer>": {
      "key": "subscribed site of <bes computer>",
      "type": "property",
      "resultType": "bes site",
      "singularPhrase": "subscribed site",
      "pluralPhrase": "subscribed sites",
      "directObjectType": "bes computer"
    },
    "subscribed <bes site> of <bes computer>": {
      "key": "subscribed <bes site> of <bes computer>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "subscribed",
      "pluralPhrase": "subscribeds",
      "indexType": "bes site",
      "directObjectType": "bes computer"
    },
    "set of <bes computer>": {
      "key": "set of <bes computer>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes computer"
    },
    "root server of <bes computer>": {
      "key": "root server of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "root server",
      "pluralPhrase": "root servers",
      "directObjectType": "bes computer"
    },
    "root server flag of <bes computer>": {
      "key": "root server flag of <bes computer>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "root server flag",
      "pluralPhrase": "root server flags",
      "directObjectType": "bes computer"
    },
    "result from <bes property> of <bes computer>": {
      "key": "result from <bes property> of <bes computer>",
      "type": "property",
      "resultType": "bes property result",
      "singularPhrase": "result from",
      "pluralPhrase": "results from",
      "indexType": "bes property",
      "directObjectType": "bes computer"
    },
    "result from <bes fixlet> of <bes computer>": {
      "key": "result from <bes fixlet> of <bes computer>",
      "type": "property",
      "resultType": "bes fixlet result",
      "singularPhrase": "result from",
      "pluralPhrase": "results from",
      "indexType": "bes fixlet",
      "directObjectType": "bes computer"
    },
    "result from <bes action> of <bes computer>": {
      "key": "result from <bes action> of <bes computer>",
      "type": "property",
      "resultType": "bes action result",
      "singularPhrase": "result from",
      "pluralPhrase": "results from",
      "indexType": "bes action",
      "directObjectType": "bes computer"
    },
    "reported property set of <bes computer>": {
      "key": "reported property set of <bes computer>",
      "type": "property",
      "resultType": "bes property set",
      "singularPhrase": "reported property set",
      "pluralPhrase": "reported property sets",
      "directObjectType": "bes computer"
    },
    "reported action set of <bes computer>": {
      "key": "reported action set of <bes computer>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "reported action set",
      "pluralPhrase": "reported action sets",
      "directObjectType": "bes computer"
    },
    "relevant fixlet set of <bes computer>": {
      "key": "relevant fixlet set of <bes computer>",
      "type": "property",
      "resultType": "bes fixlet set",
      "singularPhrase": "relevant fixlet set",
      "pluralPhrase": "relevant fixlet sets",
      "directObjectType": "bes computer"
    },
    "relevant fixlet of <bes computer>": {
      "key": "relevant fixlet of <bes computer>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "relevant fixlet",
      "pluralPhrase": "relevant fixlets",
      "directObjectType": "bes computer"
    },
    "relevant <bes fixlet> of <bes computer>": {
      "key": "relevant <bes fixlet> of <bes computer>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "relevant",
      "pluralPhrase": "relevants",
      "indexType": "bes fixlet",
      "directObjectType": "bes computer"
    },
    "relay server of <bes computer>": {
      "key": "relay server of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "relay server",
      "pluralPhrase": "relay servers",
      "directObjectType": "bes computer"
    },
    "relay server flag of <bes computer>": {
      "key": "relay server flag of <bes computer>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "relay server flag",
      "pluralPhrase": "relay server flags",
      "directObjectType": "bes computer"
    },
    "relay selection method of <bes computer>": {
      "key": "relay selection method of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "relay selection method",
      "pluralPhrase": "relay selection methods",
      "directObjectType": "bes computer"
    },
    "relay hostname of <bes computer>": {
      "key": "relay hostname of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "relay hostname",
      "pluralPhrase": "relay hostnames",
      "directObjectType": "bes computer"
    },
    "relay distance of <bes computer>": {
      "key": "relay distance of <bes computer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "relay distance",
      "pluralPhrase": "relay distances",
      "directObjectType": "bes computer"
    },
    "property result of <bes computer>": {
      "key": "property result of <bes computer>",
      "type": "property",
      "resultType": "bes property result",
      "singularPhrase": "property result",
      "pluralPhrase": "property results",
      "directObjectType": "bes computer"
    },
    "operating system of <bes computer>": {
      "key": "operating system of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "operating system",
      "pluralPhrase": "operating systems",
      "directObjectType": "bes computer"
    },
    "name of <bes computer>": {
      "key": "name of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes computer"
    },
    "locked flag of <bes computer>": {
      "key": "locked flag of <bes computer>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "locked flag",
      "pluralPhrase": "locked flags",
      "directObjectType": "bes computer"
    },
    "link of <bes computer>": {
      "key": "link of <bes computer>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "directObjectType": "bes computer"
    },
    "link href of <bes computer>": {
      "key": "link href of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "link href",
      "pluralPhrase": "link hrefs",
      "directObjectType": "bes computer"
    },
    "link <string> of <bes computer>": {
      "key": "link <string> of <bes computer>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "string",
      "directObjectType": "bes computer"
    },
    "link <html> of <bes computer>": {
      "key": "link <html> of <bes computer>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "html",
      "directObjectType": "bes computer"
    },
    "license type of <bes computer>": {
      "key": "license type of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "license type",
      "pluralPhrase": "license types",
      "directObjectType": "bes computer"
    },
    "last report time of <bes computer>": {
      "key": "last report time of <bes computer>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last report time",
      "pluralPhrase": "last report times",
      "directObjectType": "bes computer"
    },
    "ip address of <bes computer>": {
      "key": "ip address of <bes computer>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "ip address",
      "pluralPhrase": "ip addresses",
      "directObjectType": "bes computer"
    },
    "id of <bes computer>": {
      "key": "id of <bes computer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes computer"
    },
    "hostname of <bes computer>": {
      "key": "hostname of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "hostname",
      "pluralPhrase": "hostnames",
      "directObjectType": "bes computer"
    },
    "database name of <bes computer>": {
      "key": "database name of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "database name",
      "pluralPhrase": "database names",
      "directObjectType": "bes computer"
    },
    "database id of <bes computer>": {
      "key": "database id of <bes computer>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "bes computer"
    },
    "cpu of <bes computer>": {
      "key": "cpu of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cpu",
      "pluralPhrase": "cpus",
      "directObjectType": "bes computer"
    },
    "comment of <bes computer>": {
      "key": "comment of <bes computer>",
      "type": "property",
      "resultType": "bes comment",
      "singularPhrase": "comment",
      "pluralPhrase": "comments",
      "directObjectType": "bes computer"
    },
    "client setting of <bes computer>": {
      "key": "client setting of <bes computer>",
      "type": "property",
      "resultType": "bes client setting",
      "singularPhrase": "client setting",
      "pluralPhrase": "client settings",
      "directObjectType": "bes computer"
    },
    "administrator set of <bes computer>": {
      "key": "administrator set of <bes computer>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "administrator set",
      "pluralPhrase": "administrator sets",
      "directObjectType": "bes computer"
    },
    "administrator of <bes computer>": {
      "key": "administrator of <bes computer>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "administrator",
      "pluralPhrase": "administrators",
      "directObjectType": "bes computer"
    },
    "administrator <bes user> of <bes computer>": {
      "key": "administrator <bes user> of <bes computer>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "administrator",
      "pluralPhrase": "administrators",
      "indexType": "bes user",
      "directObjectType": "bes computer"
    },
    "active directory path of <bes computer>": {
      "key": "active directory path of <bes computer>",
      "type": "property",
      "resultType": "distinguished name",
      "singularPhrase": "active directory path",
      "pluralPhrase": "active directory paths",
      "directObjectType": "bes computer"
    },
    "action result of <bes computer>": {
      "key": "action result of <bes computer>",
      "type": "property",
      "resultType": "bes action result",
      "singularPhrase": "action result",
      "pluralPhrase": "action results",
      "directObjectType": "bes computer"
    },
    "<bes computer> = <bes computer>": {
      "key": "<bes computer> = <bes computer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes computer",
      "op": "=",
      "rightType": "bes computer"
    },
    "<bes computer set> contains <bes computer>": {
      "key": "<bes computer set> contains <bes computer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes computer set",
      "op": "contains",
      "rightType": "bes computer"
    },
    "timestamp of <bes comment>": {
      "key": "timestamp of <bes comment>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "timestamp",
      "pluralPhrase": "timestamps",
      "directObjectType": "bes comment"
    },
    "text of <bes comment>": {
      "key": "text of <bes comment>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "text",
      "pluralPhrase": "texts",
      "directObjectType": "bes comment"
    },
    "deleted flag of <bes comment>": {
      "key": "deleted flag of <bes comment>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "deleted flag",
      "pluralPhrase": "deleted flags",
      "directObjectType": "bes comment"
    },
    "author of <bes comment>": {
      "key": "author of <bes comment>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "author",
      "pluralPhrase": "authors",
      "directObjectType": "bes comment"
    },
    "value of <bes client setting>": {
      "key": "value of <bes client setting>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "bes client setting"
    },
    "scope of <bes client setting>": {
      "key": "scope of <bes client setting>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "scope",
      "pluralPhrase": "scopes",
      "directObjectType": "bes client setting"
    },
    "name of <bes client setting>": {
      "key": "name of <bes client setting>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes client setting"
    },
    "name of <bes baseline component group>": {
      "key": "name of <bes baseline component group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes baseline component group"
    },
    "component of <bes baseline component group>": {
      "key": "component of <bes baseline component group>",
      "type": "property",
      "resultType": "bes baseline component",
      "singularPhrase": "component",
      "pluralPhrase": "components",
      "directObjectType": "bes baseline component group"
    },
    "unknown computer set of <bes baseline component>": {
      "key": "unknown computer set of <bes baseline component>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "unknown computer set",
      "pluralPhrase": "unknown computer sets",
      "directObjectType": "bes baseline component"
    },
    "unknown computer count of <bes baseline component>": {
      "key": "unknown computer count of <bes baseline component>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "unknown computer count",
      "pluralPhrase": "unknown computer counts",
      "directObjectType": "bes baseline component"
    },
    "source fixlet of <bes baseline component>": {
      "key": "source fixlet of <bes baseline component>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "source fixlet",
      "pluralPhrase": "source fixlets",
      "directObjectType": "bes baseline component"
    },
    "relevance of <bes baseline component>": {
      "key": "relevance of <bes baseline component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "relevance",
      "pluralPhrase": "relevances",
      "directObjectType": "bes baseline component"
    },
    "name of <bes baseline component>": {
      "key": "name of <bes baseline component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes baseline component"
    },
    "include in relevance flag of <bes baseline component>": {
      "key": "include in relevance flag of <bes baseline component>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "include in relevance flag",
      "pluralPhrase": "include in relevance flags",
      "directObjectType": "bes baseline component"
    },
    "id of <bes baseline component>": {
      "key": "id of <bes baseline component>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes baseline component"
    },
    "applicable computer set of <bes baseline component>": {
      "key": "applicable computer set of <bes baseline component>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "applicable computer set",
      "pluralPhrase": "applicable computer sets",
      "directObjectType": "bes baseline component"
    },
    "applicable computer count of <bes baseline component>": {
      "key": "applicable computer count of <bes baseline component>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "applicable computer count",
      "pluralPhrase": "applicable computer counts",
      "directObjectType": "bes baseline component"
    },
    "action of <bes baseline component>": {
      "key": "action of <bes baseline component>",
      "type": "property",
      "resultType": "bes fixlet action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "directObjectType": "bes baseline component"
    },
    "name of <bes activation>": {
      "key": "name of <bes activation>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes activation"
    },
    "modification time of <bes activation>": {
      "key": "modification time of <bes activation>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "modification time",
      "pluralPhrase": "modification times",
      "directObjectType": "bes activation"
    },
    "issuer of <bes activation>": {
      "key": "issuer of <bes activation>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "issuer",
      "pluralPhrase": "issuers",
      "directObjectType": "bes activation"
    },
    "id of <bes activation>": {
      "key": "id of <bes activation>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes activation"
    },
    "database id of <bes activation>": {
      "key": "database id of <bes activation>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "bes activation"
    },
    "creation time of <bes activation>": {
      "key": "creation time of <bes activation>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "creation time",
      "pluralPhrase": "creation times",
      "directObjectType": "bes activation"
    },
    "analysis of <bes activation>": {
      "key": "analysis of <bes activation>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "analysis",
      "pluralPhrase": "analyses",
      "directObjectType": "bes activation"
    },
    "active flag of <bes activation>": {
      "key": "active flag of <bes activation>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "active flag",
      "pluralPhrase": "active flags",
      "directObjectType": "bes activation"
    },
    "multiplicity of <bes action with multiplicity>": {
      "key": "multiplicity of <bes action with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes action with multiplicity"
    },
    "<bes action status> as string": {
      "key": "<bes action status> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "bes action status",
      "phrase": "string"
    },
    "<bes action status> = <bes action status>": {
      "key": "<bes action status> = <bes action status>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes action status",
      "op": "=",
      "rightType": "bes action status"
    },
    "union of <bes action set>": {
      "key": "union of <bes action set>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes action set"
    },
    "size of <bes action set>": {
      "key": "size of <bes action set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes action set"
    },
    "intersection of <bes action set>": {
      "key": "intersection of <bes action set>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes action set"
    },
    "element of <bes action set>": {
      "key": "element of <bes action set>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes action set"
    },
    "<bes action set> contains <bes action set>": {
      "key": "<bes action set> contains <bes action set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes action set",
      "op": "contains",
      "rightType": "bes action set"
    },
    "<bes action set> as xml": {
      "key": "<bes action set> as xml",
      "type": "cast",
      "resultType": "utf8 string",
      "argType": "bes action set",
      "phrase": "xml"
    },
    "<bes action set> = <bes action set>": {
      "key": "<bes action set> = <bes action set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes action set",
      "op": "=",
      "rightType": "bes action set"
    },
    "<bes action set> - <bes action set>": {
      "key": "<bes action set> - <bes action set>",
      "type": "binaryOp",
      "resultType": "bes action set",
      "leftType": "bes action set",
      "op": "-",
      "rightType": "bes action set"
    },
    "<bes action set> + <bes action set>": {
      "key": "<bes action set> + <bes action set>",
      "type": "binaryOp",
      "resultType": "bes action set",
      "leftType": "bes action set",
      "op": "+",
      "rightType": "bes action set"
    },
    "<bes action set> * <bes action set>": {
      "key": "<bes action set> * <bes action set>",
      "type": "binaryOp",
      "resultType": "bes action set",
      "leftType": "bes action set",
      "op": "*",
      "rightType": "bes action set"
    },
    "status of <bes action result>": {
      "key": "status of <bes action result>",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "status",
      "pluralPhrase": "statuses",
      "directObjectType": "bes action result"
    },
    "retry count of <bes action result>": {
      "key": "retry count of <bes action result>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "retry count",
      "pluralPhrase": "retry counts",
      "directObjectType": "bes action result"
    },
    "line number of <bes action result>": {
      "key": "line number of <bes action result>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "line number",
      "pluralPhrase": "line numbers",
      "directObjectType": "bes action result"
    },
    "detailed status of <bes action result>": {
      "key": "detailed status of <bes action result>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "detailed status",
      "pluralPhrase": "detailed statuses",
      "directObjectType": "bes action result"
    },
    "computer of <bes action result>": {
      "key": "computer of <bes action result>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "computer",
      "pluralPhrase": "computers",
      "directObjectType": "bes action result"
    },
    "apply count of <bes action result>": {
      "key": "apply count of <bes action result>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "apply count",
      "pluralPhrase": "apply counts",
      "directObjectType": "bes action result"
    },
    "action of <bes action result>": {
      "key": "action of <bes action result>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "directObjectType": "bes action result"
    },
    "value of <bes action parameter>": {
      "key": "value of <bes action parameter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "bes action parameter"
    },
    "name of <bes action parameter>": {
      "key": "name of <bes action parameter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes action parameter"
    },
    "utc time flag of <bes action>": {
      "key": "utc time flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "utc time flag",
      "pluralPhrase": "utc time flags",
      "directObjectType": "bes action"
    },
    "urgent flag of <bes action>": {
      "key": "urgent flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "urgent flag",
      "pluralPhrase": "urgent flags",
      "directObjectType": "bes action"
    },
    "untargeted flag of <bes action>": {
      "key": "untargeted flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "untargeted flag",
      "pluralPhrase": "untargeted flags",
      "directObjectType": "bes action"
    },
    "unique value of <bes action>": {
      "key": "unique value of <bes action>",
      "type": "property",
      "resultType": "bes action with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes action"
    },
    "top level flag of <bes action>": {
      "key": "top level flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "top level flag",
      "pluralPhrase": "top level flags",
      "directObjectType": "bes action"
    },
    "time stopped of <bes action>": {
      "key": "time stopped of <bes action>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time stopped",
      "pluralPhrase": "times stopped",
      "directObjectType": "bes action"
    },
    "time range start of <bes action>": {
      "key": "time range start of <bes action>",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "time range start",
      "pluralPhrase": "time range starts",
      "directObjectType": "bes action"
    },
    "time range end of <bes action>": {
      "key": "time range end of <bes action>",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "time range end",
      "pluralPhrase": "time range ends",
      "directObjectType": "bes action"
    },
    "time issued of <bes action>": {
      "key": "time issued of <bes action>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time issued",
      "pluralPhrase": "times issued",
      "directObjectType": "bes action"
    },
    "temporal distribution of <bes action>": {
      "key": "temporal distribution of <bes action>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "temporal distribution",
      "pluralPhrase": "temporal distributions",
      "directObjectType": "bes action"
    },
    "targeting relevance of <bes action>": {
      "key": "targeting relevance of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "targeting relevance",
      "pluralPhrase": "targeting relevances",
      "directObjectType": "bes action"
    },
    "targeting method of <bes action>": {
      "key": "targeting method of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "targeting method",
      "pluralPhrase": "targeting methods",
      "directObjectType": "bes action"
    },
    "targeted name of <bes action>": {
      "key": "targeted name of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "targeted name",
      "pluralPhrase": "targeted names",
      "directObjectType": "bes action"
    },
    "targeted list of <bes action>": {
      "key": "targeted list of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "targeted list",
      "pluralPhrase": "targeted lists",
      "directObjectType": "bes action"
    },
    "targeted computer set of <bes action>": {
      "key": "targeted computer set of <bes action>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "targeted computer set",
      "pluralPhrase": "targeted computer sets",
      "directObjectType": "bes action"
    },
    "targeted computer of <bes action>": {
      "key": "targeted computer of <bes action>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "targeted computer",
      "pluralPhrase": "targeted computers",
      "directObjectType": "bes action"
    },
    "targeted by property flag of <bes action>": {
      "key": "targeted by property flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "targeted by property flag",
      "pluralPhrase": "targeted by property flags",
      "directObjectType": "bes action"
    },
    "targeted by list flag of <bes action>": {
      "key": "targeted by list flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "targeted by list flag",
      "pluralPhrase": "targeted by list flags",
      "directObjectType": "bes action"
    },
    "targeted by id flag of <bes action>": {
      "key": "targeted by id flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "targeted by id flag",
      "pluralPhrase": "targeted by id flags",
      "directObjectType": "bes action"
    },
    "success on run to completion of <bes action>": {
      "key": "success on run to completion of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "success on run to completion",
      "pluralPhrase": "success on run to completions",
      "directObjectType": "bes action"
    },
    "success on original relevance of <bes action>": {
      "key": "success on original relevance of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "success on original relevance",
      "pluralPhrase": "success on original relevances",
      "directObjectType": "bes action"
    },
    "success on custom relevance of <bes action>": {
      "key": "success on custom relevance of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "success on custom relevance",
      "pluralPhrase": "success on custom relevances",
      "directObjectType": "bes action"
    },
    "subscription flag of <bes action>": {
      "key": "subscription flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "subscription flag",
      "pluralPhrase": "subscription flags",
      "directObjectType": "bes action"
    },
    "stopper of <bes action>": {
      "key": "stopper of <bes action>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "stopper",
      "pluralPhrase": "stoppers",
      "directObjectType": "bes action"
    },
    "state of <bes action>": {
      "key": "state of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "state",
      "pluralPhrase": "states",
      "directObjectType": "bes action"
    },
    "start time_of_day of <bes action>": {
      "key": "start time_of_day of <bes action>",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "start time_of_day",
      "pluralPhrase": "start times_of_day",
      "directObjectType": "bes action"
    },
    "start flag of <bes action>": {
      "key": "start flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "start flag",
      "pluralPhrase": "start flags",
      "directObjectType": "bes action"
    },
    "start date of <bes action>": {
      "key": "start date of <bes action>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "start date",
      "pluralPhrase": "start dates",
      "directObjectType": "bes action"
    },
    "source relevance of <bes action>": {
      "key": "source relevance of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "source relevance",
      "pluralPhrase": "source relevances",
      "directObjectType": "bes action"
    },
    "source fixlet of <bes action>": {
      "key": "source fixlet of <bes action>",
      "type": "property",
      "resultType": "bes fixlet",
      "singularPhrase": "source fixlet",
      "pluralPhrase": "source fixlets",
      "directObjectType": "bes action"
    },
    "single flag of <bes action>": {
      "key": "single flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "single flag",
      "pluralPhrase": "single flags",
      "directObjectType": "bes action"
    },
    "shutdown flag of <bes action>": {
      "key": "shutdown flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "shutdown flag",
      "pluralPhrase": "shutdown flags",
      "directObjectType": "bes action"
    },
    "show running message flag of <bes action>": {
      "key": "show running message flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "show running message flag",
      "pluralPhrase": "show running message flags",
      "directObjectType": "bes action"
    },
    "show message flag of <bes action>": {
      "key": "show message flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "show message flag",
      "pluralPhrase": "show message flags",
      "directObjectType": "bes action"
    },
    "settings flag of <bes action>": {
      "key": "settings flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "settings flag",
      "pluralPhrase": "settings flags",
      "directObjectType": "bes action"
    },
    "set of <bes action>": {
      "key": "set of <bes action>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes action"
    },
    "selected groups string of <bes action>": {
      "key": "selected groups string of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "selected groups string",
      "pluralPhrase": "selected groups strings",
      "directObjectType": "bes action"
    },
    "running message title of <bes action>": {
      "key": "running message title of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "running message title",
      "pluralPhrase": "running message titles",
      "directObjectType": "bes action"
    },
    "running message text of <bes action>": {
      "key": "running message text of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "running message text",
      "pluralPhrase": "running message texts",
      "directObjectType": "bes action"
    },
    "retry wait for reboot flag of <bes action>": {
      "key": "retry wait for reboot flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "retry wait for reboot flag",
      "pluralPhrase": "retry wait for reboot flags",
      "directObjectType": "bes action"
    },
    "retry limit of <bes action>": {
      "key": "retry limit of <bes action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "retry limit",
      "pluralPhrase": "retry limits",
      "directObjectType": "bes action"
    },
    "retry delay of <bes action>": {
      "key": "retry delay of <bes action>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "retry delay",
      "pluralPhrase": "retry delays",
      "directObjectType": "bes action"
    },
    "result of <bes action>": {
      "key": "result of <bes action>",
      "type": "property",
      "resultType": "bes action result",
      "singularPhrase": "result",
      "pluralPhrase": "results",
      "directObjectType": "bes action"
    },
    "result from <bes computer> of <bes action>": {
      "key": "result from <bes computer> of <bes action>",
      "type": "property",
      "resultType": "bes action result",
      "singularPhrase": "result from",
      "pluralPhrase": "results from",
      "indexType": "bes computer",
      "directObjectType": "bes action"
    },
    "restart flag of <bes action>": {
      "key": "restart flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "restart flag",
      "pluralPhrase": "restart flags",
      "directObjectType": "bes action"
    },
    "require user presence of <bes action>": {
      "key": "require user presence of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "require user presence",
      "pluralPhrase": "require user presences",
      "directObjectType": "bes action"
    },
    "require user absence of <bes action>": {
      "key": "require user absence of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "require user absence",
      "pluralPhrase": "require user absences",
      "directObjectType": "bes action"
    },
    "reported computer set of <bes action>": {
      "key": "reported computer set of <bes action>",
      "type": "property",
      "resultType": "bes computer set",
      "singularPhrase": "reported computer set",
      "pluralPhrase": "reported computer sets",
      "directObjectType": "bes action"
    },
    "reapply flag of <bes action>": {
      "key": "reapply flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "reapply flag",
      "pluralPhrase": "reapply flags",
      "directObjectType": "bes action"
    },
    "reapplication limit of <bes action>": {
      "key": "reapplication limit of <bes action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "reapplication limit",
      "pluralPhrase": "reapplication limits",
      "directObjectType": "bes action"
    },
    "reapplication interval of <bes action>": {
      "key": "reapplication interval of <bes action>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "reapplication interval",
      "pluralPhrase": "reapplication intervals",
      "directObjectType": "bes action"
    },
    "precache flag of <bes action>": {
      "key": "precache flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "precache flag",
      "pluralPhrase": "precache flags",
      "directObjectType": "bes action"
    },
    "postaction postpone delay of <bes action>": {
      "key": "postaction postpone delay of <bes action>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "postaction postpone delay",
      "pluralPhrase": "postaction postpone delays",
      "directObjectType": "bes action"
    },
    "postaction message title of <bes action>": {
      "key": "postaction message title of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "postaction message title",
      "pluralPhrase": "postaction message titles",
      "directObjectType": "bes action"
    },
    "postaction message text of <bes action>": {
      "key": "postaction message text of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "postaction message text",
      "pluralPhrase": "postaction message texts",
      "directObjectType": "bes action"
    },
    "postaction force delay of <bes action>": {
      "key": "postaction force delay of <bes action>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "postaction force delay",
      "pluralPhrase": "postaction force delays",
      "directObjectType": "bes action"
    },
    "postaction allow cancel flag of <bes action>": {
      "key": "postaction allow cancel flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "postaction allow cancel flag",
      "pluralPhrase": "postaction allow cancel flags",
      "directObjectType": "bes action"
    },
    "parent group of <bes action>": {
      "key": "parent group of <bes action>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "parent group",
      "pluralPhrase": "parent groups",
      "directObjectType": "bes action"
    },
    "parameter of <bes action>": {
      "key": "parameter of <bes action>",
      "type": "property",
      "resultType": "bes action parameter",
      "singularPhrase": "parameter",
      "pluralPhrase": "parameters",
      "directObjectType": "bes action"
    },
    "parameter <string> of <bes action>": {
      "key": "parameter <string> of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "parameter",
      "pluralPhrase": "parameters",
      "indexType": "string",
      "directObjectType": "bes action"
    },
    "operator site flag of <bes action>": {
      "key": "operator site flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "operator site flag",
      "pluralPhrase": "operator site flags",
      "directObjectType": "bes action"
    },
    "offer flag of <bes action>": {
      "key": "offer flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "offer flag",
      "pluralPhrase": "offer flags",
      "directObjectType": "bes action"
    },
    "offer description html of <bes action>": {
      "key": "offer description html of <bes action>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "offer description html",
      "pluralPhrase": "offer description htmls",
      "directObjectType": "bes action"
    },
    "offer category of <bes action>": {
      "key": "offer category of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "offer category",
      "pluralPhrase": "offer categories",
      "directObjectType": "bes action"
    },
    "name of <bes action>": {
      "key": "name of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes action"
    },
    "multiple flag of <bes action>": {
      "key": "multiple flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "multiple flag",
      "pluralPhrase": "multiple flags",
      "directObjectType": "bes action"
    },
    "middle action of <bes action>": {
      "key": "middle action of <bes action>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "middle action",
      "pluralPhrase": "middle actions",
      "directObjectType": "bes action"
    },
    "message title of <bes action>": {
      "key": "message title of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "message title",
      "pluralPhrase": "message titles",
      "directObjectType": "bes action"
    },
    "message timeout delay of <bes action>": {
      "key": "message timeout delay of <bes action>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "message timeout delay",
      "pluralPhrase": "message timeout delays",
      "directObjectType": "bes action"
    },
    "message text of <bes action>": {
      "key": "message text of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "message text",
      "pluralPhrase": "message texts",
      "directObjectType": "bes action"
    },
    "message postpone delay of <bes action>": {
      "key": "message postpone delay of <bes action>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "message postpone delay",
      "pluralPhrase": "message postpone delays",
      "directObjectType": "bes action"
    },
    "message allow cancel flag of <bes action>": {
      "key": "message allow cancel flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "message allow cancel flag",
      "pluralPhrase": "message allow cancel flags",
      "directObjectType": "bes action"
    },
    "message action button flag of <bes action>": {
      "key": "message action button flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "message action button flag",
      "pluralPhrase": "message action button flags",
      "directObjectType": "bes action"
    },
    "member action set of <bes action>": {
      "key": "member action set of <bes action>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "member action set",
      "pluralPhrase": "member action sets",
      "directObjectType": "bes action"
    },
    "member action of <bes action>": {
      "key": "member action of <bes action>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "member action",
      "pluralPhrase": "member actions",
      "directObjectType": "bes action"
    },
    "management rights flag of <bes action>": {
      "key": "management rights flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "management rights flag",
      "pluralPhrase": "management rights flags",
      "directObjectType": "bes action"
    },
    "link of <bes action>": {
      "key": "link of <bes action>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "directObjectType": "bes action"
    },
    "link href of <bes action>": {
      "key": "link href of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "link href",
      "pluralPhrase": "link hrefs",
      "directObjectType": "bes action"
    },
    "link <string> of <bes action>": {
      "key": "link <string> of <bes action>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "string",
      "directObjectType": "bes action"
    },
    "link <html> of <bes action>": {
      "key": "link <html> of <bes action>",
      "type": "property",
      "resultType": "html",
      "singularPhrase": "link",
      "pluralPhrase": "links",
      "indexType": "html",
      "directObjectType": "bes action"
    },
    "issuer of <bes action>": {
      "key": "issuer of <bes action>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "issuer",
      "pluralPhrase": "issuers",
      "directObjectType": "bes action"
    },
    "id of <bes action>": {
      "key": "id of <bes action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes action"
    },
    "hidden flag of <bes action>": {
      "key": "hidden flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "hidden flag",
      "pluralPhrase": "hidden flags",
      "directObjectType": "bes action"
    },
    "group member flag of <bes action>": {
      "key": "group member flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "group member flag",
      "pluralPhrase": "group member flags",
      "directObjectType": "bes action"
    },
    "expiration time of <bes action>": {
      "key": "expiration time of <bes action>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "expiration time",
      "pluralPhrase": "expiration times",
      "directObjectType": "bes action"
    },
    "expiration flag of <bes action>": {
      "key": "expiration flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "expiration flag",
      "pluralPhrase": "expiration flags",
      "directObjectType": "bes action"
    },
    "end time_of_day of <bes action>": {
      "key": "end time_of_day of <bes action>",
      "type": "property",
      "resultType": "time of day",
      "singularPhrase": "end time_of_day",
      "pluralPhrase": "end times_of_day",
      "directObjectType": "bes action"
    },
    "end flag of <bes action>": {
      "key": "end flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "end flag",
      "pluralPhrase": "end flags",
      "directObjectType": "bes action"
    },
    "end date of <bes action>": {
      "key": "end date of <bes action>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "end date",
      "pluralPhrase": "end dates",
      "directObjectType": "bes action"
    },
    "domain of <bes action>": {
      "key": "domain of <bes action>",
      "type": "property",
      "resultType": "bes domain",
      "singularPhrase": "domain",
      "pluralPhrase": "domains",
      "directObjectType": "bes action"
    },
    "date range start of <bes action>": {
      "key": "date range start of <bes action>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "date range start",
      "pluralPhrase": "date range starts",
      "directObjectType": "bes action"
    },
    "date range end of <bes action>": {
      "key": "date range end of <bes action>",
      "type": "property",
      "resultType": "date",
      "singularPhrase": "date range end",
      "pluralPhrase": "date range ends",
      "directObjectType": "bes action"
    },
    "database name of <bes action>": {
      "key": "database name of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "database name",
      "pluralPhrase": "database names",
      "directObjectType": "bes action"
    },
    "database id of <bes action>": {
      "key": "database id of <bes action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "database id",
      "pluralPhrase": "database ids",
      "directObjectType": "bes action"
    },
    "custom success relevance of <bes action>": {
      "key": "custom success relevance of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "custom success relevance",
      "pluralPhrase": "custom success relevances",
      "directObjectType": "bes action"
    },
    "continue on errors flag of <bes action>": {
      "key": "continue on errors flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "continue on errors flag",
      "pluralPhrase": "continue on errors flags",
      "directObjectType": "bes action"
    },
    "constrain by property value of <bes action>": {
      "key": "constrain by property value of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "constrain by property value",
      "pluralPhrase": "constrain by property values",
      "directObjectType": "bes action"
    },
    "constrain by property relation of <bes action>": {
      "key": "constrain by property relation of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "constrain by property relation",
      "pluralPhrase": "constrain by property relations",
      "directObjectType": "bes action"
    },
    "constrain by property name of <bes action>": {
      "key": "constrain by property name of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "constrain by property name",
      "pluralPhrase": "constrain by property names",
      "directObjectType": "bes action"
    },
    "computer group flag of <bes action>": {
      "key": "computer group flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "computer group flag",
      "pluralPhrase": "computer group flags",
      "directObjectType": "bes action"
    },
    "comment of <bes action>": {
      "key": "comment of <bes action>",
      "type": "property",
      "resultType": "bes comment",
      "singularPhrase": "comment",
      "pluralPhrase": "comments",
      "directObjectType": "bes action"
    },
    "applicability relevance of <bes action>": {
      "key": "applicability relevance of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "applicability relevance",
      "pluralPhrase": "applicability relevances",
      "directObjectType": "bes action"
    },
    "action script type of <bes action>": {
      "key": "action script type of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "action script type",
      "pluralPhrase": "action script types",
      "directObjectType": "bes action"
    },
    "action script of <bes action>": {
      "key": "action script of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "action script",
      "pluralPhrase": "action scripts",
      "directObjectType": "bes action"
    },
    "action dependency of <bes action>": {
      "key": "action dependency of <bes action>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "action dependency",
      "pluralPhrase": "action dependencies",
      "directObjectType": "bes action"
    },
    "<bes action> as xml": {
      "key": "<bes action> as xml",
      "type": "cast",
      "resultType": "utf8 string",
      "argType": "bes action",
      "phrase": "xml"
    },
    "<bes action> = <bes action>": {
      "key": "<bes action> = <bes action>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes action",
      "op": "=",
      "rightType": "bes action"
    },
    "<bes action set> contains <bes action>": {
      "key": "<bes action set> contains <bes action>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes action set",
      "op": "contains",
      "rightType": "bes action"
    },
    "wake on lan subnet cidr string": {
      "key": "wake on lan subnet cidr string",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "wake on lan subnet cidr string",
      "pluralPhrase": "wake on lan subnet cidr strings"
    },
    "user": {
      "key": "user",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "user",
      "pluralPhrase": "users"
    },
    "user <string>": {
      "key": "user <string>",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "user",
      "pluralPhrase": "users",
      "indexType": "string"
    },
    "system ui language": {
      "key": "system ui language",
      "type": "property",
      "resultType": "language",
      "singularPhrase": "system ui language",
      "pluralPhrase": "system ui languages"
    },
    "system locale": {
      "key": "system locale",
      "type": "property",
      "resultType": "language",
      "singularPhrase": "system locale",
      "pluralPhrase": "system locales"
    },
    "system language": {
      "key": "system language",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "system language",
      "pluralPhrase": "system languages"
    },
    "system folder": {
      "key": "system folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "system folder",
      "pluralPhrase": "system folders"
    },
    "symlink <symlink>": {
      "key": "symlink <symlink>",
      "type": "property",
      "resultType": "symlink",
      "singularPhrase": "symlink",
      "pluralPhrase": "symlinks",
      "indexType": "symlink"
    },
    "symlink <string>": {
      "key": "symlink <string>",
      "type": "property",
      "resultType": "symlink",
      "singularPhrase": "symlink",
      "pluralPhrase": "symlinks",
      "indexType": "string"
    },
    "symlink <filesystem object>": {
      "key": "symlink <filesystem object>",
      "type": "property",
      "resultType": "symlink",
      "singularPhrase": "symlink",
      "pluralPhrase": "symlinks",
      "indexType": "filesystem object"
    },
    "swap": {
      "key": "swap",
      "type": "property",
      "resultType": "swap",
      "singularPhrase": "swap",
      "pluralPhrase": "swaps"
    },
    "strverscmp version <string>": {
      "key": "strverscmp version <string>",
      "type": "property",
      "resultType": "strverscmp version",
      "singularPhrase": "strverscmp version",
      "pluralPhrase": "strverscmp versions",
      "indexType": "string"
    },
    "socket file <symlink>": {
      "key": "socket file <symlink>",
      "type": "property",
      "resultType": "socket file",
      "singularPhrase": "socket file",
      "pluralPhrase": "socket files",
      "indexType": "symlink"
    },
    "socket file <string>": {
      "key": "socket file <string>",
      "type": "property",
      "resultType": "socket file",
      "singularPhrase": "socket file",
      "pluralPhrase": "socket files",
      "indexType": "string"
    },
    "socket file <filesystem object>": {
      "key": "socket file <filesystem object>",
      "type": "property",
      "resultType": "socket file",
      "singularPhrase": "socket file",
      "pluralPhrase": "socket files",
      "indexType": "filesystem object"
    },
    "smbios": {
      "key": "smbios",
      "type": "property",
      "resultType": "smbios",
      "singularPhrase": "smbios",
      "pluralPhrase": "smbioses"
    },
    "site": {
      "key": "site",
      "type": "property",
      "resultType": "site",
      "singularPhrase": "site",
      "pluralPhrase": "sites"
    },
    "site <string>": {
      "key": "site <string>",
      "type": "property",
      "resultType": "site",
      "singularPhrase": "site",
      "pluralPhrase": "sites",
      "indexType": "string"
    },
    "short rpm package version record <short rpm package version record>": {
      "key": "short rpm package version record <short rpm package version record>",
      "type": "property",
      "resultType": "short rpm package version record",
      "singularPhrase": "short rpm package version record",
      "pluralPhrase": "short rpm package version records",
      "indexType": "short rpm package version record"
    },
    "short rpm package version record <rpm package version record>": {
      "key": "short rpm package version record <rpm package version record>",
      "type": "property",
      "resultType": "short rpm package version record",
      "singularPhrase": "short rpm package version record",
      "pluralPhrase": "short rpm package version records",
      "indexType": "rpm package version record"
    },
    "service <string>": {
      "key": "service <string>",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "service",
      "pluralPhrase": "services",
      "indexType": "string"
    },
    "selected server": {
      "key": "selected server",
      "type": "property",
      "resultType": "selected server",
      "singularPhrase": "selected server",
      "pluralPhrase": "selected servers"
    },
    "running service <string>": {
      "key": "running service <string>",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "running service",
      "pluralPhrase": "running services",
      "indexType": "string"
    },
    "running application": {
      "key": "running application",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "running application",
      "pluralPhrase": "running applications"
    },
    "running application <string>": {
      "key": "running application <string>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "running application",
      "pluralPhrase": "running applications",
      "indexType": "string"
    },
    "runlevel": {
      "key": "runlevel",
      "type": "property",
      "resultType": "runlevel",
      "singularPhrase": "runlevel",
      "pluralPhrase": "runlevels"
    },
    "rpm": {
      "key": "rpm",
      "type": "property",
      "resultType": "rpmdatabase",
      "singularPhrase": "rpm",
      "pluralPhrase": "rpms"
    },
    "rpm package version record <string>": {
      "key": "rpm package version record <string>",
      "type": "property",
      "resultType": "rpm package version record",
      "singularPhrase": "rpm package version record",
      "pluralPhrase": "rpm package version records",
      "indexType": "string"
    },
    "rpm package version record <short rpm package version record>": {
      "key": "rpm package version record <short rpm package version record>",
      "type": "property",
      "resultType": "rpm package version record",
      "singularPhrase": "rpm package version record",
      "pluralPhrase": "rpm package version records",
      "indexType": "short rpm package version record"
    },
    "rpm package version record <rpm package version record>": {
      "key": "rpm package version record <rpm package version record>",
      "type": "property",
      "resultType": "rpm package version record",
      "singularPhrase": "rpm package version record",
      "pluralPhrase": "rpm package version records",
      "indexType": "rpm package version record"
    },
    "rpm package version <string>": {
      "key": "rpm package version <string>",
      "type": "property",
      "resultType": "rpm package version",
      "singularPhrase": "rpm package version",
      "pluralPhrase": "rpm package versions",
      "indexType": "string"
    },
    "rpm package version <rpm package version>": {
      "key": "rpm package version <rpm package version>",
      "type": "property",
      "resultType": "rpm package version",
      "singularPhrase": "rpm package version",
      "pluralPhrase": "rpm package versions",
      "indexType": "rpm package version"
    },
    "rpm package release <string>": {
      "key": "rpm package release <string>",
      "type": "property",
      "resultType": "rpm package release",
      "singularPhrase": "rpm package release",
      "pluralPhrase": "rpm package releases",
      "indexType": "string"
    },
    "rpm package release <rpm package release>": {
      "key": "rpm package release <rpm package release>",
      "type": "property",
      "resultType": "rpm package release",
      "singularPhrase": "rpm package release",
      "pluralPhrase": "rpm package releases",
      "indexType": "rpm package release"
    },
    "rpm <string>": {
      "key": "rpm <string>",
      "type": "property",
      "resultType": "rpmdatabase",
      "singularPhrase": "rpm",
      "pluralPhrase": "rpms",
      "indexType": "string"
    },
    "root server": {
      "key": "root server",
      "type": "property",
      "resultType": "root server",
      "singularPhrase": "root server",
      "pluralPhrase": "root servers"
    },
    "root folder": {
      "key": "root folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "root folder",
      "pluralPhrase": "root folders"
    },
    "relay service": {
      "key": "relay service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "relay service",
      "pluralPhrase": "relay services"
    },
    "registration server": {
      "key": "registration server",
      "type": "property",
      "resultType": "registration server",
      "singularPhrase": "registration server",
      "pluralPhrase": "registration servers"
    },
    "recent application": {
      "key": "recent application",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "recent application",
      "pluralPhrase": "recent applications"
    },
    "recent application <string>": {
      "key": "recent application <string>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "recent application",
      "pluralPhrase": "recent applications",
      "indexType": "string"
    },
    "random access memory": {
      "key": "random access memory",
      "type": "property",
      "resultType": "ram",
      "singularPhrase": "random access memory",
      "pluralPhrase": "random access memories"
    },
    "ram": {
      "key": "ram",
      "type": "property",
      "resultType": "ram",
      "singularPhrase": "ram",
      "pluralPhrase": "rams"
    },
    "processor": {
      "key": "processor",
      "type": "property",
      "resultType": "processor",
      "singularPhrase": "processor",
      "pluralPhrase": "processors"
    },
    "processor <integer>": {
      "key": "processor <integer>",
      "type": "property",
      "resultType": "processor",
      "singularPhrase": "processor",
      "pluralPhrase": "processors",
      "indexType": "integer"
    },
    "process": {
      "key": "process",
      "type": "property",
      "resultType": "process",
      "singularPhrase": "process",
      "pluralPhrase": "processes"
    },
    "process <string>": {
      "key": "process <string>",
      "type": "property",
      "resultType": "process",
      "singularPhrase": "process",
      "pluralPhrase": "processes",
      "indexType": "string"
    },
    "process <integer>": {
      "key": "process <integer>",
      "type": "property",
      "resultType": "process",
      "singularPhrase": "process",
      "pluralPhrase": "processes",
      "indexType": "integer"
    },
    "power level": {
      "key": "power level",
      "type": "property",
      "resultType": "power level",
      "singularPhrase": "power level",
      "pluralPhrase": "power levels"
    },
    "pending restart": {
      "key": "pending restart",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "pending restart",
      "pluralPhrase": "pending restarts"
    },
    "pending restart name": {
      "key": "pending restart name",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "pending restart name",
      "pluralPhrase": "pending restart names"
    },
    "pending restart <string>": {
      "key": "pending restart <string>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "pending restart",
      "pluralPhrase": "pending restarts",
      "indexType": "string"
    },
    "pending login": {
      "key": "pending login",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "pending login",
      "pluralPhrase": "pending logins"
    },
    "parameter <string>": {
      "key": "parameter <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "parameter",
      "pluralPhrase": "parameters",
      "indexType": "string"
    },
    "operating system": {
      "key": "operating system",
      "type": "property",
      "resultType": "operating system",
      "singularPhrase": "operating system",
      "pluralPhrase": "operating systems"
    },
    "network": {
      "key": "network",
      "type": "property",
      "resultType": "network",
      "singularPhrase": "network",
      "pluralPhrase": "networks"
    },
    "main processor": {
      "key": "main processor",
      "type": "property",
      "resultType": "processor",
      "singularPhrase": "main processor",
      "pluralPhrase": "main processors"
    },
    "main gather service": {
      "key": "main gather service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "main gather service",
      "pluralPhrase": "main gather services"
    },
    "last relay select time": {
      "key": "last relay select time",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last relay select time",
      "pluralPhrase": "last relay select times"
    },
    "hostname": {
      "key": "hostname",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "hostname",
      "pluralPhrase": "hostnames"
    },
    "host name": {
      "key": "host name",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "host name",
      "pluralPhrase": "host names"
    },
    "folder <symlink>": {
      "key": "folder <symlink>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "folder",
      "pluralPhrase": "folders",
      "indexType": "symlink"
    },
    "folder <string>": {
      "key": "folder <string>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "folder",
      "pluralPhrase": "folders",
      "indexType": "string"
    },
    "filesystem": {
      "key": "filesystem",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "filesystem",
      "pluralPhrase": "filesystems"
    },
    "filesystem <string>": {
      "key": "filesystem <string>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "filesystem",
      "pluralPhrase": "filesystems",
      "indexType": "string"
    },
    "file <symlink>": {
      "key": "file <symlink>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "file",
      "pluralPhrase": "files",
      "indexType": "symlink"
    },
    "file <string>": {
      "key": "file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "file",
      "pluralPhrase": "files",
      "indexType": "string"
    },
    "fifo file <symlink>": {
      "key": "fifo file <symlink>",
      "type": "property",
      "resultType": "fifo file",
      "singularPhrase": "fifo file",
      "pluralPhrase": "fifo files",
      "indexType": "symlink"
    },
    "fifo file <string>": {
      "key": "fifo file <string>",
      "type": "property",
      "resultType": "fifo file",
      "singularPhrase": "fifo file",
      "pluralPhrase": "fifo files",
      "indexType": "string"
    },
    "fifo file <filesystem object>": {
      "key": "fifo file <filesystem object>",
      "type": "property",
      "resultType": "fifo file",
      "singularPhrase": "fifo file",
      "pluralPhrase": "fifo files",
      "indexType": "filesystem object"
    },
    "execution <string>": {
      "key": "execution <string>",
      "type": "property",
      "resultType": "execution",
      "singularPhrase": "execution",
      "pluralPhrase": "executions",
      "indexType": "string"
    },
    "environment": {
      "key": "environment",
      "type": "property",
      "resultType": "environment",
      "singularPhrase": "environment",
      "pluralPhrase": "environments"
    },
    "drive": {
      "key": "drive",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "drive",
      "pluralPhrase": "drives"
    },
    "drive <string>": {
      "key": "drive <string>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "drive",
      "pluralPhrase": "drives",
      "indexType": "string"
    },
    "download storage folder": {
      "key": "download storage folder",
      "type": "property",
      "resultType": "download storage folder",
      "singularPhrase": "download storage folder",
      "pluralPhrase": "download storage folders"
    },
    "download server": {
      "key": "download server",
      "type": "property",
      "resultType": "download server",
      "singularPhrase": "download server",
      "pluralPhrase": "download servers"
    },
    "download path <string>": {
      "key": "download path <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "download path",
      "pluralPhrase": "download paths",
      "indexType": "string"
    },
    "download folder": {
      "key": "download folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "download folder",
      "pluralPhrase": "download folders"
    },
    "download file <string>": {
      "key": "download file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "download file",
      "pluralPhrase": "download files",
      "indexType": "string"
    },
    "domainname": {
      "key": "domainname",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "domainname",
      "pluralPhrase": "domainnames"
    },
    "domain name": {
      "key": "domain name",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "domain name",
      "pluralPhrase": "domain names"
    },
    "dns name": {
      "key": "dns name",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "dns name",
      "pluralPhrase": "dns names"
    },
    "dmi": {
      "key": "dmi",
      "type": "property",
      "resultType": "dmi",
      "singularPhrase": "dmi",
      "pluralPhrase": "dmis"
    },
    "device file <symlink>": {
      "key": "device file <symlink>",
      "type": "property",
      "resultType": "device file",
      "singularPhrase": "device file",
      "pluralPhrase": "device files",
      "indexType": "symlink"
    },
    "device file <string>": {
      "key": "device file <string>",
      "type": "property",
      "resultType": "device file",
      "singularPhrase": "device file",
      "pluralPhrase": "device files",
      "indexType": "string"
    },
    "device file <filesystem object>": {
      "key": "device file <filesystem object>",
      "type": "property",
      "resultType": "device file",
      "singularPhrase": "device file",
      "pluralPhrase": "device files",
      "indexType": "filesystem object"
    },
    "default web browser": {
      "key": "default web browser",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "default web browser",
      "pluralPhrase": "default web browsers"
    },
    "custom site subscription effective date <string>": {
      "key": "custom site subscription effective date <string>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "custom site subscription effective date",
      "pluralPhrase": "custom site subscription effective dates",
      "indexType": "string"
    },
    "current user": {
      "key": "current user",
      "type": "property",
      "resultType": "logged on user",
      "singularPhrase": "current user",
      "pluralPhrase": "current users"
    },
    "current site": {
      "key": "current site",
      "type": "property",
      "resultType": "site",
      "singularPhrase": "current site",
      "pluralPhrase": "current sites"
    },
    "current relay": {
      "key": "current relay",
      "type": "property",
      "resultType": "current relay",
      "singularPhrase": "current relay",
      "pluralPhrase": "current relays"
    },
    "computer name": {
      "key": "computer name",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "computer name",
      "pluralPhrase": "computer names"
    },
    "computer id": {
      "key": "computer id",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "computer id",
      "pluralPhrase": "computer ids"
    },
    "client": {
      "key": "client",
      "type": "property",
      "resultType": "client",
      "singularPhrase": "client",
      "pluralPhrase": "clients"
    },
    "client cryptography": {
      "key": "client cryptography",
      "type": "property",
      "resultType": "client_cryptography",
      "singularPhrase": "client cryptography",
      "pluralPhrase": "client cryptographies"
    },
    "capability <string>": {
      "key": "capability <string>",
      "type": "property",
      "resultType": "capability",
      "singularPhrase": "capability",
      "pluralPhrase": "capabilities",
      "indexType": "string"
    },
    "bios": {
      "key": "bios",
      "type": "property",
      "resultType": "bios",
      "singularPhrase": "bios",
      "pluralPhrase": "bioses"
    },
    "application usage summary": {
      "key": "application usage summary",
      "type": "property",
      "resultType": "application usage summary",
      "singularPhrase": "application usage summary",
      "pluralPhrase": "application usage summaries"
    },
    "application usage summary <string>": {
      "key": "application usage summary <string>",
      "type": "property",
      "resultType": "application usage summary",
      "singularPhrase": "application usage summary",
      "pluralPhrase": "application usage summaries",
      "indexType": "string"
    },
    "application usage <string>": {
      "key": "application usage <string>",
      "type": "property",
      "resultType": "timed( time range, integer )",
      "singularPhrase": "application usage",
      "pluralPhrase": "application usages",
      "indexType": "string"
    },
    "application <string>": {
      "key": "application <string>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "application",
      "pluralPhrase": "applications",
      "indexType": "string"
    },
    "apparent registration server time": {
      "key": "apparent registration server time",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "apparent registration server time",
      "pluralPhrase": "apparent registration server times"
    },
    "analysis": {
      "key": "analysis",
      "type": "property",
      "resultType": "analysis",
      "singularPhrase": "analysis",
      "pluralPhrase": "analysiss"
    },
    "active action": {
      "key": "active action",
      "type": "property",
      "resultType": "action",
      "singularPhrase": "active action",
      "pluralPhrase": "active actions"
    },
    "action": {
      "key": "action",
      "type": "property",
      "resultType": "action",
      "singularPhrase": "action",
      "pluralPhrase": "actions"
    },
    "action lock state": {
      "key": "action lock state",
      "type": "property",
      "resultType": "action lock state",
      "singularPhrase": "action lock state",
      "pluralPhrase": "action lock states"
    },
    "action <integer>": {
      "key": "action <integer>",
      "type": "property",
      "resultType": "action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "indexType": "integer"
    },
    "tty of <user>": {
      "key": "tty of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "tty",
      "pluralPhrase": "ttys",
      "directObjectType": "user"
    },
    "name of <user>": {
      "key": "name of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "user"
    },
    "value of <symlink>": {
      "key": "value of <symlink>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "symlink"
    },
    "value accessible of <symlink>": {
      "key": "value accessible of <symlink>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "value accessible",
      "pluralPhrase": "values accessible",
      "directObjectType": "symlink"
    },
    "user name of <symlink>": {
      "key": "user name of <symlink>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "user name",
      "pluralPhrase": "user names",
      "directObjectType": "symlink"
    },
    "uid of <symlink>": {
      "key": "uid of <symlink>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "uid",
      "pluralPhrase": "uids",
      "directObjectType": "symlink"
    },
    "pathname of <symlink>": {
      "key": "pathname of <symlink>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "pathname",
      "pluralPhrase": "pathnames",
      "directObjectType": "symlink"
    },
    "parent folder of <symlink>": {
      "key": "parent folder of <symlink>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "parent folder",
      "pluralPhrase": "parent folders",
      "directObjectType": "symlink"
    },
    "name of <symlink>": {
      "key": "name of <symlink>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "symlink"
    },
    "modification time of <symlink>": {
      "key": "modification time of <symlink>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "modification time",
      "pluralPhrase": "modification times",
      "directObjectType": "symlink"
    },
    "location of <symlink>": {
      "key": "location of <symlink>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "location",
      "pluralPhrase": "locations",
      "directObjectType": "symlink"
    },
    "link count of <symlink>": {
      "key": "link count of <symlink>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "link count",
      "pluralPhrase": "link counts",
      "directObjectType": "symlink"
    },
    "group name of <symlink>": {
      "key": "group name of <symlink>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "group name",
      "pluralPhrase": "group names",
      "directObjectType": "symlink"
    },
    "gid of <symlink>": {
      "key": "gid of <symlink>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "gid",
      "pluralPhrase": "gids",
      "directObjectType": "symlink"
    },
    "filesystem of <symlink>": {
      "key": "filesystem of <symlink>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "filesystem",
      "pluralPhrase": "filesystems",
      "directObjectType": "symlink"
    },
    "drive of <symlink>": {
      "key": "drive of <symlink>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "drive",
      "pluralPhrase": "drives",
      "directObjectType": "symlink"
    },
    "change time of <symlink>": {
      "key": "change time of <symlink>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "change time",
      "pluralPhrase": "change times",
      "directObjectType": "symlink"
    },
    "ancestor of <symlink>": {
      "key": "ancestor of <symlink>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "ancestor",
      "pluralPhrase": "ancestors",
      "directObjectType": "symlink"
    },
    "accessed time of <symlink>": {
      "key": "accessed time of <symlink>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "accessed time",
      "pluralPhrase": "accessed times",
      "directObjectType": "symlink"
    },
    "<symlink> as symlink": {
      "key": "<symlink> as symlink",
      "type": "cast",
      "resultType": "symlink",
      "argType": "symlink",
      "phrase": "symlink"
    },
    "<symlink> as string": {
      "key": "<symlink> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "symlink",
      "phrase": "string"
    },
    "<symlink> as socket file": {
      "key": "<symlink> as socket file",
      "type": "cast",
      "resultType": "socket file",
      "argType": "symlink",
      "phrase": "socket file"
    },
    "<symlink> as folder": {
      "key": "<symlink> as folder",
      "type": "cast",
      "resultType": "folder",
      "argType": "symlink",
      "phrase": "folder"
    },
    "<symlink> as file": {
      "key": "<symlink> as file",
      "type": "cast",
      "resultType": "file",
      "argType": "symlink",
      "phrase": "file"
    },
    "<symlink> as fifo file": {
      "key": "<symlink> as fifo file",
      "type": "cast",
      "resultType": "fifo file",
      "argType": "symlink",
      "phrase": "fifo file"
    },
    "<symlink> as device file": {
      "key": "<symlink> as device file",
      "type": "cast",
      "resultType": "device file",
      "argType": "symlink",
      "phrase": "device file"
    },
    "used amount of <swap>": {
      "key": "used amount of <swap>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "used amount",
      "pluralPhrase": "used amounts",
      "directObjectType": "swap"
    },
    "total amount of <swap>": {
      "key": "total amount of <swap>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total amount",
      "pluralPhrase": "total amounts",
      "directObjectType": "swap"
    },
    "size of <swap>": {
      "key": "size of <swap>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "swap"
    },
    "free amount of <swap>": {
      "key": "free amount of <swap>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free amount",
      "pluralPhrase": "free amounts",
      "directObjectType": "swap"
    },
    "<strverscmp version> = <strverscmp version>": {
      "key": "<strverscmp version> = <strverscmp version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "strverscmp version",
      "op": "=",
      "rightType": "strverscmp version"
    },
    "<strverscmp version> <= <strverscmp version>": {
      "key": "<strverscmp version> <= <strverscmp version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "strverscmp version",
      "op": "<=",
      "rightType": "strverscmp version"
    },
    "<strverscmp version> < <strverscmp version>": {
      "key": "<strverscmp version> < <strverscmp version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "strverscmp version",
      "op": "<",
      "rightType": "strverscmp version"
    },
    "<strverscmp version> = <string>": {
      "key": "<strverscmp version> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "strverscmp version",
      "op": "=",
      "rightType": "string"
    },
    "<strverscmp version> <= <string>": {
      "key": "<strverscmp version> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "strverscmp version",
      "op": "<=",
      "rightType": "string"
    },
    "<strverscmp version> < <string>": {
      "key": "<strverscmp version> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "strverscmp version",
      "op": "<",
      "rightType": "string"
    },
    "<string> as strverscmp version": {
      "key": "<string> as strverscmp version",
      "type": "cast",
      "resultType": "strverscmp version",
      "argType": "string",
      "phrase": "strverscmp version"
    },
    "<string> = <strverscmp version>": {
      "key": "<string> = <strverscmp version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "strverscmp version"
    },
    "<string> <= <strverscmp version>": {
      "key": "<string> <= <strverscmp version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "strverscmp version"
    },
    "<string> < <strverscmp version>": {
      "key": "<string> < <strverscmp version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "strverscmp version"
    },
    "filesystem of <socket file>": {
      "key": "filesystem of <socket file>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "filesystem",
      "pluralPhrase": "filesystems",
      "directObjectType": "socket file"
    },
    "drive of <socket file>": {
      "key": "drive of <socket file>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "drive",
      "pluralPhrase": "drives",
      "directObjectType": "socket file"
    },
    "type of <smbios value>": {
      "key": "type of <smbios value>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "smbios value"
    },
    "structure of <smbios value>": {
      "key": "structure of <smbios value>",
      "type": "property",
      "resultType": "smbios structure",
      "singularPhrase": "structure",
      "pluralPhrase": "structures",
      "directObjectType": "smbios value"
    },
    "offset of <smbios value>": {
      "key": "offset of <smbios value>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "offset",
      "pluralPhrase": "offsets",
      "directObjectType": "smbios value"
    },
    "name of <smbios value>": {
      "key": "name of <smbios value>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "smbios value"
    },
    "<smbios value> as string": {
      "key": "<smbios value> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "smbios value",
      "phrase": "string"
    },
    "value of <smbios structure>": {
      "key": "value of <smbios structure>",
      "type": "property",
      "resultType": "smbios value",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "smbios structure"
    },
    "value <string> of <smbios structure>": {
      "key": "value <string> of <smbios structure>",
      "type": "property",
      "resultType": "smbios value",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "indexType": "string",
      "directObjectType": "smbios structure"
    },
    "type of <smbios structure>": {
      "key": "type of <smbios structure>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "smbios structure"
    },
    "string value <string> of <smbios structure>": {
      "key": "string value <string> of <smbios structure>",
      "type": "property",
      "resultType": "smbios value",
      "singularPhrase": "string value",
      "pluralPhrase": "string values",
      "indexType": "string",
      "directObjectType": "smbios structure"
    },
    "string <string> of <smbios structure>": {
      "key": "string <string> of <smbios structure>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "string",
      "pluralPhrase": "strings",
      "indexType": "string",
      "directObjectType": "smbios structure"
    },
    "name of <smbios structure>": {
      "key": "name of <smbios structure>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "smbios structure"
    },
    "length of <smbios structure>": {
      "key": "length of <smbios structure>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "smbios structure"
    },
    "integer value <string> of <smbios structure>": {
      "key": "integer value <string> of <smbios structure>",
      "type": "property",
      "resultType": "smbios value",
      "singularPhrase": "integer value",
      "pluralPhrase": "integer values",
      "indexType": "string",
      "directObjectType": "smbios structure"
    },
    "integer <string> of <smbios structure>": {
      "key": "integer <string> of <smbios structure>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer",
      "pluralPhrase": "integers",
      "indexType": "string",
      "directObjectType": "smbios structure"
    },
    "structure of <smbios>": {
      "key": "structure of <smbios>",
      "type": "property",
      "resultType": "smbios structure",
      "singularPhrase": "structure",
      "pluralPhrase": "structures",
      "directObjectType": "smbios"
    },
    "structure <string> of <smbios>": {
      "key": "structure <string> of <smbios>",
      "type": "property",
      "resultType": "smbios structure",
      "singularPhrase": "structure",
      "pluralPhrase": "structures",
      "indexType": "string",
      "directObjectType": "smbios"
    },
    "member of <site group>": {
      "key": "member of <site group>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "member",
      "pluralPhrase": "members",
      "directObjectType": "site group"
    },
    "id of <site group>": {
      "key": "id of <site group>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "site group"
    },
    "version of <site>": {
      "key": "version of <site>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "site"
    },
    "url of <site>": {
      "key": "url of <site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "url",
      "pluralPhrase": "urls",
      "directObjectType": "site"
    },
    "type of <site>": {
      "key": "type of <site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "site"
    },
    "subscribe time of <site>": {
      "key": "subscribe time of <site>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "subscribe time",
      "pluralPhrase": "subscribe times",
      "directObjectType": "site"
    },
    "site version list of <site>": {
      "key": "site version list of <site>",
      "type": "property",
      "resultType": "site version list",
      "singularPhrase": "site version list",
      "pluralPhrase": "site version lists",
      "directObjectType": "site"
    },
    "site tag of <site>": {
      "key": "site tag of <site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "site tag",
      "pluralPhrase": "site tags",
      "directObjectType": "site"
    },
    "setting of <site>": {
      "key": "setting of <site>",
      "type": "property",
      "resultType": "setting",
      "singularPhrase": "setting",
      "pluralPhrase": "settings",
      "directObjectType": "site"
    },
    "setting <string> of <site>": {
      "key": "setting <string> of <site>",
      "type": "property",
      "resultType": "setting",
      "singularPhrase": "setting",
      "pluralPhrase": "settings",
      "indexType": "string",
      "directObjectType": "site"
    },
    "relevant offer action of <site>": {
      "key": "relevant offer action of <site>",
      "type": "property",
      "resultType": "action",
      "singularPhrase": "relevant offer action",
      "pluralPhrase": "relevant offer actions",
      "directObjectType": "site"
    },
    "relevant fixlet of <site>": {
      "key": "relevant fixlet of <site>",
      "type": "property",
      "resultType": "fixlet",
      "singularPhrase": "relevant fixlet",
      "pluralPhrase": "relevant fixlets",
      "directObjectType": "site"
    },
    "name of <site>": {
      "key": "name of <site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "site"
    },
    "masthead of <site>": {
      "key": "masthead of <site>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "masthead",
      "pluralPhrase": "mastheads",
      "directObjectType": "site"
    },
    "last gather time of <site>": {
      "key": "last gather time of <site>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last gather time",
      "pluralPhrase": "last gather times",
      "directObjectType": "site"
    },
    "group <integer> of <site>": {
      "key": "group <integer> of <site>",
      "type": "property",
      "resultType": "site group",
      "singularPhrase": "group",
      "pluralPhrase": "groups",
      "indexType": "integer",
      "directObjectType": "site"
    },
    "gather schedule time interval of <site>": {
      "key": "gather schedule time interval of <site>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "gather schedule time interval",
      "pluralPhrase": "gather schedule time intervals",
      "directObjectType": "site"
    },
    "gather schedule authority of <site>": {
      "key": "gather schedule authority of <site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "gather schedule authority",
      "pluralPhrase": "gather schedule authoritys",
      "directObjectType": "site"
    },
    "folder of <site>": {
      "key": "folder of <site>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "folder",
      "pluralPhrase": "folders",
      "directObjectType": "site"
    },
    "fixlet of <site>": {
      "key": "fixlet of <site>",
      "type": "property",
      "resultType": "fixlet",
      "singularPhrase": "fixlet",
      "pluralPhrase": "fixlets",
      "directObjectType": "site"
    },
    "client folder of <site>": {
      "key": "client folder of <site>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "client folder",
      "pluralPhrase": "client folders",
      "directObjectType": "site"
    },
    "multiplicity of <short rpm package version record with multiplicity>": {
      "key": "multiplicity of <short rpm package version record with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "short rpm package version record with multiplicity"
    },
    "version of <short rpm package version record>": {
      "key": "version of <short rpm package version record>",
      "type": "property",
      "resultType": "rpm package version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "short rpm package version record"
    },
    "unique value of <short rpm package version record>": {
      "key": "unique value of <short rpm package version record>",
      "type": "property",
      "resultType": "short rpm package version record with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "short rpm package version record"
    },
    "release of <short rpm package version record>": {
      "key": "release of <short rpm package version record>",
      "type": "property",
      "resultType": "rpm package release",
      "singularPhrase": "release",
      "pluralPhrase": "releases",
      "directObjectType": "short rpm package version record"
    },
    "no epoch of <short rpm package version record>": {
      "key": "no epoch of <short rpm package version record>",
      "type": "property",
      "resultType": "short rpm package version record",
      "singularPhrase": "no epoch",
      "pluralPhrase": "no epochs",
      "directObjectType": "short rpm package version record"
    },
    "minimum of <short rpm package version record>": {
      "key": "minimum of <short rpm package version record>",
      "type": "property",
      "resultType": "short rpm package version record",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "short rpm package version record"
    },
    "maximum of <short rpm package version record>": {
      "key": "maximum of <short rpm package version record>",
      "type": "property",
      "resultType": "short rpm package version record",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "short rpm package version record"
    },
    "long form of <short rpm package version record>": {
      "key": "long form of <short rpm package version record>",
      "type": "property",
      "resultType": "rpm package version record",
      "singularPhrase": "long form",
      "pluralPhrase": "long forms",
      "directObjectType": "short rpm package version record"
    },
    "extrema of <short rpm package version record>": {
      "key": "extrema of <short rpm package version record>",
      "type": "property",
      "resultType": "( short rpm package version record, short rpm package version record )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "short rpm package version record"
    },
    "epoch of <short rpm package version record>": {
      "key": "epoch of <short rpm package version record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "epoch",
      "pluralPhrase": "epochs",
      "directObjectType": "short rpm package version record"
    },
    "<short rpm package version record> as string": {
      "key": "<short rpm package version record> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "short rpm package version record",
      "phrase": "string"
    },
    "<short rpm package version record> as short rpm package version record": {
      "key": "<short rpm package version record> as short rpm package version record",
      "type": "cast",
      "resultType": "short rpm package version record",
      "argType": "short rpm package version record",
      "phrase": "short rpm package version record"
    },
    "<short rpm package version record> as rpm package version record": {
      "key": "<short rpm package version record> as rpm package version record",
      "type": "cast",
      "resultType": "rpm package version record",
      "argType": "short rpm package version record",
      "phrase": "rpm package version record"
    },
    "<short rpm package version record> = <short rpm package version record>": {
      "key": "<short rpm package version record> = <short rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "short rpm package version record",
      "op": "=",
      "rightType": "short rpm package version record"
    },
    "<short rpm package version record> <= <short rpm package version record>": {
      "key": "<short rpm package version record> <= <short rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "short rpm package version record",
      "op": "<=",
      "rightType": "short rpm package version record"
    },
    "<short rpm package version record> < <short rpm package version record>": {
      "key": "<short rpm package version record> < <short rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "short rpm package version record",
      "op": "<",
      "rightType": "short rpm package version record"
    },
    "value of <setting>": {
      "key": "value of <setting>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "setting"
    },
    "name of <setting>": {
      "key": "name of <setting>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "setting"
    },
    "enabled of <setting>": {
      "key": "enabled of <setting>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "setting"
    },
    "effective date of <setting>": {
      "key": "effective date of <setting>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "effective date",
      "pluralPhrase": "effective dates",
      "directObjectType": "setting"
    },
    "<setting> as string": {
      "key": "<setting> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "setting",
      "phrase": "string"
    },
    "version of <service>": {
      "key": "version of <service>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "service"
    },
    "state of <service>": {
      "key": "state of <service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "state",
      "pluralPhrase": "states",
      "directObjectType": "service"
    },
    "weight of <selected server>": {
      "key": "weight of <selected server>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "weight",
      "pluralPhrase": "weights",
      "directObjectType": "selected server"
    },
    "priority of <selected server>": {
      "key": "priority of <selected server>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "priority",
      "pluralPhrase": "priorities",
      "directObjectType": "selected server"
    },
    "port number of <selected server>": {
      "key": "port number of <selected server>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "port number",
      "pluralPhrase": "port numbers",
      "directObjectType": "selected server"
    },
    "name of <selected server>": {
      "key": "name of <selected server>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "selected server"
    },
    "ip address of <selected server>": {
      "key": "ip address of <selected server>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "ip address",
      "pluralPhrase": "ip addresses",
      "directObjectType": "selected server"
    },
    "gateway address of <selected server>": {
      "key": "gateway address of <selected server>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "gateway address",
      "pluralPhrase": "gateway addresses",
      "directObjectType": "selected server"
    },
    "gateway address <integer> of <selected server>": {
      "key": "gateway address <integer> of <selected server>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "gateway address",
      "pluralPhrase": "gateway addresses",
      "indexType": "integer",
      "directObjectType": "selected server"
    },
    "full gateway address of <selected server>": {
      "key": "full gateway address of <selected server>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "full gateway address",
      "pluralPhrase": "full gateway addresses",
      "directObjectType": "selected server"
    },
    "distance of <selected server>": {
      "key": "distance of <selected server>",
      "type": "property",
      "resultType": "integer range",
      "singularPhrase": "distance",
      "pluralPhrase": "distances",
      "directObjectType": "selected server"
    },
    "competition weight of <selected server>": {
      "key": "competition weight of <selected server>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "competition weight",
      "pluralPhrase": "competition weights",
      "directObjectType": "selected server"
    },
    "competition size of <selected server>": {
      "key": "competition size of <selected server>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "competition size",
      "pluralPhrase": "competition sizes",
      "directObjectType": "selected server"
    },
    "value of <runlevel>": {
      "key": "value of <runlevel>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "runlevel"
    },
    "previous value of <runlevel>": {
      "key": "previous value of <runlevel>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "previous value",
      "pluralPhrase": "previous values",
      "directObjectType": "runlevel"
    },
    "effective time of <runlevel>": {
      "key": "effective time of <runlevel>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "effective time",
      "pluralPhrase": "effective times",
      "directObjectType": "runlevel"
    },
    "<runlevel> as string": {
      "key": "<runlevel> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "runlevel",
      "phrase": "string"
    },
    "package requiring <capability> of <rpmdatabase>": {
      "key": "package requiring <capability> of <rpmdatabase>",
      "type": "property",
      "resultType": "package",
      "singularPhrase": "package requiring",
      "pluralPhrase": "packages requiring",
      "indexType": "capability",
      "directObjectType": "rpmdatabase"
    },
    "package providing <capability> of <rpmdatabase>": {
      "key": "package providing <capability> of <rpmdatabase>",
      "type": "property",
      "resultType": "package",
      "singularPhrase": "package providing",
      "pluralPhrase": "packages providing",
      "indexType": "capability",
      "directObjectType": "rpmdatabase"
    },
    "package of <rpmdatabase>": {
      "key": "package of <rpmdatabase>",
      "type": "property",
      "resultType": "package",
      "singularPhrase": "package",
      "pluralPhrase": "packages",
      "directObjectType": "rpmdatabase"
    },
    "package installing <capability> of <rpmdatabase>": {
      "key": "package installing <capability> of <rpmdatabase>",
      "type": "property",
      "resultType": "package",
      "singularPhrase": "package installing",
      "pluralPhrase": "packages installing",
      "indexType": "capability",
      "directObjectType": "rpmdatabase"
    },
    "package conflicting with <capability> of <rpmdatabase>": {
      "key": "package conflicting with <capability> of <rpmdatabase>",
      "type": "property",
      "resultType": "package",
      "singularPhrase": "package conflicting with",
      "pluralPhrase": "packages conflicting with",
      "indexType": "capability",
      "directObjectType": "rpmdatabase"
    },
    "package <string> of <rpmdatabase>": {
      "key": "package <string> of <rpmdatabase>",
      "type": "property",
      "resultType": "package",
      "singularPhrase": "package",
      "pluralPhrase": "packages",
      "indexType": "string",
      "directObjectType": "rpmdatabase"
    },
    "installed <string> of <rpmdatabase>": {
      "key": "installed <string> of <rpmdatabase>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "installed",
      "pluralPhrase": "installeds",
      "indexType": "string",
      "directObjectType": "rpmdatabase"
    },
    "capability <string> of <rpmdatabase>": {
      "key": "capability <string> of <rpmdatabase>",
      "type": "property",
      "resultType": "capability",
      "singularPhrase": "capability",
      "pluralPhrase": "capabilities",
      "indexType": "string",
      "directObjectType": "rpmdatabase"
    },
    "multiplicity of <rpm package version with multiplicity>": {
      "key": "multiplicity of <rpm package version with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "rpm package version with multiplicity"
    },
    "multiplicity of <rpm package version record with multiplicity>": {
      "key": "multiplicity of <rpm package version record with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "rpm package version record with multiplicity"
    },
    "version of <rpm package version record>": {
      "key": "version of <rpm package version record>",
      "type": "property",
      "resultType": "rpm package version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "rpm package version record"
    },
    "unique value of <rpm package version record>": {
      "key": "unique value of <rpm package version record>",
      "type": "property",
      "resultType": "rpm package version record with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "rpm package version record"
    },
    "short form of <rpm package version record>": {
      "key": "short form of <rpm package version record>",
      "type": "property",
      "resultType": "short rpm package version record",
      "singularPhrase": "short form",
      "pluralPhrase": "short forms",
      "directObjectType": "rpm package version record"
    },
    "release of <rpm package version record>": {
      "key": "release of <rpm package version record>",
      "type": "property",
      "resultType": "rpm package release",
      "singularPhrase": "release",
      "pluralPhrase": "releases",
      "directObjectType": "rpm package version record"
    },
    "no epoch of <rpm package version record>": {
      "key": "no epoch of <rpm package version record>",
      "type": "property",
      "resultType": "rpm package version record",
      "singularPhrase": "no epoch",
      "pluralPhrase": "no epochs",
      "directObjectType": "rpm package version record"
    },
    "minimum of <rpm package version record>": {
      "key": "minimum of <rpm package version record>",
      "type": "property",
      "resultType": "rpm package version record",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "rpm package version record"
    },
    "maximum of <rpm package version record>": {
      "key": "maximum of <rpm package version record>",
      "type": "property",
      "resultType": "rpm package version record",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "rpm package version record"
    },
    "extrema of <rpm package version record>": {
      "key": "extrema of <rpm package version record>",
      "type": "property",
      "resultType": "( rpm package version record, rpm package version record )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "rpm package version record"
    },
    "epoch of <rpm package version record>": {
      "key": "epoch of <rpm package version record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "epoch",
      "pluralPhrase": "epochs",
      "directObjectType": "rpm package version record"
    },
    "<string> = <rpm package version record>": {
      "key": "<string> = <rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "rpm package version record"
    },
    "<string> <= <rpm package version record>": {
      "key": "<string> <= <rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "rpm package version record"
    },
    "<string> < <rpm package version record>": {
      "key": "<string> < <rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "rpm package version record"
    },
    "<short rpm package version record> = <rpm package version record>": {
      "key": "<short rpm package version record> = <rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "short rpm package version record",
      "op": "=",
      "rightType": "rpm package version record"
    },
    "<short rpm package version record> <= <rpm package version record>": {
      "key": "<short rpm package version record> <= <rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "short rpm package version record",
      "op": "<=",
      "rightType": "rpm package version record"
    },
    "<short rpm package version record> < <rpm package version record>": {
      "key": "<short rpm package version record> < <rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "short rpm package version record",
      "op": "<",
      "rightType": "rpm package version record"
    },
    "<rpm package version record> as string": {
      "key": "<rpm package version record> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "rpm package version record",
      "phrase": "string"
    },
    "<rpm package version record> as short rpm package version record": {
      "key": "<rpm package version record> as short rpm package version record",
      "type": "cast",
      "resultType": "short rpm package version record",
      "argType": "rpm package version record",
      "phrase": "short rpm package version record"
    },
    "<rpm package version record> as rpm package version record": {
      "key": "<rpm package version record> as rpm package version record",
      "type": "cast",
      "resultType": "rpm package version record",
      "argType": "rpm package version record",
      "phrase": "rpm package version record"
    },
    "<rpm package version record> = <string>": {
      "key": "<rpm package version record> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version record",
      "op": "=",
      "rightType": "string"
    },
    "<rpm package version record> = <short rpm package version record>": {
      "key": "<rpm package version record> = <short rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version record",
      "op": "=",
      "rightType": "short rpm package version record"
    },
    "<rpm package version record> = <rpm package version record>": {
      "key": "<rpm package version record> = <rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version record",
      "op": "=",
      "rightType": "rpm package version record"
    },
    "<rpm package version record> <= <string>": {
      "key": "<rpm package version record> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version record",
      "op": "<=",
      "rightType": "string"
    },
    "<rpm package version record> <= <short rpm package version record>": {
      "key": "<rpm package version record> <= <short rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version record",
      "op": "<=",
      "rightType": "short rpm package version record"
    },
    "<rpm package version record> <= <rpm package version record>": {
      "key": "<rpm package version record> <= <rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version record",
      "op": "<=",
      "rightType": "rpm package version record"
    },
    "<rpm package version record> < <string>": {
      "key": "<rpm package version record> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version record",
      "op": "<",
      "rightType": "string"
    },
    "<rpm package version record> < <short rpm package version record>": {
      "key": "<rpm package version record> < <short rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version record",
      "op": "<",
      "rightType": "short rpm package version record"
    },
    "<rpm package version record> < <rpm package version record>": {
      "key": "<rpm package version record> < <rpm package version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version record",
      "op": "<",
      "rightType": "rpm package version record"
    },
    "unique value of <rpm package version>": {
      "key": "unique value of <rpm package version>",
      "type": "property",
      "resultType": "rpm package version with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "rpm package version"
    },
    "minimum of <rpm package version>": {
      "key": "minimum of <rpm package version>",
      "type": "property",
      "resultType": "rpm package version",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "rpm package version"
    },
    "maximum of <rpm package version>": {
      "key": "maximum of <rpm package version>",
      "type": "property",
      "resultType": "rpm package version",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "rpm package version"
    },
    "extrema of <rpm package version>": {
      "key": "extrema of <rpm package version>",
      "type": "property",
      "resultType": "( rpm package version, rpm package version )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "rpm package version"
    },
    "<string> = <rpm package version>": {
      "key": "<string> = <rpm package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "rpm package version"
    },
    "<string> <= <rpm package version>": {
      "key": "<string> <= <rpm package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "rpm package version"
    },
    "<string> < <rpm package version>": {
      "key": "<string> < <rpm package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "rpm package version"
    },
    "<rpm package version> as string": {
      "key": "<rpm package version> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "rpm package version",
      "phrase": "string"
    },
    "<rpm package version> as rpm package version": {
      "key": "<rpm package version> as rpm package version",
      "type": "cast",
      "resultType": "rpm package version",
      "argType": "rpm package version",
      "phrase": "rpm package version"
    },
    "<rpm package version> = <string>": {
      "key": "<rpm package version> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version",
      "op": "=",
      "rightType": "string"
    },
    "<rpm package version> = <rpm package version>": {
      "key": "<rpm package version> = <rpm package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version",
      "op": "=",
      "rightType": "rpm package version"
    },
    "<rpm package version> <= <string>": {
      "key": "<rpm package version> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version",
      "op": "<=",
      "rightType": "string"
    },
    "<rpm package version> <= <rpm package version>": {
      "key": "<rpm package version> <= <rpm package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version",
      "op": "<=",
      "rightType": "rpm package version"
    },
    "<rpm package version> < <string>": {
      "key": "<rpm package version> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version",
      "op": "<",
      "rightType": "string"
    },
    "<rpm package version> < <rpm package version>": {
      "key": "<rpm package version> < <rpm package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package version",
      "op": "<",
      "rightType": "rpm package version"
    },
    "multiplicity of <rpm package release with multiplicity>": {
      "key": "multiplicity of <rpm package release with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "rpm package release with multiplicity"
    },
    "unique value of <rpm package release>": {
      "key": "unique value of <rpm package release>",
      "type": "property",
      "resultType": "rpm package release with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "rpm package release"
    },
    "minimum of <rpm package release>": {
      "key": "minimum of <rpm package release>",
      "type": "property",
      "resultType": "rpm package release",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "rpm package release"
    },
    "maximum of <rpm package release>": {
      "key": "maximum of <rpm package release>",
      "type": "property",
      "resultType": "rpm package release",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "rpm package release"
    },
    "extrema of <rpm package release>": {
      "key": "extrema of <rpm package release>",
      "type": "property",
      "resultType": "( rpm package release, rpm package release )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "rpm package release"
    },
    "<string> = <rpm package release>": {
      "key": "<string> = <rpm package release>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "rpm package release"
    },
    "<string> <= <rpm package release>": {
      "key": "<string> <= <rpm package release>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "rpm package release"
    },
    "<string> < <rpm package release>": {
      "key": "<string> < <rpm package release>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "rpm package release"
    },
    "<rpm package release> as string": {
      "key": "<rpm package release> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "rpm package release",
      "phrase": "string"
    },
    "<rpm package release> as rpm package release": {
      "key": "<rpm package release> as rpm package release",
      "type": "cast",
      "resultType": "rpm package release",
      "argType": "rpm package release",
      "phrase": "rpm package release"
    },
    "<rpm package release> = <string>": {
      "key": "<rpm package release> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package release",
      "op": "=",
      "rightType": "string"
    },
    "<rpm package release> = <rpm package release>": {
      "key": "<rpm package release> = <rpm package release>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package release",
      "op": "=",
      "rightType": "rpm package release"
    },
    "<rpm package release> <= <string>": {
      "key": "<rpm package release> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package release",
      "op": "<=",
      "rightType": "string"
    },
    "<rpm package release> <= <rpm package release>": {
      "key": "<rpm package release> <= <rpm package release>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package release",
      "op": "<=",
      "rightType": "rpm package release"
    },
    "<rpm package release> < <string>": {
      "key": "<rpm package release> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package release",
      "op": "<",
      "rightType": "string"
    },
    "<rpm package release> < <rpm package release>": {
      "key": "<rpm package release> < <rpm package release>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "rpm package release",
      "op": "<",
      "rightType": "rpm package release"
    },
    "id of <root server>": {
      "key": "id of <root server>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "root server"
    },
    "host name of <root server>": {
      "key": "host name of <root server>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "host name",
      "pluralPhrase": "host names",
      "directObjectType": "root server"
    },
    "version of <registration server>": {
      "key": "version of <registration server>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "registration server"
    },
    "now of <registration server>": {
      "key": "now of <registration server>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "now",
      "pluralPhrase": "nows",
      "directObjectType": "registration server"
    },
    "name of <registration server>": {
      "key": "name of <registration server>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "registration server"
    },
    "used amount of <ram>": {
      "key": "used amount of <ram>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "used amount",
      "pluralPhrase": "used amounts",
      "directObjectType": "ram"
    },
    "unavailable amount of <ram>": {
      "key": "unavailable amount of <ram>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "unavailable amount",
      "pluralPhrase": "unavailable amounts",
      "directObjectType": "ram"
    },
    "total amount of <ram>": {
      "key": "total amount of <ram>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total amount",
      "pluralPhrase": "total amounts",
      "directObjectType": "ram"
    },
    "size of <ram>": {
      "key": "size of <ram>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "ram"
    },
    "shared amount of <ram>": {
      "key": "shared amount of <ram>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "shared amount",
      "pluralPhrase": "shared amounts",
      "directObjectType": "ram"
    },
    "free amount of <ram>": {
      "key": "free amount of <ram>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free amount",
      "pluralPhrase": "free amounts",
      "directObjectType": "ram"
    },
    "cached amount of <ram>": {
      "key": "cached amount of <ram>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cached amount",
      "pluralPhrase": "cached amounts",
      "directObjectType": "ram"
    },
    "buffered amount of <ram>": {
      "key": "buffered amount of <ram>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "buffered amount",
      "pluralPhrase": "buffered amounts",
      "directObjectType": "ram"
    },
    "available amount of <ram>": {
      "key": "available amount of <ram>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "available amount",
      "pluralPhrase": "available amounts",
      "directObjectType": "ram"
    },
    "wp of <processor>": {
      "key": "wp of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "wp",
      "pluralPhrase": "wps",
      "directObjectType": "processor"
    },
    "vendor name of <processor>": {
      "key": "vendor name of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "vendor name",
      "pluralPhrase": "vendor names",
      "directObjectType": "processor"
    },
    "stepping of <processor>": {
      "key": "stepping of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "stepping",
      "pluralPhrase": "steppings",
      "directObjectType": "processor"
    },
    "speed of <processor>": {
      "key": "speed of <processor>",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "speed",
      "pluralPhrase": "speeds",
      "directObjectType": "processor"
    },
    "sep bug of <processor>": {
      "key": "sep bug of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "sep bug",
      "pluralPhrase": "sep bugs",
      "directObjectType": "processor"
    },
    "model of <processor>": {
      "key": "model of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "model",
      "pluralPhrase": "models",
      "directObjectType": "processor"
    },
    "model name of <processor>": {
      "key": "model name of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "model name",
      "pluralPhrase": "model names",
      "directObjectType": "processor"
    },
    "index of <processor>": {
      "key": "index of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "index",
      "pluralPhrase": "indexes",
      "directObjectType": "processor"
    },
    "hlt bug of <processor>": {
      "key": "hlt bug of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "hlt bug",
      "pluralPhrase": "hlt bugs",
      "directObjectType": "processor"
    },
    "fpu of <processor>": {
      "key": "fpu of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fpu",
      "pluralPhrase": "fpus",
      "directObjectType": "processor"
    },
    "fpu exception of <processor>": {
      "key": "fpu exception of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fpu exception",
      "pluralPhrase": "fpu exceptions",
      "directObjectType": "processor"
    },
    "flag list of <processor>": {
      "key": "flag list of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "flag list",
      "pluralPhrase": "flag lists",
      "directObjectType": "processor"
    },
    "fdiv bug of <processor>": {
      "key": "fdiv bug of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fdiv bug",
      "pluralPhrase": "fdiv bugs",
      "directObjectType": "processor"
    },
    "family of <processor>": {
      "key": "family of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "family",
      "pluralPhrase": "families",
      "directObjectType": "processor"
    },
    "family name of <processor>": {
      "key": "family name of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "family name",
      "pluralPhrase": "family names",
      "directObjectType": "processor"
    },
    "f00f bug of <processor>": {
      "key": "f00f bug of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "f00f bug",
      "pluralPhrase": "f00f bugs",
      "directObjectType": "processor"
    },
    "cpuid level of <processor>": {
      "key": "cpuid level of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cpuid level",
      "pluralPhrase": "cpuid levels",
      "directObjectType": "processor"
    },
    "coma bug of <processor>": {
      "key": "coma bug of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "coma bug",
      "pluralPhrase": "coma bugs",
      "directObjectType": "processor"
    },
    "bogomips of <processor>": {
      "key": "bogomips of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bogomips",
      "pluralPhrase": "bogomipses",
      "directObjectType": "processor"
    },
    "process id of <process>": {
      "key": "process id of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "process id",
      "pluralPhrase": "process ids",
      "directObjectType": "process"
    },
    "pid of <process>": {
      "key": "pid of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "pid",
      "pluralPhrase": "pids",
      "directObjectType": "process"
    },
    "name of <process>": {
      "key": "name of <process>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "process"
    },
    "id of <process>": {
      "key": "id of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "process"
    },
    "environment of <process>": {
      "key": "environment of <process>",
      "type": "property",
      "resultType": "environment",
      "singularPhrase": "environment",
      "pluralPhrase": "environments",
      "directObjectType": "process"
    },
    "command line argument of <process>": {
      "key": "command line argument of <process>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "command line argument",
      "pluralPhrase": "command line arguments",
      "directObjectType": "process"
    },
    "command line argument <integer> of <process>": {
      "key": "command line argument <integer> of <process>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "command line argument",
      "pluralPhrase": "command line arguments",
      "indexType": "integer",
      "directObjectType": "process"
    },
    "<primary language> as string": {
      "key": "<primary language> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "primary language",
      "phrase": "string"
    },
    "ups of <power level>": {
      "key": "ups of <power level>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "ups",
      "pluralPhrase": "upss",
      "directObjectType": "power level"
    },
    "plugged of <power level>": {
      "key": "plugged of <power level>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "plugged",
      "pluralPhrase": "pluggeds",
      "directObjectType": "power level"
    },
    "normal of <power level>": {
      "key": "normal of <power level>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "normal",
      "pluralPhrase": "normals",
      "directObjectType": "power level"
    },
    "low of <power level>": {
      "key": "low of <power level>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "low",
      "pluralPhrase": "lows",
      "directObjectType": "power level"
    },
    "full of <power level>": {
      "key": "full of <power level>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "full",
      "pluralPhrase": "fulls",
      "directObjectType": "power level"
    },
    "<power level> as string": {
      "key": "<power level> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "power level",
      "phrase": "string"
    },
    "version of <package>": {
      "key": "version of <package>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "package"
    },
    "unique name of <package>": {
      "key": "unique name of <package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "unique name",
      "pluralPhrase": "unique names",
      "directObjectType": "package"
    },
    "rpm version record of <package>": {
      "key": "rpm version record of <package>",
      "type": "property",
      "resultType": "rpm package version record",
      "singularPhrase": "rpm version record",
      "pluralPhrase": "rpm version records",
      "directObjectType": "package"
    },
    "require of <package>": {
      "key": "require of <package>",
      "type": "property",
      "resultType": "capability",
      "singularPhrase": "require",
      "pluralPhrase": "requires",
      "directObjectType": "package"
    },
    "provide of <package>": {
      "key": "provide of <package>",
      "type": "property",
      "resultType": "capability",
      "singularPhrase": "provide",
      "pluralPhrase": "provides",
      "directObjectType": "package"
    },
    "obsolete of <package>": {
      "key": "obsolete of <package>",
      "type": "property",
      "resultType": "capability",
      "singularPhrase": "obsolete",
      "pluralPhrase": "obsoletes",
      "directObjectType": "package"
    },
    "name of <package>": {
      "key": "name of <package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "package"
    },
    "installed file of <package>": {
      "key": "installed file of <package>",
      "type": "property",
      "resultType": "capability",
      "singularPhrase": "installed file",
      "pluralPhrase": "installed files",
      "directObjectType": "package"
    },
    "conflict of <package>": {
      "key": "conflict of <package>",
      "type": "property",
      "resultType": "capability",
      "singularPhrase": "conflict",
      "pluralPhrase": "conflicts",
      "directObjectType": "package"
    },
    "architecture of <package>": {
      "key": "architecture of <package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "architecture",
      "pluralPhrase": "architectures",
      "directObjectType": "package"
    },
    "<package> as string": {
      "key": "<package> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "package",
      "phrase": "string"
    },
    "windows of <operating system>": {
      "key": "windows of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "windows",
      "pluralPhrase": "windowses",
      "directObjectType": "operating system"
    },
    "uptime of <operating system>": {
      "key": "uptime of <operating system>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "uptime",
      "pluralPhrase": "uptimes",
      "directObjectType": "operating system"
    },
    "unix of <operating system>": {
      "key": "unix of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unix",
      "pluralPhrase": "unixes",
      "directObjectType": "operating system"
    },
    "release of <operating system>": {
      "key": "release of <operating system>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "release",
      "pluralPhrase": "releases",
      "directObjectType": "operating system"
    },
    "name of <operating system>": {
      "key": "name of <operating system>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "operating system"
    },
    "mac of <operating system>": {
      "key": "mac of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "mac",
      "pluralPhrase": "macs",
      "directObjectType": "operating system"
    },
    "build of <operating system>": {
      "key": "build of <operating system>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "build",
      "pluralPhrase": "builds",
      "directObjectType": "operating system"
    },
    "boot time of <operating system>": {
      "key": "boot time of <operating system>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "boot time",
      "pluralPhrase": "boot times",
      "directObjectType": "operating system"
    },
    "architecture of <operating system>": {
      "key": "architecture of <operating system>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "architecture",
      "pluralPhrase": "architectures",
      "directObjectType": "operating system"
    },
    "<operating system> as string": {
      "key": "<operating system> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "operating system",
      "phrase": "string"
    },
    "up of <network ip interface>": {
      "key": "up of <network ip interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "up",
      "pluralPhrase": "ups",
      "directObjectType": "network ip interface"
    },
    "subnet mask of <network ip interface>": {
      "key": "subnet mask of <network ip interface>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "subnet mask",
      "pluralPhrase": "subnet masks",
      "directObjectType": "network ip interface"
    },
    "subnet address of <network ip interface>": {
      "key": "subnet address of <network ip interface>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "subnet address",
      "pluralPhrase": "subnet addresses",
      "directObjectType": "network ip interface"
    },
    "point to point of <network ip interface>": {
      "key": "point to point of <network ip interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "point to point",
      "pluralPhrase": "point to points",
      "directObjectType": "network ip interface"
    },
    "name of <network ip interface>": {
      "key": "name of <network ip interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "network ip interface"
    },
    "multicast support of <network ip interface>": {
      "key": "multicast support of <network ip interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "multicast support",
      "pluralPhrase": "multicast supports",
      "directObjectType": "network ip interface"
    },
    "mac address of <network ip interface>": {
      "key": "mac address of <network ip interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "mac address",
      "pluralPhrase": "mac addresses",
      "directObjectType": "network ip interface"
    },
    "loopback of <network ip interface>": {
      "key": "loopback of <network ip interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "loopback",
      "pluralPhrase": "loopbacks",
      "directObjectType": "network ip interface"
    },
    "cidr string of <network ip interface>": {
      "key": "cidr string of <network ip interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cidr string",
      "pluralPhrase": "cidr strings",
      "directObjectType": "network ip interface"
    },
    "cidr address of <network ip interface>": {
      "key": "cidr address of <network ip interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cidr address",
      "pluralPhrase": "cidr addresses",
      "directObjectType": "network ip interface"
    },
    "broadcast support of <network ip interface>": {
      "key": "broadcast support of <network ip interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "broadcast support",
      "pluralPhrase": "broadcast supports",
      "directObjectType": "network ip interface"
    },
    "broadcast address of <network ip interface>": {
      "key": "broadcast address of <network ip interface>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "broadcast address",
      "pluralPhrase": "broadcast addresses",
      "directObjectType": "network ip interface"
    },
    "alias of <network ip interface>": {
      "key": "alias of <network ip interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "alias",
      "pluralPhrase": "aliases",
      "directObjectType": "network ip interface"
    },
    "address of <network ip interface>": {
      "key": "address of <network ip interface>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "address",
      "pluralPhrase": "addresses",
      "directObjectType": "network ip interface"
    },
    "family of <network interface>": {
      "key": "family of <network interface>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "family",
      "pluralPhrase": "families",
      "directObjectType": "network interface"
    },
    "up of <network adapter interface>": {
      "key": "up of <network adapter interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "up",
      "pluralPhrase": "ups",
      "directObjectType": "network adapter interface"
    },
    "subnet mask of <network adapter interface>": {
      "key": "subnet mask of <network adapter interface>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "subnet mask",
      "pluralPhrase": "subnet masks",
      "directObjectType": "network adapter interface"
    },
    "subnet address of <network adapter interface>": {
      "key": "subnet address of <network adapter interface>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "subnet address",
      "pluralPhrase": "subnet addresses",
      "directObjectType": "network adapter interface"
    },
    "point to point of <network adapter interface>": {
      "key": "point to point of <network adapter interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "point to point",
      "pluralPhrase": "point to points",
      "directObjectType": "network adapter interface"
    },
    "multicast support of <network adapter interface>": {
      "key": "multicast support of <network adapter interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "multicast support",
      "pluralPhrase": "multicast supports",
      "directObjectType": "network adapter interface"
    },
    "mac address of <network adapter interface>": {
      "key": "mac address of <network adapter interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "mac address",
      "pluralPhrase": "mac addresses",
      "directObjectType": "network adapter interface"
    },
    "loopback of <network adapter interface>": {
      "key": "loopback of <network adapter interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "loopback",
      "pluralPhrase": "loopbacks",
      "directObjectType": "network adapter interface"
    },
    "cidr string of <network adapter interface>": {
      "key": "cidr string of <network adapter interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cidr string",
      "pluralPhrase": "cidr strings",
      "directObjectType": "network adapter interface"
    },
    "cidr address of <network adapter interface>": {
      "key": "cidr address of <network adapter interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cidr address",
      "pluralPhrase": "cidr addresses",
      "directObjectType": "network adapter interface"
    },
    "broadcast support of <network adapter interface>": {
      "key": "broadcast support of <network adapter interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "broadcast support",
      "pluralPhrase": "broadcast supports",
      "directObjectType": "network adapter interface"
    },
    "broadcast address of <network adapter interface>": {
      "key": "broadcast address of <network adapter interface>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "broadcast address",
      "pluralPhrase": "broadcast addresses",
      "directObjectType": "network adapter interface"
    },
    "address of <network adapter interface>": {
      "key": "address of <network adapter interface>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "address",
      "pluralPhrase": "addresses",
      "directObjectType": "network adapter interface"
    },
    "adapter of <network adapter interface>": {
      "key": "adapter of <network adapter interface>",
      "type": "property",
      "resultType": "network adapter",
      "singularPhrase": "adapter",
      "pluralPhrase": "adapters",
      "directObjectType": "network adapter interface"
    },
    "up of <network adapter>": {
      "key": "up of <network adapter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "up",
      "pluralPhrase": "ups",
      "directObjectType": "network adapter"
    },
    "subnet mask of <network adapter>": {
      "key": "subnet mask of <network adapter>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "subnet mask",
      "pluralPhrase": "subnet masks",
      "directObjectType": "network adapter"
    },
    "subnet address of <network adapter>": {
      "key": "subnet address of <network adapter>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "subnet address",
      "pluralPhrase": "subnet addresses",
      "directObjectType": "network adapter"
    },
    "name of <network adapter>": {
      "key": "name of <network adapter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "network adapter"
    },
    "multicast support of <network adapter>": {
      "key": "multicast support of <network adapter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "multicast support",
      "pluralPhrase": "multicast supports",
      "directObjectType": "network adapter"
    },
    "mac address of <network adapter>": {
      "key": "mac address of <network adapter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "mac address",
      "pluralPhrase": "mac addresses",
      "directObjectType": "network adapter"
    },
    "loopback of <network adapter>": {
      "key": "loopback of <network adapter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "loopback",
      "pluralPhrase": "loopbacks",
      "directObjectType": "network adapter"
    },
    "ipv6 interface of <network adapter>": {
      "key": "ipv6 interface of <network adapter>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv6 interface",
      "pluralPhrase": "ipv6 interfaces",
      "directObjectType": "network adapter"
    },
    "ipv4or6 interface of <network adapter>": {
      "key": "ipv4or6 interface of <network adapter>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv4or6 interface",
      "pluralPhrase": "ipv4or6 interfaces",
      "directObjectType": "network adapter"
    },
    "ipv4 interface of <network adapter>": {
      "key": "ipv4 interface of <network adapter>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv4 interface",
      "pluralPhrase": "ipv4 interfaces",
      "directObjectType": "network adapter"
    },
    "friendly name of <network adapter>": {
      "key": "friendly name of <network adapter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "friendly name",
      "pluralPhrase": "friendly names",
      "directObjectType": "network adapter"
    },
    "cidr string of <network adapter>": {
      "key": "cidr string of <network adapter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cidr string",
      "pluralPhrase": "cidr strings",
      "directObjectType": "network adapter"
    },
    "cidr address of <network adapter>": {
      "key": "cidr address of <network adapter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cidr address",
      "pluralPhrase": "cidr addresses",
      "directObjectType": "network adapter"
    },
    "address of <network adapter>": {
      "key": "address of <network adapter>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "address",
      "pluralPhrase": "addresses",
      "directObjectType": "network adapter"
    },
    "ipv6 interface of <network>": {
      "key": "ipv6 interface of <network>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv6 interface",
      "pluralPhrase": "ipv6 interfaces",
      "directObjectType": "network"
    },
    "ipv4or6 interface of <network>": {
      "key": "ipv4or6 interface of <network>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv4or6 interface",
      "pluralPhrase": "ipv4or6 interfaces",
      "directObjectType": "network"
    },
    "ipv4 interface of <network>": {
      "key": "ipv4 interface of <network>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv4 interface",
      "pluralPhrase": "ipv4 interfaces",
      "directObjectType": "network"
    },
    "ip interface of <network>": {
      "key": "ip interface of <network>",
      "type": "property",
      "resultType": "network ip interface",
      "singularPhrase": "ip interface",
      "pluralPhrase": "ip interfaces",
      "directObjectType": "network"
    },
    "ip interface <integer> of <network>": {
      "key": "ip interface <integer> of <network>",
      "type": "property",
      "resultType": "network ip interface",
      "singularPhrase": "ip interface",
      "pluralPhrase": "ip interfaces",
      "indexType": "integer",
      "directObjectType": "network"
    },
    "interface of <network>": {
      "key": "interface of <network>",
      "type": "property",
      "resultType": "network interface",
      "singularPhrase": "interface",
      "pluralPhrase": "interfaces",
      "directObjectType": "network"
    },
    "interface <integer> of <network>": {
      "key": "interface <integer> of <network>",
      "type": "property",
      "resultType": "network interface",
      "singularPhrase": "interface",
      "pluralPhrase": "interfaces",
      "indexType": "integer",
      "directObjectType": "network"
    },
    "find adapter <string> of <network>": {
      "key": "find adapter <string> of <network>",
      "type": "property",
      "resultType": "network adapter",
      "singularPhrase": "find adapter",
      "pluralPhrase": "find adapters",
      "indexType": "string",
      "directObjectType": "network"
    },
    "any adapter of <network>": {
      "key": "any adapter of <network>",
      "type": "property",
      "resultType": "network adapter",
      "singularPhrase": "any adapter",
      "pluralPhrase": "any adapters",
      "directObjectType": "network"
    },
    "adapter of <network>": {
      "key": "adapter of <network>",
      "type": "property",
      "resultType": "network adapter",
      "singularPhrase": "adapter",
      "pluralPhrase": "adapters",
      "directObjectType": "network"
    },
    "write of <mode_mask>": {
      "key": "write of <mode_mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "write",
      "pluralPhrase": "writes",
      "directObjectType": "mode_mask"
    },
    "read of <mode_mask>": {
      "key": "read of <mode_mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "read",
      "pluralPhrase": "reads",
      "directObjectType": "mode_mask"
    },
    "execute of <mode_mask>": {
      "key": "execute of <mode_mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "execute",
      "pluralPhrase": "executes",
      "directObjectType": "mode_mask"
    },
    "<mode_mask> as string": {
      "key": "<mode_mask> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "mode_mask",
      "phrase": "string"
    },
    "<mode_mask> as integer": {
      "key": "<mode_mask> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "mode_mask",
      "phrase": "integer"
    },
    "user mask of <mode>": {
      "key": "user mask of <mode>",
      "type": "property",
      "resultType": "mode_mask",
      "singularPhrase": "user mask",
      "pluralPhrase": "user masks",
      "directObjectType": "mode"
    },
    "sticky of <mode>": {
      "key": "sticky of <mode>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "sticky",
      "pluralPhrase": "stickies",
      "directObjectType": "mode"
    },
    "setuid of <mode>": {
      "key": "setuid of <mode>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "setuid",
      "pluralPhrase": "setuids",
      "directObjectType": "mode"
    },
    "setgid of <mode>": {
      "key": "setgid of <mode>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "setgid",
      "pluralPhrase": "setgids",
      "directObjectType": "mode"
    },
    "other mask of <mode>": {
      "key": "other mask of <mode>",
      "type": "property",
      "resultType": "mode_mask",
      "singularPhrase": "other mask",
      "pluralPhrase": "other masks",
      "directObjectType": "mode"
    },
    "group mask of <mode>": {
      "key": "group mask of <mode>",
      "type": "property",
      "resultType": "mode_mask",
      "singularPhrase": "group mask",
      "pluralPhrase": "group masks",
      "directObjectType": "mode"
    },
    "<mode> as string": {
      "key": "<mode> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "mode",
      "phrase": "string"
    },
    "<mode> as octal string": {
      "key": "<mode> as octal string",
      "type": "cast",
      "resultType": "string",
      "argType": "mode",
      "phrase": "octal string"
    },
    "primary language of <language>": {
      "key": "primary language of <language>",
      "type": "property",
      "resultType": "primary language",
      "singularPhrase": "primary language",
      "pluralPhrase": "primary languages",
      "directObjectType": "language"
    },
    "platform id of <language>": {
      "key": "platform id of <language>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "platform id",
      "pluralPhrase": "platform ids",
      "directObjectType": "language"
    },
    "<language> as string": {
      "key": "<language> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "language",
      "phrase": "string"
    },
    "upper bound of <integer range>": {
      "key": "upper bound of <integer range>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "upper bound",
      "pluralPhrase": "upper bounds",
      "directObjectType": "integer range"
    },
    "lower bound of <integer range>": {
      "key": "lower bound of <integer range>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lower bound",
      "pluralPhrase": "lower bounds",
      "directObjectType": "integer range"
    },
    "symlink of <folder>": {
      "key": "symlink of <folder>",
      "type": "property",
      "resultType": "symlink",
      "singularPhrase": "symlink",
      "pluralPhrase": "symlinks",
      "directObjectType": "folder"
    },
    "symlink <string> of <folder>": {
      "key": "symlink <string> of <folder>",
      "type": "property",
      "resultType": "symlink",
      "singularPhrase": "symlink",
      "pluralPhrase": "symlinks",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "socket file of <folder>": {
      "key": "socket file of <folder>",
      "type": "property",
      "resultType": "socket file",
      "singularPhrase": "socket file",
      "pluralPhrase": "socket files",
      "directObjectType": "folder"
    },
    "socket file <string> of <folder>": {
      "key": "socket file <string> of <folder>",
      "type": "property",
      "resultType": "socket file",
      "singularPhrase": "socket file",
      "pluralPhrase": "socket files",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "folder of <folder>": {
      "key": "folder of <folder>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "folder",
      "pluralPhrase": "folders",
      "directObjectType": "folder"
    },
    "folder <string> of <folder>": {
      "key": "folder <string> of <folder>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "folder",
      "pluralPhrase": "folders",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "find folder <string> of <folder>": {
      "key": "find folder <string> of <folder>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "find folder",
      "pluralPhrase": "find folders",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "find file <string> of <folder>": {
      "key": "find file <string> of <folder>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "find file",
      "pluralPhrase": "find files",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "filesystem of <folder>": {
      "key": "filesystem of <folder>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "filesystem",
      "pluralPhrase": "filesystems",
      "directObjectType": "folder"
    },
    "file of <folder>": {
      "key": "file of <folder>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "file",
      "pluralPhrase": "files",
      "directObjectType": "folder"
    },
    "file <string> of <folder>": {
      "key": "file <string> of <folder>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "file",
      "pluralPhrase": "files",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "fifo file of <folder>": {
      "key": "fifo file of <folder>",
      "type": "property",
      "resultType": "fifo file",
      "singularPhrase": "fifo file",
      "pluralPhrase": "fifo files",
      "directObjectType": "folder"
    },
    "fifo file <string> of <folder>": {
      "key": "fifo file <string> of <folder>",
      "type": "property",
      "resultType": "fifo file",
      "singularPhrase": "fifo file",
      "pluralPhrase": "fifo files",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "drive of <folder>": {
      "key": "drive of <folder>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "drive",
      "pluralPhrase": "drives",
      "directObjectType": "folder"
    },
    "device file of <folder>": {
      "key": "device file of <folder>",
      "type": "property",
      "resultType": "device file",
      "singularPhrase": "device file",
      "pluralPhrase": "device files",
      "directObjectType": "folder"
    },
    "device file <string> of <folder>": {
      "key": "device file <string> of <folder>",
      "type": "property",
      "resultType": "device file",
      "singularPhrase": "device file",
      "pluralPhrase": "device files",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "descendant of <folder>": {
      "key": "descendant of <folder>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "descendant",
      "pluralPhrase": "descendants",
      "directObjectType": "folder"
    },
    "descendant folder of <folder>": {
      "key": "descendant folder of <folder>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "descendant folder",
      "pluralPhrase": "descendant folders",
      "directObjectType": "folder"
    },
    "application <string> of <folder>": {
      "key": "application <string> of <folder>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "application",
      "pluralPhrase": "applications",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "value of <fixlet_header>": {
      "key": "value of <fixlet_header>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "fixlet_header"
    },
    "name of <fixlet_header>": {
      "key": "name of <fixlet_header>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "fixlet_header"
    },
    "relevance of <fixlet>": {
      "key": "relevance of <fixlet>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "relevance",
      "pluralPhrase": "relevances",
      "directObjectType": "fixlet"
    },
    "id of <fixlet>": {
      "key": "id of <fixlet>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "fixlet"
    },
    "header of <fixlet>": {
      "key": "header of <fixlet>",
      "type": "property",
      "resultType": "fixlet_header",
      "singularPhrase": "header",
      "pluralPhrase": "headers",
      "directObjectType": "fixlet"
    },
    "header <string> of <fixlet>": {
      "key": "header <string> of <fixlet>",
      "type": "property",
      "resultType": "fixlet_header",
      "singularPhrase": "header",
      "pluralPhrase": "headers",
      "indexType": "string",
      "directObjectType": "fixlet"
    },
    "user write of <filesystem object>": {
      "key": "user write of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "user write",
      "pluralPhrase": "user writes",
      "directObjectType": "filesystem object"
    },
    "user read of <filesystem object>": {
      "key": "user read of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "user read",
      "pluralPhrase": "user reads",
      "directObjectType": "filesystem object"
    },
    "user name of <filesystem object>": {
      "key": "user name of <filesystem object>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "user name",
      "pluralPhrase": "user names",
      "directObjectType": "filesystem object"
    },
    "user mask of <filesystem object>": {
      "key": "user mask of <filesystem object>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "user mask",
      "pluralPhrase": "user masks",
      "directObjectType": "filesystem object"
    },
    "user execute of <filesystem object>": {
      "key": "user execute of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "user execute",
      "pluralPhrase": "user executes",
      "directObjectType": "filesystem object"
    },
    "uid of <filesystem object>": {
      "key": "uid of <filesystem object>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "uid",
      "pluralPhrase": "uids",
      "directObjectType": "filesystem object"
    },
    "setuid of <filesystem object>": {
      "key": "setuid of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "setuid",
      "pluralPhrase": "setuids",
      "directObjectType": "filesystem object"
    },
    "setgid of <filesystem object>": {
      "key": "setgid of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "setgid",
      "pluralPhrase": "setgids",
      "directObjectType": "filesystem object"
    },
    "pathname of <filesystem object>": {
      "key": "pathname of <filesystem object>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "pathname",
      "pluralPhrase": "pathnames",
      "directObjectType": "filesystem object"
    },
    "parent folder of <filesystem object>": {
      "key": "parent folder of <filesystem object>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "parent folder",
      "pluralPhrase": "parent folders",
      "directObjectType": "filesystem object"
    },
    "other write of <filesystem object>": {
      "key": "other write of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "other write",
      "pluralPhrase": "other writes",
      "directObjectType": "filesystem object"
    },
    "other read of <filesystem object>": {
      "key": "other read of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "other read",
      "pluralPhrase": "other reads",
      "directObjectType": "filesystem object"
    },
    "other mask of <filesystem object>": {
      "key": "other mask of <filesystem object>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "other mask",
      "pluralPhrase": "other masks",
      "directObjectType": "filesystem object"
    },
    "other execute of <filesystem object>": {
      "key": "other execute of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "other execute",
      "pluralPhrase": "other executes",
      "directObjectType": "filesystem object"
    },
    "name of <filesystem object>": {
      "key": "name of <filesystem object>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "filesystem object"
    },
    "modification time of <filesystem object>": {
      "key": "modification time of <filesystem object>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "modification time",
      "pluralPhrase": "modification times",
      "directObjectType": "filesystem object"
    },
    "mode of <filesystem object>": {
      "key": "mode of <filesystem object>",
      "type": "property",
      "resultType": "mode",
      "singularPhrase": "mode",
      "pluralPhrase": "modes",
      "directObjectType": "filesystem object"
    },
    "location of <filesystem object>": {
      "key": "location of <filesystem object>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "location",
      "pluralPhrase": "locations",
      "directObjectType": "filesystem object"
    },
    "link count of <filesystem object>": {
      "key": "link count of <filesystem object>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "link count",
      "pluralPhrase": "link counts",
      "directObjectType": "filesystem object"
    },
    "group write of <filesystem object>": {
      "key": "group write of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "group write",
      "pluralPhrase": "group writes",
      "directObjectType": "filesystem object"
    },
    "group read of <filesystem object>": {
      "key": "group read of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "group read",
      "pluralPhrase": "group reads",
      "directObjectType": "filesystem object"
    },
    "group name of <filesystem object>": {
      "key": "group name of <filesystem object>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "group name",
      "pluralPhrase": "group names",
      "directObjectType": "filesystem object"
    },
    "group mask of <filesystem object>": {
      "key": "group mask of <filesystem object>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "group mask",
      "pluralPhrase": "group masks",
      "directObjectType": "filesystem object"
    },
    "group execute of <filesystem object>": {
      "key": "group execute of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "group execute",
      "pluralPhrase": "group executes",
      "directObjectType": "filesystem object"
    },
    "gid of <filesystem object>": {
      "key": "gid of <filesystem object>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "gid",
      "pluralPhrase": "gids",
      "directObjectType": "filesystem object"
    },
    "change time of <filesystem object>": {
      "key": "change time of <filesystem object>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "change time",
      "pluralPhrase": "change times",
      "directObjectType": "filesystem object"
    },
    "ancestor of <filesystem object>": {
      "key": "ancestor of <filesystem object>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "ancestor",
      "pluralPhrase": "ancestors",
      "directObjectType": "filesystem object"
    },
    "accessed time of <filesystem object>": {
      "key": "accessed time of <filesystem object>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "accessed time",
      "pluralPhrase": "accessed times",
      "directObjectType": "filesystem object"
    },
    "<filesystem object> as symlink": {
      "key": "<filesystem object> as symlink",
      "type": "cast",
      "resultType": "symlink",
      "argType": "filesystem object",
      "phrase": "symlink"
    },
    "<filesystem object> as string": {
      "key": "<filesystem object> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "filesystem object",
      "phrase": "string"
    },
    "<filesystem object> as socket file": {
      "key": "<filesystem object> as socket file",
      "type": "cast",
      "resultType": "socket file",
      "argType": "filesystem object",
      "phrase": "socket file"
    },
    "<filesystem object> as fifo file": {
      "key": "<filesystem object> as fifo file",
      "type": "cast",
      "resultType": "fifo file",
      "argType": "filesystem object",
      "phrase": "fifo file"
    },
    "<filesystem object> as device file": {
      "key": "<filesystem object> as device file",
      "type": "cast",
      "resultType": "device file",
      "argType": "filesystem object",
      "phrase": "device file"
    },
    "used space of <filesystem>": {
      "key": "used space of <filesystem>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "used space",
      "pluralPhrase": "used spaces",
      "directObjectType": "filesystem"
    },
    "used percent of <filesystem>": {
      "key": "used percent of <filesystem>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "used percent",
      "pluralPhrase": "used percents",
      "directObjectType": "filesystem"
    },
    "used file count of <filesystem>": {
      "key": "used file count of <filesystem>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "used file count",
      "pluralPhrase": "used file counts",
      "directObjectType": "filesystem"
    },
    "type of <filesystem>": {
      "key": "type of <filesystem>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "filesystem"
    },
    "total space of <filesystem>": {
      "key": "total space of <filesystem>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total space",
      "pluralPhrase": "total spaces",
      "directObjectType": "filesystem"
    },
    "size of <filesystem>": {
      "key": "size of <filesystem>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "filesystem"
    },
    "name of <filesystem>": {
      "key": "name of <filesystem>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "filesystem"
    },
    "free space of <filesystem>": {
      "key": "free space of <filesystem>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free space",
      "pluralPhrase": "free spaces",
      "directObjectType": "filesystem"
    },
    "free percent of <filesystem>": {
      "key": "free percent of <filesystem>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free percent",
      "pluralPhrase": "free percents",
      "directObjectType": "filesystem"
    },
    "free file count of <filesystem>": {
      "key": "free file count of <filesystem>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free file count",
      "pluralPhrase": "free file counts",
      "directObjectType": "filesystem"
    },
    "file count of <filesystem>": {
      "key": "file count of <filesystem>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "file count",
      "pluralPhrase": "file counts",
      "directObjectType": "filesystem"
    },
    "key <string> of <file section>": {
      "key": "key <string> of <file section>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "indexType": "string",
      "directObjectType": "file section"
    },
    "previous line of <file line>": {
      "key": "previous line of <file line>",
      "type": "property",
      "resultType": "file line",
      "singularPhrase": "previous line",
      "pluralPhrase": "previous lines",
      "directObjectType": "file line"
    },
    "next line of <file line>": {
      "key": "next line of <file line>",
      "type": "property",
      "resultType": "file line",
      "singularPhrase": "next line",
      "pluralPhrase": "next lines",
      "directObjectType": "file line"
    },
    "line number of <file line>": {
      "key": "line number of <file line>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "line number",
      "pluralPhrase": "line numbers",
      "directObjectType": "file line"
    },
    "<file content> contains <string>": {
      "key": "<file content> contains <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "file content",
      "op": "contains",
      "rightType": "string"
    },
    "<file content> as uppercase": {
      "key": "<file content> as uppercase",
      "type": "cast",
      "resultType": "file content",
      "argType": "file content",
      "phrase": "uppercase"
    },
    "<file content> as lowercase": {
      "key": "<file content> as lowercase",
      "type": "cast",
      "resultType": "file content",
      "argType": "file content",
      "phrase": "lowercase"
    },
    "variable of <file>": {
      "key": "variable of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "variable",
      "pluralPhrase": "variables",
      "directObjectType": "file"
    },
    "size of <file>": {
      "key": "size of <file>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "file"
    },
    "sha1 of <file>": {
      "key": "sha1 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha1",
      "pluralPhrase": "sha1s",
      "directObjectType": "file"
    },
    "section <string> of <file>": {
      "key": "section <string> of <file>",
      "type": "property",
      "resultType": "file section",
      "singularPhrase": "section",
      "pluralPhrase": "sections",
      "indexType": "string",
      "directObjectType": "file"
    },
    "line starting with <string> of <file>": {
      "key": "line starting with <string> of <file>",
      "type": "property",
      "resultType": "file line",
      "singularPhrase": "line starting with",
      "pluralPhrase": "lines starting with",
      "indexType": "string",
      "directObjectType": "file"
    },
    "line of <file>": {
      "key": "line of <file>",
      "type": "property",
      "resultType": "file line",
      "singularPhrase": "line",
      "pluralPhrase": "lines",
      "directObjectType": "file"
    },
    "line containing <string> of <file>": {
      "key": "line containing <string> of <file>",
      "type": "property",
      "resultType": "file line",
      "singularPhrase": "line containing",
      "pluralPhrase": "lines containing",
      "indexType": "string",
      "directObjectType": "file"
    },
    "line <integer> of <file>": {
      "key": "line <integer> of <file>",
      "type": "property",
      "resultType": "file line",
      "singularPhrase": "line",
      "pluralPhrase": "lines",
      "indexType": "integer",
      "directObjectType": "file"
    },
    "key <string> of <file>": {
      "key": "key <string> of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "indexType": "string",
      "directObjectType": "file"
    },
    "filesystem of <file>": {
      "key": "filesystem of <file>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "filesystem",
      "pluralPhrase": "filesystems",
      "directObjectType": "file"
    },
    "drive of <file>": {
      "key": "drive of <file>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "drive",
      "pluralPhrase": "drives",
      "directObjectType": "file"
    },
    "content of <file>": {
      "key": "content of <file>",
      "type": "property",
      "resultType": "file content",
      "singularPhrase": "content",
      "pluralPhrase": "contents",
      "directObjectType": "file"
    },
    "byte <integer> of <file>": {
      "key": "byte <integer> of <file>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "byte",
      "pluralPhrase": "bytes",
      "indexType": "integer",
      "directObjectType": "file"
    },
    "filesystem of <fifo file>": {
      "key": "filesystem of <fifo file>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "filesystem",
      "pluralPhrase": "filesystems",
      "directObjectType": "fifo file"
    },
    "drive of <fifo file>": {
      "key": "drive of <fifo file>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "drive",
      "pluralPhrase": "drives",
      "directObjectType": "fifo file"
    },
    "version info of <execution>": {
      "key": "version info of <execution>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version info",
      "pluralPhrase": "version infos",
      "directObjectType": "execution"
    },
    "type of <execution>": {
      "key": "type of <execution>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "execution"
    },
    "time of <execution>": {
      "key": "time of <execution>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time",
      "pluralPhrase": "times",
      "directObjectType": "execution"
    },
    "path of <execution>": {
      "key": "path of <execution>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "execution"
    },
    "modification time of <execution>": {
      "key": "modification time of <execution>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "modification time",
      "pluralPhrase": "modification times",
      "directObjectType": "execution"
    },
    "identity of <execution>": {
      "key": "identity of <execution>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "identity",
      "pluralPhrase": "identites",
      "directObjectType": "execution"
    },
    "maximum of <evaluation cycle>": {
      "key": "maximum of <evaluation cycle>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum",
      "pluralPhrase": "maximums",
      "directObjectType": "evaluation cycle"
    },
    "average of <evaluation cycle>": {
      "key": "average of <evaluation cycle>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "average",
      "pluralPhrase": "averages",
      "directObjectType": "evaluation cycle"
    },
    "value of <environment variable>": {
      "key": "value of <environment variable>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "environment variable"
    },
    "name of <environment variable>": {
      "key": "name of <environment variable>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "environment variable"
    },
    "<environment variable> as string": {
      "key": "<environment variable> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "environment variable",
      "phrase": "string"
    },
    "variable of <environment>": {
      "key": "variable of <environment>",
      "type": "property",
      "resultType": "environment variable",
      "singularPhrase": "variable",
      "pluralPhrase": "variables",
      "directObjectType": "environment"
    },
    "variable <string> of <environment>": {
      "key": "variable <string> of <environment>",
      "type": "property",
      "resultType": "environment variable",
      "singularPhrase": "variable",
      "pluralPhrase": "variables",
      "indexType": "string",
      "directObjectType": "environment"
    },
    "total size of <download storage folder>": {
      "key": "total size of <download storage folder>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total size",
      "pluralPhrase": "total sizes",
      "directObjectType": "download storage folder"
    },
    "name of <download server>": {
      "key": "name of <download server>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "download server"
    },
    "tolerance of <dmi voltage_probe>": {
      "key": "tolerance of <dmi voltage_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "tolerance",
      "pluralPhrase": "tolerances",
      "directObjectType": "dmi voltage_probe"
    },
    "resolution of <dmi voltage_probe>": {
      "key": "resolution of <dmi voltage_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "resolution",
      "pluralPhrase": "resolutions",
      "directObjectType": "dmi voltage_probe"
    },
    "oem_defined of <dmi voltage_probe>": {
      "key": "oem_defined of <dmi voltage_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oem_defined",
      "pluralPhrase": "oem_defineds",
      "directObjectType": "dmi voltage_probe"
    },
    "nominal_value of <dmi voltage_probe>": {
      "key": "nominal_value of <dmi voltage_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "nominal_value",
      "pluralPhrase": "nominal_values",
      "directObjectType": "dmi voltage_probe"
    },
    "minimum_value of <dmi voltage_probe>": {
      "key": "minimum_value of <dmi voltage_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minimum_value",
      "pluralPhrase": "minimum_values",
      "directObjectType": "dmi voltage_probe"
    },
    "maximum_value of <dmi voltage_probe>": {
      "key": "maximum_value of <dmi voltage_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum_value",
      "pluralPhrase": "maximum_values",
      "directObjectType": "dmi voltage_probe"
    },
    "location_and_status of <dmi voltage_probe>": {
      "key": "location_and_status of <dmi voltage_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "location_and_status",
      "pluralPhrase": "location_and_statuss",
      "directObjectType": "dmi voltage_probe"
    },
    "length of <dmi voltage_probe>": {
      "key": "length of <dmi voltage_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi voltage_probe"
    },
    "description of <dmi voltage_probe>": {
      "key": "description of <dmi voltage_probe>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "dmi voltage_probe"
    },
    "accuracy of <dmi voltage_probe>": {
      "key": "accuracy of <dmi voltage_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "accuracy",
      "pluralPhrase": "accuracys",
      "directObjectType": "dmi voltage_probe"
    },
    "tolerance of <dmi temperature_probe>": {
      "key": "tolerance of <dmi temperature_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "tolerance",
      "pluralPhrase": "tolerances",
      "directObjectType": "dmi temperature_probe"
    },
    "resolution of <dmi temperature_probe>": {
      "key": "resolution of <dmi temperature_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "resolution",
      "pluralPhrase": "resolutions",
      "directObjectType": "dmi temperature_probe"
    },
    "oem_defined of <dmi temperature_probe>": {
      "key": "oem_defined of <dmi temperature_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oem_defined",
      "pluralPhrase": "oem_defineds",
      "directObjectType": "dmi temperature_probe"
    },
    "nominal_value of <dmi temperature_probe>": {
      "key": "nominal_value of <dmi temperature_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "nominal_value",
      "pluralPhrase": "nominal_values",
      "directObjectType": "dmi temperature_probe"
    },
    "minimum_value of <dmi temperature_probe>": {
      "key": "minimum_value of <dmi temperature_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minimum_value",
      "pluralPhrase": "minimum_values",
      "directObjectType": "dmi temperature_probe"
    },
    "maximum_value of <dmi temperature_probe>": {
      "key": "maximum_value of <dmi temperature_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum_value",
      "pluralPhrase": "maximum_values",
      "directObjectType": "dmi temperature_probe"
    },
    "location_and_status of <dmi temperature_probe>": {
      "key": "location_and_status of <dmi temperature_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "location_and_status",
      "pluralPhrase": "location_and_statuss",
      "directObjectType": "dmi temperature_probe"
    },
    "length of <dmi temperature_probe>": {
      "key": "length of <dmi temperature_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi temperature_probe"
    },
    "description of <dmi temperature_probe>": {
      "key": "description of <dmi temperature_probe>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "dmi temperature_probe"
    },
    "accuracy of <dmi temperature_probe>": {
      "key": "accuracy of <dmi temperature_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "accuracy",
      "pluralPhrase": "accuracys",
      "directObjectType": "dmi temperature_probe"
    },
    "slot_type of <dmi system_slots>": {
      "key": "slot_type of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "slot_type",
      "pluralPhrase": "slot_types",
      "directObjectType": "dmi system_slots"
    },
    "slot_length of <dmi system_slots>": {
      "key": "slot_length of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "slot_length",
      "pluralPhrase": "slot_lengths",
      "directObjectType": "dmi system_slots"
    },
    "slot_id of <dmi system_slots>": {
      "key": "slot_id of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "slot_id",
      "pluralPhrase": "slot_ids",
      "directObjectType": "dmi system_slots"
    },
    "slot_designation of <dmi system_slots>": {
      "key": "slot_designation of <dmi system_slots>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "slot_designation",
      "pluralPhrase": "slot_designations",
      "directObjectType": "dmi system_slots"
    },
    "slot_data_bus_width of <dmi system_slots>": {
      "key": "slot_data_bus_width of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "slot_data_bus_width",
      "pluralPhrase": "slot_data_bus_widths",
      "directObjectType": "dmi system_slots"
    },
    "slot_characteristics_2 of <dmi system_slots>": {
      "key": "slot_characteristics_2 of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "slot_characteristics_2",
      "pluralPhrase": "slot_characteristics_2s",
      "directObjectType": "dmi system_slots"
    },
    "slot_characteristics_1 of <dmi system_slots>": {
      "key": "slot_characteristics_1 of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "slot_characteristics_1",
      "pluralPhrase": "slot_characteristics_1s",
      "directObjectType": "dmi system_slots"
    },
    "segment_group_number of <dmi system_slots>": {
      "key": "segment_group_number of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "segment_group_number",
      "pluralPhrase": "segment_group_numbers",
      "directObjectType": "dmi system_slots"
    },
    "length of <dmi system_slots>": {
      "key": "length of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi system_slots"
    },
    "device_function_number of <dmi system_slots>": {
      "key": "device_function_number of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_function_number",
      "pluralPhrase": "device_function_numbers",
      "directObjectType": "dmi system_slots"
    },
    "current_usage of <dmi system_slots>": {
      "key": "current_usage of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "current_usage",
      "pluralPhrase": "current_usages",
      "directObjectType": "dmi system_slots"
    },
    "bus_number of <dmi system_slots>": {
      "key": "bus_number of <dmi system_slots>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bus_number",
      "pluralPhrase": "bus_numbers",
      "directObjectType": "dmi system_slots"
    },
    "timer_interval of <dmi system_reset>": {
      "key": "timer_interval of <dmi system_reset>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "timer_interval",
      "pluralPhrase": "timer_intervals",
      "directObjectType": "dmi system_reset"
    },
    "timeout of <dmi system_reset>": {
      "key": "timeout of <dmi system_reset>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "timeout",
      "pluralPhrase": "timeouts",
      "directObjectType": "dmi system_reset"
    },
    "reset_limit of <dmi system_reset>": {
      "key": "reset_limit of <dmi system_reset>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "reset_limit",
      "pluralPhrase": "reset_limits",
      "directObjectType": "dmi system_reset"
    },
    "reset_count of <dmi system_reset>": {
      "key": "reset_count of <dmi system_reset>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "reset_count",
      "pluralPhrase": "reset_counts",
      "directObjectType": "dmi system_reset"
    },
    "length of <dmi system_reset>": {
      "key": "length of <dmi system_reset>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi system_reset"
    },
    "capabilities of <dmi system_reset>": {
      "key": "capabilities of <dmi system_reset>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "capabilities",
      "pluralPhrase": "capabilitiess",
      "directObjectType": "dmi system_reset"
    },
    "serial_number of <dmi system_power_supply>": {
      "key": "serial_number of <dmi system_power_supply>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "serial_number",
      "pluralPhrase": "serial_numbers",
      "directObjectType": "dmi system_power_supply"
    },
    "revision_level of <dmi system_power_supply>": {
      "key": "revision_level of <dmi system_power_supply>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "revision_level",
      "pluralPhrase": "revision_levels",
      "directObjectType": "dmi system_power_supply"
    },
    "power_unit_group of <dmi system_power_supply>": {
      "key": "power_unit_group of <dmi system_power_supply>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "power_unit_group",
      "pluralPhrase": "power_unit_groups",
      "directObjectType": "dmi system_power_supply"
    },
    "power_supply_characteristics of <dmi system_power_supply>": {
      "key": "power_supply_characteristics of <dmi system_power_supply>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "power_supply_characteristics",
      "pluralPhrase": "power_supply_characteristicss",
      "directObjectType": "dmi system_power_supply"
    },
    "model_part_number of <dmi system_power_supply>": {
      "key": "model_part_number of <dmi system_power_supply>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "model_part_number",
      "pluralPhrase": "model_part_numbers",
      "directObjectType": "dmi system_power_supply"
    },
    "max_power_capacity of <dmi system_power_supply>": {
      "key": "max_power_capacity of <dmi system_power_supply>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "max_power_capacity",
      "pluralPhrase": "max_power_capacitys",
      "directObjectType": "dmi system_power_supply"
    },
    "manufacturer of <dmi system_power_supply>": {
      "key": "manufacturer of <dmi system_power_supply>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "manufacturer",
      "pluralPhrase": "manufacturers",
      "directObjectType": "dmi system_power_supply"
    },
    "location of <dmi system_power_supply>": {
      "key": "location of <dmi system_power_supply>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "location",
      "pluralPhrase": "locations",
      "directObjectType": "dmi system_power_supply"
    },
    "length of <dmi system_power_supply>": {
      "key": "length of <dmi system_power_supply>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi system_power_supply"
    },
    "input_voltage_probe_handle of <dmi system_power_supply>": {
      "key": "input_voltage_probe_handle of <dmi system_power_supply>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "input_voltage_probe_handle",
      "pluralPhrase": "input_voltage_probe_handles",
      "directObjectType": "dmi system_power_supply"
    },
    "input_current_probe_handle of <dmi system_power_supply>": {
      "key": "input_current_probe_handle of <dmi system_power_supply>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "input_current_probe_handle",
      "pluralPhrase": "input_current_probe_handles",
      "directObjectType": "dmi system_power_supply"
    },
    "device_name of <dmi system_power_supply>": {
      "key": "device_name of <dmi system_power_supply>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device_name",
      "pluralPhrase": "device_names",
      "directObjectType": "dmi system_power_supply"
    },
    "cooling_device_handle of <dmi system_power_supply>": {
      "key": "cooling_device_handle of <dmi system_power_supply>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cooling_device_handle",
      "pluralPhrase": "cooling_device_handles",
      "directObjectType": "dmi system_power_supply"
    },
    "asset_tag_number of <dmi system_power_supply>": {
      "key": "asset_tag_number of <dmi system_power_supply>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "asset_tag_number",
      "pluralPhrase": "asset_tag_numbers",
      "directObjectType": "dmi system_power_supply"
    },
    "next_scheduled_power_on_second of <dmi system_power_controls>": {
      "key": "next_scheduled_power_on_second of <dmi system_power_controls>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "next_scheduled_power_on_second",
      "pluralPhrase": "next_scheduled_power_on_seconds",
      "directObjectType": "dmi system_power_controls"
    },
    "next_scheduled_power_on_month of <dmi system_power_controls>": {
      "key": "next_scheduled_power_on_month of <dmi system_power_controls>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "next_scheduled_power_on_month",
      "pluralPhrase": "next_scheduled_power_on_months",
      "directObjectType": "dmi system_power_controls"
    },
    "next_scheduled_power_on_minute of <dmi system_power_controls>": {
      "key": "next_scheduled_power_on_minute of <dmi system_power_controls>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "next_scheduled_power_on_minute",
      "pluralPhrase": "next_scheduled_power_on_minutes",
      "directObjectType": "dmi system_power_controls"
    },
    "next_scheduled_power_on_hour of <dmi system_power_controls>": {
      "key": "next_scheduled_power_on_hour of <dmi system_power_controls>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "next_scheduled_power_on_hour",
      "pluralPhrase": "next_scheduled_power_on_hours",
      "directObjectType": "dmi system_power_controls"
    },
    "next_scheduled_power_on_day_of_month of <dmi system_power_controls>": {
      "key": "next_scheduled_power_on_day_of_month of <dmi system_power_controls>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "next_scheduled_power_on_day_of_month",
      "pluralPhrase": "next_scheduled_power_on_day_of_months",
      "directObjectType": "dmi system_power_controls"
    },
    "length of <dmi system_power_controls>": {
      "key": "length of <dmi system_power_controls>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi system_power_controls"
    },
    "wake_up_type of <dmi system_information>": {
      "key": "wake_up_type of <dmi system_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "wake_up_type",
      "pluralPhrase": "wake_up_types",
      "directObjectType": "dmi system_information"
    },
    "version of <dmi system_information>": {
      "key": "version of <dmi system_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "dmi system_information"
    },
    "uuid of <dmi system_information>": {
      "key": "uuid of <dmi system_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "uuid",
      "pluralPhrase": "uuids",
      "directObjectType": "dmi system_information"
    },
    "sku_number of <dmi system_information>": {
      "key": "sku_number of <dmi system_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sku_number",
      "pluralPhrase": "sku_numbers",
      "directObjectType": "dmi system_information"
    },
    "serial_number of <dmi system_information>": {
      "key": "serial_number of <dmi system_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "serial_number",
      "pluralPhrase": "serial_numbers",
      "directObjectType": "dmi system_information"
    },
    "product_name of <dmi system_information>": {
      "key": "product_name of <dmi system_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "product_name",
      "pluralPhrase": "product_names",
      "directObjectType": "dmi system_information"
    },
    "manufacturer of <dmi system_information>": {
      "key": "manufacturer of <dmi system_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "manufacturer",
      "pluralPhrase": "manufacturers",
      "directObjectType": "dmi system_information"
    },
    "length of <dmi system_information>": {
      "key": "length of <dmi system_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi system_information"
    },
    "family of <dmi system_information>": {
      "key": "family of <dmi system_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "family",
      "pluralPhrase": "familys",
      "directObjectType": "dmi system_information"
    },
    "version of <dmi system_enclosure_or_chassis>": {
      "key": "version of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "type of <dmi system_enclosure_or_chassis>": {
      "key": "type of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "thermal_state of <dmi system_enclosure_or_chassis>": {
      "key": "thermal_state of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "thermal_state",
      "pluralPhrase": "thermal_states",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "serial_number of <dmi system_enclosure_or_chassis>": {
      "key": "serial_number of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "serial_number",
      "pluralPhrase": "serial_numbers",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "security_status of <dmi system_enclosure_or_chassis>": {
      "key": "security_status of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "security_status",
      "pluralPhrase": "security_statuss",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "power_supply_state of <dmi system_enclosure_or_chassis>": {
      "key": "power_supply_state of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "power_supply_state",
      "pluralPhrase": "power_supply_states",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "oem_defined of <dmi system_enclosure_or_chassis>": {
      "key": "oem_defined of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oem_defined",
      "pluralPhrase": "oem_defineds",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "number_of_power_cords of <dmi system_enclosure_or_chassis>": {
      "key": "number_of_power_cords of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "number_of_power_cords",
      "pluralPhrase": "number_of_power_cordss",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "manufacturer of <dmi system_enclosure_or_chassis>": {
      "key": "manufacturer of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "manufacturer",
      "pluralPhrase": "manufacturers",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "length of <dmi system_enclosure_or_chassis>": {
      "key": "length of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "height of <dmi system_enclosure_or_chassis>": {
      "key": "height of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "height",
      "pluralPhrase": "heights",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "contained_element_record_length of <dmi system_enclosure_or_chassis>": {
      "key": "contained_element_record_length of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "contained_element_record_length",
      "pluralPhrase": "contained_element_record_lengths",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "contained_element_count of <dmi system_enclosure_or_chassis>": {
      "key": "contained_element_count of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "contained_element_count",
      "pluralPhrase": "contained_element_counts",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "bootup_state of <dmi system_enclosure_or_chassis>": {
      "key": "bootup_state of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bootup_state",
      "pluralPhrase": "bootup_states",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "asset_tag_number of <dmi system_enclosure_or_chassis>": {
      "key": "asset_tag_number of <dmi system_enclosure_or_chassis>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "asset_tag_number",
      "pluralPhrase": "asset_tag_numbers",
      "directObjectType": "dmi system_enclosure_or_chassis"
    },
    "reserved of <dmi system_boot_information>": {
      "key": "reserved of <dmi system_boot_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "reserved",
      "pluralPhrase": "reserveds",
      "directObjectType": "dmi system_boot_information"
    },
    "length of <dmi system_boot_information>": {
      "key": "length of <dmi system_boot_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi system_boot_information"
    },
    "voltage of <dmi processor_information>": {
      "key": "voltage of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "voltage",
      "pluralPhrase": "voltages",
      "directObjectType": "dmi processor_information"
    },
    "thread_count of <dmi processor_information>": {
      "key": "thread_count of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "thread_count",
      "pluralPhrase": "thread_counts",
      "directObjectType": "dmi processor_information"
    },
    "status of <dmi processor_information>": {
      "key": "status of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "status",
      "pluralPhrase": "statuss",
      "directObjectType": "dmi processor_information"
    },
    "socket_designation of <dmi processor_information>": {
      "key": "socket_designation of <dmi processor_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "socket_designation",
      "pluralPhrase": "socket_designations",
      "directObjectType": "dmi processor_information"
    },
    "serial_number of <dmi processor_information>": {
      "key": "serial_number of <dmi processor_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "serial_number",
      "pluralPhrase": "serial_numbers",
      "directObjectType": "dmi processor_information"
    },
    "processor_version of <dmi processor_information>": {
      "key": "processor_version of <dmi processor_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "processor_version",
      "pluralPhrase": "processor_versions",
      "directObjectType": "dmi processor_information"
    },
    "processor_upgrade of <dmi processor_information>": {
      "key": "processor_upgrade of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "processor_upgrade",
      "pluralPhrase": "processor_upgrades",
      "directObjectType": "dmi processor_information"
    },
    "processor_type of <dmi processor_information>": {
      "key": "processor_type of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "processor_type",
      "pluralPhrase": "processor_types",
      "directObjectType": "dmi processor_information"
    },
    "processor_manufacturer of <dmi processor_information>": {
      "key": "processor_manufacturer of <dmi processor_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "processor_manufacturer",
      "pluralPhrase": "processor_manufacturers",
      "directObjectType": "dmi processor_information"
    },
    "processor_id of <dmi processor_information>": {
      "key": "processor_id of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "processor_id",
      "pluralPhrase": "processor_ids",
      "directObjectType": "dmi processor_information"
    },
    "processor_family_2 of <dmi processor_information>": {
      "key": "processor_family_2 of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "processor_family_2",
      "pluralPhrase": "processor_family_2s",
      "directObjectType": "dmi processor_information"
    },
    "processor_family of <dmi processor_information>": {
      "key": "processor_family of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "processor_family",
      "pluralPhrase": "processor_familys",
      "directObjectType": "dmi processor_information"
    },
    "processor_characteristics of <dmi processor_information>": {
      "key": "processor_characteristics of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "processor_characteristics",
      "pluralPhrase": "processor_characteristicss",
      "directObjectType": "dmi processor_information"
    },
    "part_number of <dmi processor_information>": {
      "key": "part_number of <dmi processor_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "part_number",
      "pluralPhrase": "part_numbers",
      "directObjectType": "dmi processor_information"
    },
    "max_speed of <dmi processor_information>": {
      "key": "max_speed of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "max_speed",
      "pluralPhrase": "max_speeds",
      "directObjectType": "dmi processor_information"
    },
    "length of <dmi processor_information>": {
      "key": "length of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi processor_information"
    },
    "l3_cache_handle of <dmi processor_information>": {
      "key": "l3_cache_handle of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "l3_cache_handle",
      "pluralPhrase": "l3_cache_handles",
      "directObjectType": "dmi processor_information"
    },
    "l2_cache_handle of <dmi processor_information>": {
      "key": "l2_cache_handle of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "l2_cache_handle",
      "pluralPhrase": "l2_cache_handles",
      "directObjectType": "dmi processor_information"
    },
    "l1_cache_handle of <dmi processor_information>": {
      "key": "l1_cache_handle of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "l1_cache_handle",
      "pluralPhrase": "l1_cache_handles",
      "directObjectType": "dmi processor_information"
    },
    "external_clock of <dmi processor_information>": {
      "key": "external_clock of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "external_clock",
      "pluralPhrase": "external_clocks",
      "directObjectType": "dmi processor_information"
    },
    "current_speed of <dmi processor_information>": {
      "key": "current_speed of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "current_speed",
      "pluralPhrase": "current_speeds",
      "directObjectType": "dmi processor_information"
    },
    "core_enabled of <dmi processor_information>": {
      "key": "core_enabled of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "core_enabled",
      "pluralPhrase": "core_enableds",
      "directObjectType": "dmi processor_information"
    },
    "core_count of <dmi processor_information>": {
      "key": "core_count of <dmi processor_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "core_count",
      "pluralPhrase": "core_counts",
      "directObjectType": "dmi processor_information"
    },
    "asset_tag of <dmi processor_information>": {
      "key": "asset_tag of <dmi processor_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "asset_tag",
      "pluralPhrase": "asset_tags",
      "directObjectType": "dmi processor_information"
    },
    "serial_number of <dmi portable_battery>": {
      "key": "serial_number of <dmi portable_battery>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "serial_number",
      "pluralPhrase": "serial_numbers",
      "directObjectType": "dmi portable_battery"
    },
    "sbds_version_number of <dmi portable_battery>": {
      "key": "sbds_version_number of <dmi portable_battery>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sbds_version_number",
      "pluralPhrase": "sbds_version_numbers",
      "directObjectType": "dmi portable_battery"
    },
    "sbds_serial_number of <dmi portable_battery>": {
      "key": "sbds_serial_number of <dmi portable_battery>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "sbds_serial_number",
      "pluralPhrase": "sbds_serial_numbers",
      "directObjectType": "dmi portable_battery"
    },
    "sbds_manufacture_date of <dmi portable_battery>": {
      "key": "sbds_manufacture_date of <dmi portable_battery>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "sbds_manufacture_date",
      "pluralPhrase": "sbds_manufacture_dates",
      "directObjectType": "dmi portable_battery"
    },
    "sbds_device_chemistry of <dmi portable_battery>": {
      "key": "sbds_device_chemistry of <dmi portable_battery>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sbds_device_chemistry",
      "pluralPhrase": "sbds_device_chemistrys",
      "directObjectType": "dmi portable_battery"
    },
    "oem_specific of <dmi portable_battery>": {
      "key": "oem_specific of <dmi portable_battery>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oem_specific",
      "pluralPhrase": "oem_specifics",
      "directObjectType": "dmi portable_battery"
    },
    "maximum_error_in_battery_data of <dmi portable_battery>": {
      "key": "maximum_error_in_battery_data of <dmi portable_battery>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum_error_in_battery_data",
      "pluralPhrase": "maximum_error_in_battery_datas",
      "directObjectType": "dmi portable_battery"
    },
    "manufacturer of <dmi portable_battery>": {
      "key": "manufacturer of <dmi portable_battery>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "manufacturer",
      "pluralPhrase": "manufacturers",
      "directObjectType": "dmi portable_battery"
    },
    "manufacture_date of <dmi portable_battery>": {
      "key": "manufacture_date of <dmi portable_battery>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "manufacture_date",
      "pluralPhrase": "manufacture_dates",
      "directObjectType": "dmi portable_battery"
    },
    "location of <dmi portable_battery>": {
      "key": "location of <dmi portable_battery>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "location",
      "pluralPhrase": "locations",
      "directObjectType": "dmi portable_battery"
    },
    "length of <dmi portable_battery>": {
      "key": "length of <dmi portable_battery>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi portable_battery"
    },
    "device_name of <dmi portable_battery>": {
      "key": "device_name of <dmi portable_battery>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device_name",
      "pluralPhrase": "device_names",
      "directObjectType": "dmi portable_battery"
    },
    "device_chemistry of <dmi portable_battery>": {
      "key": "device_chemistry of <dmi portable_battery>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_chemistry",
      "pluralPhrase": "device_chemistrys",
      "directObjectType": "dmi portable_battery"
    },
    "design_voltage of <dmi portable_battery>": {
      "key": "design_voltage of <dmi portable_battery>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "design_voltage",
      "pluralPhrase": "design_voltages",
      "directObjectType": "dmi portable_battery"
    },
    "design_capacity_multiplier of <dmi portable_battery>": {
      "key": "design_capacity_multiplier of <dmi portable_battery>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "design_capacity_multiplier",
      "pluralPhrase": "design_capacity_multipliers",
      "directObjectType": "dmi portable_battery"
    },
    "design_capacity of <dmi portable_battery>": {
      "key": "design_capacity of <dmi portable_battery>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "design_capacity",
      "pluralPhrase": "design_capacitys",
      "directObjectType": "dmi portable_battery"
    },
    "port_type of <dmi port_connector_information>": {
      "key": "port_type of <dmi port_connector_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "port_type",
      "pluralPhrase": "port_types",
      "directObjectType": "dmi port_connector_information"
    },
    "length of <dmi port_connector_information>": {
      "key": "length of <dmi port_connector_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi port_connector_information"
    },
    "internal_reference_designator of <dmi port_connector_information>": {
      "key": "internal_reference_designator of <dmi port_connector_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "internal_reference_designator",
      "pluralPhrase": "internal_reference_designators",
      "directObjectType": "dmi port_connector_information"
    },
    "internal_connector_type of <dmi port_connector_information>": {
      "key": "internal_connector_type of <dmi port_connector_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "internal_connector_type",
      "pluralPhrase": "internal_connector_types",
      "directObjectType": "dmi port_connector_information"
    },
    "external_reference_designator of <dmi port_connector_information>": {
      "key": "external_reference_designator of <dmi port_connector_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "external_reference_designator",
      "pluralPhrase": "external_reference_designators",
      "directObjectType": "dmi port_connector_information"
    },
    "external_connector_type of <dmi port_connector_information>": {
      "key": "external_connector_type of <dmi port_connector_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "external_connector_type",
      "pluralPhrase": "external_connector_types",
      "directObjectType": "dmi port_connector_information"
    },
    "use of <dmi physical_memory_array>": {
      "key": "use of <dmi physical_memory_array>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "use",
      "pluralPhrase": "uses",
      "directObjectType": "dmi physical_memory_array"
    },
    "number_of_memory_devices of <dmi physical_memory_array>": {
      "key": "number_of_memory_devices of <dmi physical_memory_array>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "number_of_memory_devices",
      "pluralPhrase": "number_of_memory_devicess",
      "directObjectType": "dmi physical_memory_array"
    },
    "memory_error_information_handle of <dmi physical_memory_array>": {
      "key": "memory_error_information_handle of <dmi physical_memory_array>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_error_information_handle",
      "pluralPhrase": "memory_error_information_handles",
      "directObjectType": "dmi physical_memory_array"
    },
    "memory_error_correction of <dmi physical_memory_array>": {
      "key": "memory_error_correction of <dmi physical_memory_array>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_error_correction",
      "pluralPhrase": "memory_error_corrections",
      "directObjectType": "dmi physical_memory_array"
    },
    "maximum_capacity of <dmi physical_memory_array>": {
      "key": "maximum_capacity of <dmi physical_memory_array>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum_capacity",
      "pluralPhrase": "maximum_capacitys",
      "directObjectType": "dmi physical_memory_array"
    },
    "location of <dmi physical_memory_array>": {
      "key": "location of <dmi physical_memory_array>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "location",
      "pluralPhrase": "locations",
      "directObjectType": "dmi physical_memory_array"
    },
    "length of <dmi physical_memory_array>": {
      "key": "length of <dmi physical_memory_array>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi physical_memory_array"
    },
    "manufacturer_name of <dmi out_of_band_remote_access>": {
      "key": "manufacturer_name of <dmi out_of_band_remote_access>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "manufacturer_name",
      "pluralPhrase": "manufacturer_names",
      "directObjectType": "dmi out_of_band_remote_access"
    },
    "length of <dmi out_of_band_remote_access>": {
      "key": "length of <dmi out_of_band_remote_access>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi out_of_band_remote_access"
    },
    "connections of <dmi out_of_band_remote_access>": {
      "key": "connections of <dmi out_of_band_remote_access>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "connections",
      "pluralPhrase": "connectionss",
      "directObjectType": "dmi out_of_band_remote_access"
    },
    "segment_group_number of <dmi onboard_devices_extended_information>": {
      "key": "segment_group_number of <dmi onboard_devices_extended_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "segment_group_number",
      "pluralPhrase": "segment_group_numbers",
      "directObjectType": "dmi onboard_devices_extended_information"
    },
    "reference_designation of <dmi onboard_devices_extended_information>": {
      "key": "reference_designation of <dmi onboard_devices_extended_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "reference_designation",
      "pluralPhrase": "reference_designations",
      "directObjectType": "dmi onboard_devices_extended_information"
    },
    "length of <dmi onboard_devices_extended_information>": {
      "key": "length of <dmi onboard_devices_extended_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi onboard_devices_extended_information"
    },
    "device_type_instance of <dmi onboard_devices_extended_information>": {
      "key": "device_type_instance of <dmi onboard_devices_extended_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_type_instance",
      "pluralPhrase": "device_type_instances",
      "directObjectType": "dmi onboard_devices_extended_information"
    },
    "device_function_number of <dmi onboard_devices_extended_information>": {
      "key": "device_function_number of <dmi onboard_devices_extended_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_function_number",
      "pluralPhrase": "device_function_numbers",
      "directObjectType": "dmi onboard_devices_extended_information"
    },
    "bus_number of <dmi onboard_devices_extended_information>": {
      "key": "bus_number of <dmi onboard_devices_extended_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bus_number",
      "pluralPhrase": "bus_numbers",
      "directObjectType": "dmi onboard_devices_extended_information"
    },
    "length of <dmi on_board_devices_information>": {
      "key": "length of <dmi on_board_devices_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi on_board_devices_information"
    },
    "device_type of <dmi on_board_devices_information>": {
      "key": "device_type of <dmi on_board_devices_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_type",
      "pluralPhrase": "device_types",
      "directObjectType": "dmi on_board_devices_information"
    },
    "device_type <integer> of <dmi on_board_devices_information>": {
      "key": "device_type <integer> of <dmi on_board_devices_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_type",
      "pluralPhrase": "device_types",
      "indexType": "integer",
      "directObjectType": "dmi on_board_devices_information"
    },
    "device_description of <dmi on_board_devices_information>": {
      "key": "device_description of <dmi on_board_devices_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device_description",
      "pluralPhrase": "device_descriptions",
      "directObjectType": "dmi on_board_devices_information"
    },
    "device_description <integer> of <dmi on_board_devices_information>": {
      "key": "device_description <integer> of <dmi on_board_devices_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device_description",
      "pluralPhrase": "device_descriptions",
      "indexType": "integer",
      "directObjectType": "dmi on_board_devices_information"
    },
    "description_string of <dmi on_board_devices_information>": {
      "key": "description_string of <dmi on_board_devices_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description_string",
      "pluralPhrase": "description_strings",
      "directObjectType": "dmi on_board_devices_information"
    },
    "socket_designation of <dmi memory_module_information>": {
      "key": "socket_designation of <dmi memory_module_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "socket_designation",
      "pluralPhrase": "socket_designations",
      "directObjectType": "dmi memory_module_information"
    },
    "length of <dmi memory_module_information>": {
      "key": "length of <dmi memory_module_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi memory_module_information"
    },
    "installed_size of <dmi memory_module_information>": {
      "key": "installed_size of <dmi memory_module_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "installed_size",
      "pluralPhrase": "installed_sizes",
      "directObjectType": "dmi memory_module_information"
    },
    "error_status of <dmi memory_module_information>": {
      "key": "error_status of <dmi memory_module_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_status",
      "pluralPhrase": "error_statuss",
      "directObjectType": "dmi memory_module_information"
    },
    "enabled_size of <dmi memory_module_information>": {
      "key": "enabled_size of <dmi memory_module_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "enabled_size",
      "pluralPhrase": "enabled_sizes",
      "directObjectType": "dmi memory_module_information"
    },
    "current_speed of <dmi memory_module_information>": {
      "key": "current_speed of <dmi memory_module_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "current_speed",
      "pluralPhrase": "current_speeds",
      "directObjectType": "dmi memory_module_information"
    },
    "current_memory_type of <dmi memory_module_information>": {
      "key": "current_memory_type of <dmi memory_module_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "current_memory_type",
      "pluralPhrase": "current_memory_types",
      "directObjectType": "dmi memory_module_information"
    },
    "bank_connections of <dmi memory_module_information>": {
      "key": "bank_connections of <dmi memory_module_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bank_connections",
      "pluralPhrase": "bank_connectionss",
      "directObjectType": "dmi memory_module_information"
    },
    "starting_address of <dmi memory_device_mapped_address>": {
      "key": "starting_address of <dmi memory_device_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "starting_address",
      "pluralPhrase": "starting_addresss",
      "directObjectType": "dmi memory_device_mapped_address"
    },
    "partition_row_position of <dmi memory_device_mapped_address>": {
      "key": "partition_row_position of <dmi memory_device_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "partition_row_position",
      "pluralPhrase": "partition_row_positions",
      "directObjectType": "dmi memory_device_mapped_address"
    },
    "memory_device_handle of <dmi memory_device_mapped_address>": {
      "key": "memory_device_handle of <dmi memory_device_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_device_handle",
      "pluralPhrase": "memory_device_handles",
      "directObjectType": "dmi memory_device_mapped_address"
    },
    "memory_array_mapped_address_handle of <dmi memory_device_mapped_address>": {
      "key": "memory_array_mapped_address_handle of <dmi memory_device_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_array_mapped_address_handle",
      "pluralPhrase": "memory_array_mapped_address_handles",
      "directObjectType": "dmi memory_device_mapped_address"
    },
    "length of <dmi memory_device_mapped_address>": {
      "key": "length of <dmi memory_device_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi memory_device_mapped_address"
    },
    "interleaved_data_depth of <dmi memory_device_mapped_address>": {
      "key": "interleaved_data_depth of <dmi memory_device_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "interleaved_data_depth",
      "pluralPhrase": "interleaved_data_depths",
      "directObjectType": "dmi memory_device_mapped_address"
    },
    "interleave_position of <dmi memory_device_mapped_address>": {
      "key": "interleave_position of <dmi memory_device_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "interleave_position",
      "pluralPhrase": "interleave_positions",
      "directObjectType": "dmi memory_device_mapped_address"
    },
    "ending_address of <dmi memory_device_mapped_address>": {
      "key": "ending_address of <dmi memory_device_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "ending_address",
      "pluralPhrase": "ending_addresss",
      "directObjectType": "dmi memory_device_mapped_address"
    },
    "type_detail of <dmi memory_device>": {
      "key": "type_detail of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "type_detail",
      "pluralPhrase": "type_details",
      "directObjectType": "dmi memory_device"
    },
    "total_width of <dmi memory_device>": {
      "key": "total_width of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total_width",
      "pluralPhrase": "total_widths",
      "directObjectType": "dmi memory_device"
    },
    "speed of <dmi memory_device>": {
      "key": "speed of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "speed",
      "pluralPhrase": "speeds",
      "directObjectType": "dmi memory_device"
    },
    "size of <dmi memory_device>": {
      "key": "size of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "dmi memory_device"
    },
    "serial_number of <dmi memory_device>": {
      "key": "serial_number of <dmi memory_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "serial_number",
      "pluralPhrase": "serial_numbers",
      "directObjectType": "dmi memory_device"
    },
    "part_number of <dmi memory_device>": {
      "key": "part_number of <dmi memory_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "part_number",
      "pluralPhrase": "part_numbers",
      "directObjectType": "dmi memory_device"
    },
    "memory_type of <dmi memory_device>": {
      "key": "memory_type of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_type",
      "pluralPhrase": "memory_types",
      "directObjectType": "dmi memory_device"
    },
    "memory_error_information_handle of <dmi memory_device>": {
      "key": "memory_error_information_handle of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_error_information_handle",
      "pluralPhrase": "memory_error_information_handles",
      "directObjectType": "dmi memory_device"
    },
    "memory_array_handle of <dmi memory_device>": {
      "key": "memory_array_handle of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_array_handle",
      "pluralPhrase": "memory_array_handles",
      "directObjectType": "dmi memory_device"
    },
    "manufacturer of <dmi memory_device>": {
      "key": "manufacturer of <dmi memory_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "manufacturer",
      "pluralPhrase": "manufacturers",
      "directObjectType": "dmi memory_device"
    },
    "length of <dmi memory_device>": {
      "key": "length of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi memory_device"
    },
    "form_factor of <dmi memory_device>": {
      "key": "form_factor of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "form_factor",
      "pluralPhrase": "form_factors",
      "directObjectType": "dmi memory_device"
    },
    "device_set of <dmi memory_device>": {
      "key": "device_set of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_set",
      "pluralPhrase": "device_sets",
      "directObjectType": "dmi memory_device"
    },
    "device_locator of <dmi memory_device>": {
      "key": "device_locator of <dmi memory_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device_locator",
      "pluralPhrase": "device_locators",
      "directObjectType": "dmi memory_device"
    },
    "data_width of <dmi memory_device>": {
      "key": "data_width of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "data_width",
      "pluralPhrase": "data_widths",
      "directObjectType": "dmi memory_device"
    },
    "bank_locator of <dmi memory_device>": {
      "key": "bank_locator of <dmi memory_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "bank_locator",
      "pluralPhrase": "bank_locators",
      "directObjectType": "dmi memory_device"
    },
    "attributes of <dmi memory_device>": {
      "key": "attributes of <dmi memory_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "attributes",
      "pluralPhrase": "attributess",
      "directObjectType": "dmi memory_device"
    },
    "asset_tag of <dmi memory_device>": {
      "key": "asset_tag of <dmi memory_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "asset_tag",
      "pluralPhrase": "asset_tags",
      "directObjectType": "dmi memory_device"
    },
    "supported_speeds of <dmi memory_controller_information>": {
      "key": "supported_speeds of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "supported_speeds",
      "pluralPhrase": "supported_speedss",
      "directObjectType": "dmi memory_controller_information"
    },
    "supported_memory_types of <dmi memory_controller_information>": {
      "key": "supported_memory_types of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "supported_memory_types",
      "pluralPhrase": "supported_memory_typess",
      "directObjectType": "dmi memory_controller_information"
    },
    "supported_interleave of <dmi memory_controller_information>": {
      "key": "supported_interleave of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "supported_interleave",
      "pluralPhrase": "supported_interleaves",
      "directObjectType": "dmi memory_controller_information"
    },
    "number_of_associated_memory_slots of <dmi memory_controller_information>": {
      "key": "number_of_associated_memory_slots of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "number_of_associated_memory_slots",
      "pluralPhrase": "number_of_associated_memory_slotss",
      "directObjectType": "dmi memory_controller_information"
    },
    "memory_module_voltage of <dmi memory_controller_information>": {
      "key": "memory_module_voltage of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_module_voltage",
      "pluralPhrase": "memory_module_voltages",
      "directObjectType": "dmi memory_controller_information"
    },
    "maximum_memory_module_size of <dmi memory_controller_information>": {
      "key": "maximum_memory_module_size of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum_memory_module_size",
      "pluralPhrase": "maximum_memory_module_sizes",
      "directObjectType": "dmi memory_controller_information"
    },
    "length of <dmi memory_controller_information>": {
      "key": "length of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi memory_controller_information"
    },
    "error_detecting_method of <dmi memory_controller_information>": {
      "key": "error_detecting_method of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_detecting_method",
      "pluralPhrase": "error_detecting_methods",
      "directObjectType": "dmi memory_controller_information"
    },
    "error_correcting_capability of <dmi memory_controller_information>": {
      "key": "error_correcting_capability of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_correcting_capability",
      "pluralPhrase": "error_correcting_capabilitys",
      "directObjectType": "dmi memory_controller_information"
    },
    "current_interleave of <dmi memory_controller_information>": {
      "key": "current_interleave of <dmi memory_controller_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "current_interleave",
      "pluralPhrase": "current_interleaves",
      "directObjectType": "dmi memory_controller_information"
    },
    "memory_device_load of <dmi memory_channel>": {
      "key": "memory_device_load of <dmi memory_channel>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_device_load",
      "pluralPhrase": "memory_device_loads",
      "directObjectType": "dmi memory_channel"
    },
    "memory_device_handle of <dmi memory_channel>": {
      "key": "memory_device_handle of <dmi memory_channel>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_device_handle",
      "pluralPhrase": "memory_device_handles",
      "directObjectType": "dmi memory_channel"
    },
    "memory_device_count of <dmi memory_channel>": {
      "key": "memory_device_count of <dmi memory_channel>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_device_count",
      "pluralPhrase": "memory_device_counts",
      "directObjectType": "dmi memory_channel"
    },
    "maximum_channel_load of <dmi memory_channel>": {
      "key": "maximum_channel_load of <dmi memory_channel>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum_channel_load",
      "pluralPhrase": "maximum_channel_loads",
      "directObjectType": "dmi memory_channel"
    },
    "length of <dmi memory_channel>": {
      "key": "length of <dmi memory_channel>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi memory_channel"
    },
    "channel_type of <dmi memory_channel>": {
      "key": "channel_type of <dmi memory_channel>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "channel_type",
      "pluralPhrase": "channel_types",
      "directObjectType": "dmi memory_channel"
    },
    "starting_address of <dmi memory_array_mapped_address>": {
      "key": "starting_address of <dmi memory_array_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "starting_address",
      "pluralPhrase": "starting_addresss",
      "directObjectType": "dmi memory_array_mapped_address"
    },
    "partition_width of <dmi memory_array_mapped_address>": {
      "key": "partition_width of <dmi memory_array_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "partition_width",
      "pluralPhrase": "partition_widths",
      "directObjectType": "dmi memory_array_mapped_address"
    },
    "memory_array_handle of <dmi memory_array_mapped_address>": {
      "key": "memory_array_handle of <dmi memory_array_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_array_handle",
      "pluralPhrase": "memory_array_handles",
      "directObjectType": "dmi memory_array_mapped_address"
    },
    "length of <dmi memory_array_mapped_address>": {
      "key": "length of <dmi memory_array_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi memory_array_mapped_address"
    },
    "ending_address of <dmi memory_array_mapped_address>": {
      "key": "ending_address of <dmi memory_array_mapped_address>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "ending_address",
      "pluralPhrase": "ending_addresss",
      "directObjectType": "dmi memory_array_mapped_address"
    },
    "upper_threshold_non_recoverable of <dmi management_device_threshold_data>": {
      "key": "upper_threshold_non_recoverable of <dmi management_device_threshold_data>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "upper_threshold_non_recoverable",
      "pluralPhrase": "upper_threshold_non_recoverables",
      "directObjectType": "dmi management_device_threshold_data"
    },
    "upper_threshold_non_critical of <dmi management_device_threshold_data>": {
      "key": "upper_threshold_non_critical of <dmi management_device_threshold_data>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "upper_threshold_non_critical",
      "pluralPhrase": "upper_threshold_non_criticals",
      "directObjectType": "dmi management_device_threshold_data"
    },
    "upper_threshold_critical of <dmi management_device_threshold_data>": {
      "key": "upper_threshold_critical of <dmi management_device_threshold_data>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "upper_threshold_critical",
      "pluralPhrase": "upper_threshold_criticals",
      "directObjectType": "dmi management_device_threshold_data"
    },
    "lower_threshold_non_recoverable of <dmi management_device_threshold_data>": {
      "key": "lower_threshold_non_recoverable of <dmi management_device_threshold_data>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lower_threshold_non_recoverable",
      "pluralPhrase": "lower_threshold_non_recoverables",
      "directObjectType": "dmi management_device_threshold_data"
    },
    "lower_threshold_non_critical of <dmi management_device_threshold_data>": {
      "key": "lower_threshold_non_critical of <dmi management_device_threshold_data>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lower_threshold_non_critical",
      "pluralPhrase": "lower_threshold_non_criticals",
      "directObjectType": "dmi management_device_threshold_data"
    },
    "lower_threshold_critical of <dmi management_device_threshold_data>": {
      "key": "lower_threshold_critical of <dmi management_device_threshold_data>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lower_threshold_critical",
      "pluralPhrase": "lower_threshold_criticals",
      "directObjectType": "dmi management_device_threshold_data"
    },
    "length of <dmi management_device_threshold_data>": {
      "key": "length of <dmi management_device_threshold_data>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi management_device_threshold_data"
    },
    "threshold_handle of <dmi management_device_component>": {
      "key": "threshold_handle of <dmi management_device_component>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "threshold_handle",
      "pluralPhrase": "threshold_handles",
      "directObjectType": "dmi management_device_component"
    },
    "management_device_handle of <dmi management_device_component>": {
      "key": "management_device_handle of <dmi management_device_component>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "management_device_handle",
      "pluralPhrase": "management_device_handles",
      "directObjectType": "dmi management_device_component"
    },
    "length of <dmi management_device_component>": {
      "key": "length of <dmi management_device_component>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi management_device_component"
    },
    "description of <dmi management_device_component>": {
      "key": "description of <dmi management_device_component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "dmi management_device_component"
    },
    "component_handle of <dmi management_device_component>": {
      "key": "component_handle of <dmi management_device_component>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "component_handle",
      "pluralPhrase": "component_handles",
      "directObjectType": "dmi management_device_component"
    },
    "type of <dmi management_device>": {
      "key": "type of <dmi management_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "dmi management_device"
    },
    "length of <dmi management_device>": {
      "key": "length of <dmi management_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi management_device"
    },
    "description of <dmi management_device>": {
      "key": "description of <dmi management_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "dmi management_device"
    },
    "address_type of <dmi management_device>": {
      "key": "address_type of <dmi management_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "address_type",
      "pluralPhrase": "address_types",
      "directObjectType": "dmi management_device"
    },
    "address of <dmi management_device>": {
      "key": "address of <dmi management_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "address",
      "pluralPhrase": "addresss",
      "directObjectType": "dmi management_device"
    },
    "nv_storage_device_address of <dmi ipmi_device_information>": {
      "key": "nv_storage_device_address of <dmi ipmi_device_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "nv_storage_device_address",
      "pluralPhrase": "nv_storage_device_addresss",
      "directObjectType": "dmi ipmi_device_information"
    },
    "length of <dmi ipmi_device_information>": {
      "key": "length of <dmi ipmi_device_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi ipmi_device_information"
    },
    "ipmi_specification_revision of <dmi ipmi_device_information>": {
      "key": "ipmi_specification_revision of <dmi ipmi_device_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "ipmi_specification_revision",
      "pluralPhrase": "ipmi_specification_revisions",
      "directObjectType": "dmi ipmi_device_information"
    },
    "interface_type of <dmi ipmi_device_information>": {
      "key": "interface_type of <dmi ipmi_device_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "interface_type",
      "pluralPhrase": "interface_types",
      "directObjectType": "dmi ipmi_device_information"
    },
    "i2c_slave_address of <dmi ipmi_device_information>": {
      "key": "i2c_slave_address of <dmi ipmi_device_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "i2c_slave_address",
      "pluralPhrase": "i2c_slave_addresss",
      "directObjectType": "dmi ipmi_device_information"
    },
    "base_address of <dmi ipmi_device_information>": {
      "key": "base_address of <dmi ipmi_device_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "base_address",
      "pluralPhrase": "base_addresss",
      "directObjectType": "dmi ipmi_device_information"
    },
    "length of <dmi inactive>": {
      "key": "length of <dmi inactive>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi inactive"
    },
    "length of <dmi hardware_security>": {
      "key": "length of <dmi hardware_security>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi hardware_security"
    },
    "hardware_security_settings of <dmi hardware_security>": {
      "key": "hardware_security_settings of <dmi hardware_security>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "hardware_security_settings",
      "pluralPhrase": "hardware_security_settingss",
      "directObjectType": "dmi hardware_security"
    },
    "length of <dmi group_associations>": {
      "key": "length of <dmi group_associations>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi group_associations"
    },
    "item_type of <dmi group_associations>": {
      "key": "item_type of <dmi group_associations>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "item_type",
      "pluralPhrase": "item_types",
      "directObjectType": "dmi group_associations"
    },
    "item_handle of <dmi group_associations>": {
      "key": "item_handle of <dmi group_associations>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "item_handle",
      "pluralPhrase": "item_handles",
      "directObjectType": "dmi group_associations"
    },
    "group_name of <dmi group_associations>": {
      "key": "group_name of <dmi group_associations>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "group_name",
      "pluralPhrase": "group_names",
      "directObjectType": "dmi group_associations"
    },
    "length of <dmi end_of_table>": {
      "key": "length of <dmi end_of_table>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi end_of_table"
    },
    "tolerance of <dmi electrical_current_probe>": {
      "key": "tolerance of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "tolerance",
      "pluralPhrase": "tolerances",
      "directObjectType": "dmi electrical_current_probe"
    },
    "resolution of <dmi electrical_current_probe>": {
      "key": "resolution of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "resolution",
      "pluralPhrase": "resolutions",
      "directObjectType": "dmi electrical_current_probe"
    },
    "oem_defined of <dmi electrical_current_probe>": {
      "key": "oem_defined of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oem_defined",
      "pluralPhrase": "oem_defineds",
      "directObjectType": "dmi electrical_current_probe"
    },
    "nominal_value of <dmi electrical_current_probe>": {
      "key": "nominal_value of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "nominal_value",
      "pluralPhrase": "nominal_values",
      "directObjectType": "dmi electrical_current_probe"
    },
    "minimum_value of <dmi electrical_current_probe>": {
      "key": "minimum_value of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minimum_value",
      "pluralPhrase": "minimum_values",
      "directObjectType": "dmi electrical_current_probe"
    },
    "maximum_value of <dmi electrical_current_probe>": {
      "key": "maximum_value of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum_value",
      "pluralPhrase": "maximum_values",
      "directObjectType": "dmi electrical_current_probe"
    },
    "location_and_status of <dmi electrical_current_probe>": {
      "key": "location_and_status of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "location_and_status",
      "pluralPhrase": "location_and_statuss",
      "directObjectType": "dmi electrical_current_probe"
    },
    "length of <dmi electrical_current_probe>": {
      "key": "length of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi electrical_current_probe"
    },
    "description of <dmi electrical_current_probe>": {
      "key": "description of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "dmi electrical_current_probe"
    },
    "accuracy of <dmi electrical_current_probe>": {
      "key": "accuracy of <dmi electrical_current_probe>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "accuracy",
      "pluralPhrase": "accuracys",
      "directObjectType": "dmi electrical_current_probe"
    },
    "temperature_probe_handle of <dmi cooling_device>": {
      "key": "temperature_probe_handle of <dmi cooling_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "temperature_probe_handle",
      "pluralPhrase": "temperature_probe_handles",
      "directObjectType": "dmi cooling_device"
    },
    "oem_defined of <dmi cooling_device>": {
      "key": "oem_defined of <dmi cooling_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oem_defined",
      "pluralPhrase": "oem_defineds",
      "directObjectType": "dmi cooling_device"
    },
    "nominal_speed of <dmi cooling_device>": {
      "key": "nominal_speed of <dmi cooling_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "nominal_speed",
      "pluralPhrase": "nominal_speeds",
      "directObjectType": "dmi cooling_device"
    },
    "length of <dmi cooling_device>": {
      "key": "length of <dmi cooling_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi cooling_device"
    },
    "device_type_and_status of <dmi cooling_device>": {
      "key": "device_type_and_status of <dmi cooling_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_type_and_status",
      "pluralPhrase": "device_type_and_statuss",
      "directObjectType": "dmi cooling_device"
    },
    "cooling_unit_group of <dmi cooling_device>": {
      "key": "cooling_unit_group of <dmi cooling_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cooling_unit_group",
      "pluralPhrase": "cooling_unit_groups",
      "directObjectType": "dmi cooling_device"
    },
    "system_cache_type of <dmi cache_information>": {
      "key": "system_cache_type of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "system_cache_type",
      "pluralPhrase": "system_cache_types",
      "directObjectType": "dmi cache_information"
    },
    "supported_sram_type of <dmi cache_information>": {
      "key": "supported_sram_type of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "supported_sram_type",
      "pluralPhrase": "supported_sram_types",
      "directObjectType": "dmi cache_information"
    },
    "socket_designation of <dmi cache_information>": {
      "key": "socket_designation of <dmi cache_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "socket_designation",
      "pluralPhrase": "socket_designations",
      "directObjectType": "dmi cache_information"
    },
    "maximum_cache_size of <dmi cache_information>": {
      "key": "maximum_cache_size of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum_cache_size",
      "pluralPhrase": "maximum_cache_sizes",
      "directObjectType": "dmi cache_information"
    },
    "length of <dmi cache_information>": {
      "key": "length of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi cache_information"
    },
    "installed_size of <dmi cache_information>": {
      "key": "installed_size of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "installed_size",
      "pluralPhrase": "installed_sizes",
      "directObjectType": "dmi cache_information"
    },
    "error_correction_type of <dmi cache_information>": {
      "key": "error_correction_type of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_correction_type",
      "pluralPhrase": "error_correction_types",
      "directObjectType": "dmi cache_information"
    },
    "current_sram_type of <dmi cache_information>": {
      "key": "current_sram_type of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "current_sram_type",
      "pluralPhrase": "current_sram_types",
      "directObjectType": "dmi cache_information"
    },
    "cache_speed of <dmi cache_information>": {
      "key": "cache_speed of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cache_speed",
      "pluralPhrase": "cache_speeds",
      "directObjectType": "dmi cache_information"
    },
    "cache_configuration of <dmi cache_information>": {
      "key": "cache_configuration of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cache_configuration",
      "pluralPhrase": "cache_configurations",
      "directObjectType": "dmi cache_information"
    },
    "associativity of <dmi cache_information>": {
      "key": "associativity of <dmi cache_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "associativity",
      "pluralPhrase": "associativitys",
      "directObjectType": "dmi cache_information"
    },
    "type of <dmi built_in_pointing_device>": {
      "key": "type of <dmi built_in_pointing_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "dmi built_in_pointing_device"
    },
    "number_of_buttons of <dmi built_in_pointing_device>": {
      "key": "number_of_buttons of <dmi built_in_pointing_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "number_of_buttons",
      "pluralPhrase": "number_of_buttonss",
      "directObjectType": "dmi built_in_pointing_device"
    },
    "length of <dmi built_in_pointing_device>": {
      "key": "length of <dmi built_in_pointing_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi built_in_pointing_device"
    },
    "interface of <dmi built_in_pointing_device>": {
      "key": "interface of <dmi built_in_pointing_device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "interface",
      "pluralPhrase": "interfaces",
      "directObjectType": "dmi built_in_pointing_device"
    },
    "reserved of <dmi bios_language_information>": {
      "key": "reserved of <dmi bios_language_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "reserved",
      "pluralPhrase": "reserveds",
      "directObjectType": "dmi bios_language_information"
    },
    "length of <dmi bios_language_information>": {
      "key": "length of <dmi bios_language_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi bios_language_information"
    },
    "installable_languages of <dmi bios_language_information>": {
      "key": "installable_languages of <dmi bios_language_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "installable_languages",
      "pluralPhrase": "installable_languagess",
      "directObjectType": "dmi bios_language_information"
    },
    "flags of <dmi bios_language_information>": {
      "key": "flags of <dmi bios_language_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "flags",
      "pluralPhrase": "flagss",
      "directObjectType": "dmi bios_language_information"
    },
    "current_language of <dmi bios_language_information>": {
      "key": "current_language of <dmi bios_language_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "current_language",
      "pluralPhrase": "current_languages",
      "directObjectType": "dmi bios_language_information"
    },
    "vendor of <dmi bios_information>": {
      "key": "vendor of <dmi bios_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "vendor",
      "pluralPhrase": "vendors",
      "directObjectType": "dmi bios_information"
    },
    "system_bios_minor_release of <dmi bios_information>": {
      "key": "system_bios_minor_release of <dmi bios_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "system_bios_minor_release",
      "pluralPhrase": "system_bios_minor_releases",
      "directObjectType": "dmi bios_information"
    },
    "system_bios_major_release of <dmi bios_information>": {
      "key": "system_bios_major_release of <dmi bios_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "system_bios_major_release",
      "pluralPhrase": "system_bios_major_releases",
      "directObjectType": "dmi bios_information"
    },
    "length of <dmi bios_information>": {
      "key": "length of <dmi bios_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi bios_information"
    },
    "embedded_controller_firmware_minor_release of <dmi bios_information>": {
      "key": "embedded_controller_firmware_minor_release of <dmi bios_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "embedded_controller_firmware_minor_release",
      "pluralPhrase": "embedded_controller_firmware_minor_releases",
      "directObjectType": "dmi bios_information"
    },
    "embedded_controller_firmware_major_release of <dmi bios_information>": {
      "key": "embedded_controller_firmware_major_release of <dmi bios_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "embedded_controller_firmware_major_release",
      "pluralPhrase": "embedded_controller_firmware_major_releases",
      "directObjectType": "dmi bios_information"
    },
    "bios_version of <dmi bios_information>": {
      "key": "bios_version of <dmi bios_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "bios_version",
      "pluralPhrase": "bios_versions",
      "directObjectType": "dmi bios_information"
    },
    "bios_starting_address_segment of <dmi bios_information>": {
      "key": "bios_starting_address_segment of <dmi bios_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bios_starting_address_segment",
      "pluralPhrase": "bios_starting_address_segments",
      "directObjectType": "dmi bios_information"
    },
    "bios_rom_size of <dmi bios_information>": {
      "key": "bios_rom_size of <dmi bios_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bios_rom_size",
      "pluralPhrase": "bios_rom_sizes",
      "directObjectType": "dmi bios_information"
    },
    "bios_release_date of <dmi bios_information>": {
      "key": "bios_release_date of <dmi bios_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "bios_release_date",
      "pluralPhrase": "bios_release_dates",
      "directObjectType": "dmi bios_information"
    },
    "bios_characteristics of <dmi bios_information>": {
      "key": "bios_characteristics of <dmi bios_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bios_characteristics",
      "pluralPhrase": "bios_characteristicss",
      "directObjectType": "dmi bios_information"
    },
    "version of <dmi base_board_information>": {
      "key": "version of <dmi base_board_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "dmi base_board_information"
    },
    "serial_number of <dmi base_board_information>": {
      "key": "serial_number of <dmi base_board_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "serial_number",
      "pluralPhrase": "serial_numbers",
      "directObjectType": "dmi base_board_information"
    },
    "product of <dmi base_board_information>": {
      "key": "product of <dmi base_board_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "dmi base_board_information"
    },
    "number_of_contained_object_handles of <dmi base_board_information>": {
      "key": "number_of_contained_object_handles of <dmi base_board_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "number_of_contained_object_handles",
      "pluralPhrase": "number_of_contained_object_handless",
      "directObjectType": "dmi base_board_information"
    },
    "manufacturer of <dmi base_board_information>": {
      "key": "manufacturer of <dmi base_board_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "manufacturer",
      "pluralPhrase": "manufacturers",
      "directObjectType": "dmi base_board_information"
    },
    "location_in_chassis of <dmi base_board_information>": {
      "key": "location_in_chassis of <dmi base_board_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "location_in_chassis",
      "pluralPhrase": "location_in_chassiss",
      "directObjectType": "dmi base_board_information"
    },
    "length of <dmi base_board_information>": {
      "key": "length of <dmi base_board_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi base_board_information"
    },
    "feature_flags of <dmi base_board_information>": {
      "key": "feature_flags of <dmi base_board_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "feature_flags",
      "pluralPhrase": "feature_flagss",
      "directObjectType": "dmi base_board_information"
    },
    "chassis_handle of <dmi base_board_information>": {
      "key": "chassis_handle of <dmi base_board_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "chassis_handle",
      "pluralPhrase": "chassis_handles",
      "directObjectType": "dmi base_board_information"
    },
    "board_type of <dmi base_board_information>": {
      "key": "board_type of <dmi base_board_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "board_type",
      "pluralPhrase": "board_types",
      "directObjectType": "dmi base_board_information"
    },
    "asset_tag of <dmi base_board_information>": {
      "key": "asset_tag of <dmi base_board_information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "asset_tag",
      "pluralPhrase": "asset_tags",
      "directObjectType": "dmi base_board_information"
    },
    "vendor_syndrome of <dmi b64_bit_memory_error_information>": {
      "key": "vendor_syndrome of <dmi b64_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "vendor_syndrome",
      "pluralPhrase": "vendor_syndromes",
      "directObjectType": "dmi b64_bit_memory_error_information"
    },
    "memory_array_error_address of <dmi b64_bit_memory_error_information>": {
      "key": "memory_array_error_address of <dmi b64_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_array_error_address",
      "pluralPhrase": "memory_array_error_addresss",
      "directObjectType": "dmi b64_bit_memory_error_information"
    },
    "length of <dmi b64_bit_memory_error_information>": {
      "key": "length of <dmi b64_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi b64_bit_memory_error_information"
    },
    "error_type of <dmi b64_bit_memory_error_information>": {
      "key": "error_type of <dmi b64_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_type",
      "pluralPhrase": "error_types",
      "directObjectType": "dmi b64_bit_memory_error_information"
    },
    "error_resolution of <dmi b64_bit_memory_error_information>": {
      "key": "error_resolution of <dmi b64_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_resolution",
      "pluralPhrase": "error_resolutions",
      "directObjectType": "dmi b64_bit_memory_error_information"
    },
    "error_operation of <dmi b64_bit_memory_error_information>": {
      "key": "error_operation of <dmi b64_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_operation",
      "pluralPhrase": "error_operations",
      "directObjectType": "dmi b64_bit_memory_error_information"
    },
    "error_granularity of <dmi b64_bit_memory_error_information>": {
      "key": "error_granularity of <dmi b64_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_granularity",
      "pluralPhrase": "error_granularitys",
      "directObjectType": "dmi b64_bit_memory_error_information"
    },
    "device_error_address of <dmi b64_bit_memory_error_information>": {
      "key": "device_error_address of <dmi b64_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_error_address",
      "pluralPhrase": "device_error_addresss",
      "directObjectType": "dmi b64_bit_memory_error_information"
    },
    "vendor_syndrome of <dmi b32_bit_memory_error_information>": {
      "key": "vendor_syndrome of <dmi b32_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "vendor_syndrome",
      "pluralPhrase": "vendor_syndromes",
      "directObjectType": "dmi b32_bit_memory_error_information"
    },
    "memory_array_error_address of <dmi b32_bit_memory_error_information>": {
      "key": "memory_array_error_address of <dmi b32_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "memory_array_error_address",
      "pluralPhrase": "memory_array_error_addresss",
      "directObjectType": "dmi b32_bit_memory_error_information"
    },
    "length of <dmi b32_bit_memory_error_information>": {
      "key": "length of <dmi b32_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi b32_bit_memory_error_information"
    },
    "error_type of <dmi b32_bit_memory_error_information>": {
      "key": "error_type of <dmi b32_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_type",
      "pluralPhrase": "error_types",
      "directObjectType": "dmi b32_bit_memory_error_information"
    },
    "error_resolution of <dmi b32_bit_memory_error_information>": {
      "key": "error_resolution of <dmi b32_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_resolution",
      "pluralPhrase": "error_resolutions",
      "directObjectType": "dmi b32_bit_memory_error_information"
    },
    "error_operation of <dmi b32_bit_memory_error_information>": {
      "key": "error_operation of <dmi b32_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_operation",
      "pluralPhrase": "error_operations",
      "directObjectType": "dmi b32_bit_memory_error_information"
    },
    "error_granularity of <dmi b32_bit_memory_error_information>": {
      "key": "error_granularity of <dmi b32_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "error_granularity",
      "pluralPhrase": "error_granularitys",
      "directObjectType": "dmi b32_bit_memory_error_information"
    },
    "device_error_address of <dmi b32_bit_memory_error_information>": {
      "key": "device_error_address of <dmi b32_bit_memory_error_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "device_error_address",
      "pluralPhrase": "device_error_addresss",
      "directObjectType": "dmi b32_bit_memory_error_information"
    },
    "number_of_additional_information_entries of <dmi additional_information>": {
      "key": "number_of_additional_information_entries of <dmi additional_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "number_of_additional_information_entries",
      "pluralPhrase": "number_of_additional_information_entriess",
      "directObjectType": "dmi additional_information"
    },
    "length of <dmi additional_information>": {
      "key": "length of <dmi additional_information>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "dmi additional_information"
    },
    "voltage_probe of <dmi>": {
      "key": "voltage_probe of <dmi>",
      "type": "property",
      "resultType": "dmi voltage_probe",
      "singularPhrase": "voltage_probe",
      "pluralPhrase": "voltage_probes",
      "directObjectType": "dmi"
    },
    "voltage_probe <integer> of <dmi>": {
      "key": "voltage_probe <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi voltage_probe",
      "singularPhrase": "voltage_probe",
      "pluralPhrase": "voltage_probes",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "temperature_probe of <dmi>": {
      "key": "temperature_probe of <dmi>",
      "type": "property",
      "resultType": "dmi temperature_probe",
      "singularPhrase": "temperature_probe",
      "pluralPhrase": "temperature_probes",
      "directObjectType": "dmi"
    },
    "temperature_probe <integer> of <dmi>": {
      "key": "temperature_probe <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi temperature_probe",
      "singularPhrase": "temperature_probe",
      "pluralPhrase": "temperature_probes",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "system_slots of <dmi>": {
      "key": "system_slots of <dmi>",
      "type": "property",
      "resultType": "dmi system_slots",
      "singularPhrase": "system_slots",
      "pluralPhrase": "system_slotss",
      "directObjectType": "dmi"
    },
    "system_slots <integer> of <dmi>": {
      "key": "system_slots <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi system_slots",
      "singularPhrase": "system_slots",
      "pluralPhrase": "system_slotss",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "system_reset of <dmi>": {
      "key": "system_reset of <dmi>",
      "type": "property",
      "resultType": "dmi system_reset",
      "singularPhrase": "system_reset",
      "pluralPhrase": "system_resets",
      "directObjectType": "dmi"
    },
    "system_reset <integer> of <dmi>": {
      "key": "system_reset <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi system_reset",
      "singularPhrase": "system_reset",
      "pluralPhrase": "system_resets",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "system_power_supply of <dmi>": {
      "key": "system_power_supply of <dmi>",
      "type": "property",
      "resultType": "dmi system_power_supply",
      "singularPhrase": "system_power_supply",
      "pluralPhrase": "system_power_supplys",
      "directObjectType": "dmi"
    },
    "system_power_supply <integer> of <dmi>": {
      "key": "system_power_supply <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi system_power_supply",
      "singularPhrase": "system_power_supply",
      "pluralPhrase": "system_power_supplys",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "system_power_controls of <dmi>": {
      "key": "system_power_controls of <dmi>",
      "type": "property",
      "resultType": "dmi system_power_controls",
      "singularPhrase": "system_power_controls",
      "pluralPhrase": "system_power_controlss",
      "directObjectType": "dmi"
    },
    "system_power_controls <integer> of <dmi>": {
      "key": "system_power_controls <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi system_power_controls",
      "singularPhrase": "system_power_controls",
      "pluralPhrase": "system_power_controlss",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "system_information of <dmi>": {
      "key": "system_information of <dmi>",
      "type": "property",
      "resultType": "dmi system_information",
      "singularPhrase": "system_information",
      "pluralPhrase": "system_informations",
      "directObjectType": "dmi"
    },
    "system_information <integer> of <dmi>": {
      "key": "system_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi system_information",
      "singularPhrase": "system_information",
      "pluralPhrase": "system_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "system_enclosure_or_chassis of <dmi>": {
      "key": "system_enclosure_or_chassis of <dmi>",
      "type": "property",
      "resultType": "dmi system_enclosure_or_chassis",
      "singularPhrase": "system_enclosure_or_chassis",
      "pluralPhrase": "system_enclosure_or_chassiss",
      "directObjectType": "dmi"
    },
    "system_enclosure_or_chassis <integer> of <dmi>": {
      "key": "system_enclosure_or_chassis <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi system_enclosure_or_chassis",
      "singularPhrase": "system_enclosure_or_chassis",
      "pluralPhrase": "system_enclosure_or_chassiss",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "system_configuration_option of <dmi>": {
      "key": "system_configuration_option of <dmi>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "system_configuration_option",
      "pluralPhrase": "system_configuration_options",
      "directObjectType": "dmi"
    },
    "system_configuration_option <integer> of <dmi>": {
      "key": "system_configuration_option <integer> of <dmi>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "system_configuration_option",
      "pluralPhrase": "system_configuration_options",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "system_boot_information of <dmi>": {
      "key": "system_boot_information of <dmi>",
      "type": "property",
      "resultType": "dmi system_boot_information",
      "singularPhrase": "system_boot_information",
      "pluralPhrase": "system_boot_informations",
      "directObjectType": "dmi"
    },
    "system_boot_information <integer> of <dmi>": {
      "key": "system_boot_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi system_boot_information",
      "singularPhrase": "system_boot_information",
      "pluralPhrase": "system_boot_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "processor_information of <dmi>": {
      "key": "processor_information of <dmi>",
      "type": "property",
      "resultType": "dmi processor_information",
      "singularPhrase": "processor_information",
      "pluralPhrase": "processor_informations",
      "directObjectType": "dmi"
    },
    "processor_information <integer> of <dmi>": {
      "key": "processor_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi processor_information",
      "singularPhrase": "processor_information",
      "pluralPhrase": "processor_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "portable_battery of <dmi>": {
      "key": "portable_battery of <dmi>",
      "type": "property",
      "resultType": "dmi portable_battery",
      "singularPhrase": "portable_battery",
      "pluralPhrase": "portable_batterys",
      "directObjectType": "dmi"
    },
    "portable_battery <integer> of <dmi>": {
      "key": "portable_battery <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi portable_battery",
      "singularPhrase": "portable_battery",
      "pluralPhrase": "portable_batterys",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "port_connector_information of <dmi>": {
      "key": "port_connector_information of <dmi>",
      "type": "property",
      "resultType": "dmi port_connector_information",
      "singularPhrase": "port_connector_information",
      "pluralPhrase": "port_connector_informations",
      "directObjectType": "dmi"
    },
    "port_connector_information <integer> of <dmi>": {
      "key": "port_connector_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi port_connector_information",
      "singularPhrase": "port_connector_information",
      "pluralPhrase": "port_connector_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "physical_memory_array of <dmi>": {
      "key": "physical_memory_array of <dmi>",
      "type": "property",
      "resultType": "dmi physical_memory_array",
      "singularPhrase": "physical_memory_array",
      "pluralPhrase": "physical_memory_arrays",
      "directObjectType": "dmi"
    },
    "physical_memory_array <integer> of <dmi>": {
      "key": "physical_memory_array <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi physical_memory_array",
      "singularPhrase": "physical_memory_array",
      "pluralPhrase": "physical_memory_arrays",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "out_of_band_remote_access of <dmi>": {
      "key": "out_of_band_remote_access of <dmi>",
      "type": "property",
      "resultType": "dmi out_of_band_remote_access",
      "singularPhrase": "out_of_band_remote_access",
      "pluralPhrase": "out_of_band_remote_accesss",
      "directObjectType": "dmi"
    },
    "out_of_band_remote_access <integer> of <dmi>": {
      "key": "out_of_band_remote_access <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi out_of_band_remote_access",
      "singularPhrase": "out_of_band_remote_access",
      "pluralPhrase": "out_of_band_remote_accesss",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "onboard_devices_extended_information of <dmi>": {
      "key": "onboard_devices_extended_information of <dmi>",
      "type": "property",
      "resultType": "dmi onboard_devices_extended_information",
      "singularPhrase": "onboard_devices_extended_information",
      "pluralPhrase": "onboard_devices_extended_informations",
      "directObjectType": "dmi"
    },
    "onboard_devices_extended_information <integer> of <dmi>": {
      "key": "onboard_devices_extended_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi onboard_devices_extended_information",
      "singularPhrase": "onboard_devices_extended_information",
      "pluralPhrase": "onboard_devices_extended_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "on_board_devices_information of <dmi>": {
      "key": "on_board_devices_information of <dmi>",
      "type": "property",
      "resultType": "dmi on_board_devices_information",
      "singularPhrase": "on_board_devices_information",
      "pluralPhrase": "on_board_devices_informations",
      "directObjectType": "dmi"
    },
    "on_board_devices_information <integer> of <dmi>": {
      "key": "on_board_devices_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi on_board_devices_information",
      "singularPhrase": "on_board_devices_information",
      "pluralPhrase": "on_board_devices_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "oem_string of <dmi>": {
      "key": "oem_string of <dmi>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "oem_string",
      "pluralPhrase": "oem_strings",
      "directObjectType": "dmi"
    },
    "oem_string <integer> of <dmi>": {
      "key": "oem_string <integer> of <dmi>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "oem_string",
      "pluralPhrase": "oem_strings",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "memory_module_information of <dmi>": {
      "key": "memory_module_information of <dmi>",
      "type": "property",
      "resultType": "dmi memory_module_information",
      "singularPhrase": "memory_module_information",
      "pluralPhrase": "memory_module_informations",
      "directObjectType": "dmi"
    },
    "memory_module_information <integer> of <dmi>": {
      "key": "memory_module_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi memory_module_information",
      "singularPhrase": "memory_module_information",
      "pluralPhrase": "memory_module_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "memory_device_mapped_address of <dmi>": {
      "key": "memory_device_mapped_address of <dmi>",
      "type": "property",
      "resultType": "dmi memory_device_mapped_address",
      "singularPhrase": "memory_device_mapped_address",
      "pluralPhrase": "memory_device_mapped_addresss",
      "directObjectType": "dmi"
    },
    "memory_device_mapped_address <integer> of <dmi>": {
      "key": "memory_device_mapped_address <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi memory_device_mapped_address",
      "singularPhrase": "memory_device_mapped_address",
      "pluralPhrase": "memory_device_mapped_addresss",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "memory_device of <dmi>": {
      "key": "memory_device of <dmi>",
      "type": "property",
      "resultType": "dmi memory_device",
      "singularPhrase": "memory_device",
      "pluralPhrase": "memory_devices",
      "directObjectType": "dmi"
    },
    "memory_device <integer> of <dmi>": {
      "key": "memory_device <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi memory_device",
      "singularPhrase": "memory_device",
      "pluralPhrase": "memory_devices",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "memory_controller_information of <dmi>": {
      "key": "memory_controller_information of <dmi>",
      "type": "property",
      "resultType": "dmi memory_controller_information",
      "singularPhrase": "memory_controller_information",
      "pluralPhrase": "memory_controller_informations",
      "directObjectType": "dmi"
    },
    "memory_controller_information <integer> of <dmi>": {
      "key": "memory_controller_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi memory_controller_information",
      "singularPhrase": "memory_controller_information",
      "pluralPhrase": "memory_controller_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "memory_channel of <dmi>": {
      "key": "memory_channel of <dmi>",
      "type": "property",
      "resultType": "dmi memory_channel",
      "singularPhrase": "memory_channel",
      "pluralPhrase": "memory_channels",
      "directObjectType": "dmi"
    },
    "memory_channel <integer> of <dmi>": {
      "key": "memory_channel <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi memory_channel",
      "singularPhrase": "memory_channel",
      "pluralPhrase": "memory_channels",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "memory_array_mapped_address of <dmi>": {
      "key": "memory_array_mapped_address of <dmi>",
      "type": "property",
      "resultType": "dmi memory_array_mapped_address",
      "singularPhrase": "memory_array_mapped_address",
      "pluralPhrase": "memory_array_mapped_addresss",
      "directObjectType": "dmi"
    },
    "memory_array_mapped_address <integer> of <dmi>": {
      "key": "memory_array_mapped_address <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi memory_array_mapped_address",
      "singularPhrase": "memory_array_mapped_address",
      "pluralPhrase": "memory_array_mapped_addresss",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "management_device_threshold_data of <dmi>": {
      "key": "management_device_threshold_data of <dmi>",
      "type": "property",
      "resultType": "dmi management_device_threshold_data",
      "singularPhrase": "management_device_threshold_data",
      "pluralPhrase": "management_device_threshold_datas",
      "directObjectType": "dmi"
    },
    "management_device_threshold_data <integer> of <dmi>": {
      "key": "management_device_threshold_data <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi management_device_threshold_data",
      "singularPhrase": "management_device_threshold_data",
      "pluralPhrase": "management_device_threshold_datas",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "management_device_component of <dmi>": {
      "key": "management_device_component of <dmi>",
      "type": "property",
      "resultType": "dmi management_device_component",
      "singularPhrase": "management_device_component",
      "pluralPhrase": "management_device_components",
      "directObjectType": "dmi"
    },
    "management_device_component <integer> of <dmi>": {
      "key": "management_device_component <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi management_device_component",
      "singularPhrase": "management_device_component",
      "pluralPhrase": "management_device_components",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "management_device of <dmi>": {
      "key": "management_device of <dmi>",
      "type": "property",
      "resultType": "dmi management_device",
      "singularPhrase": "management_device",
      "pluralPhrase": "management_devices",
      "directObjectType": "dmi"
    },
    "management_device <integer> of <dmi>": {
      "key": "management_device <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi management_device",
      "singularPhrase": "management_device",
      "pluralPhrase": "management_devices",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "ipmi_device_information of <dmi>": {
      "key": "ipmi_device_information of <dmi>",
      "type": "property",
      "resultType": "dmi ipmi_device_information",
      "singularPhrase": "ipmi_device_information",
      "pluralPhrase": "ipmi_device_informations",
      "directObjectType": "dmi"
    },
    "ipmi_device_information <integer> of <dmi>": {
      "key": "ipmi_device_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi ipmi_device_information",
      "singularPhrase": "ipmi_device_information",
      "pluralPhrase": "ipmi_device_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "inactive of <dmi>": {
      "key": "inactive of <dmi>",
      "type": "property",
      "resultType": "dmi inactive",
      "singularPhrase": "inactive",
      "pluralPhrase": "inactives",
      "directObjectType": "dmi"
    },
    "inactive <integer> of <dmi>": {
      "key": "inactive <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi inactive",
      "singularPhrase": "inactive",
      "pluralPhrase": "inactives",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "hardware_security of <dmi>": {
      "key": "hardware_security of <dmi>",
      "type": "property",
      "resultType": "dmi hardware_security",
      "singularPhrase": "hardware_security",
      "pluralPhrase": "hardware_securitys",
      "directObjectType": "dmi"
    },
    "hardware_security <integer> of <dmi>": {
      "key": "hardware_security <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi hardware_security",
      "singularPhrase": "hardware_security",
      "pluralPhrase": "hardware_securitys",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "group_associations of <dmi>": {
      "key": "group_associations of <dmi>",
      "type": "property",
      "resultType": "dmi group_associations",
      "singularPhrase": "group_associations",
      "pluralPhrase": "group_associationss",
      "directObjectType": "dmi"
    },
    "group_associations <integer> of <dmi>": {
      "key": "group_associations <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi group_associations",
      "singularPhrase": "group_associations",
      "pluralPhrase": "group_associationss",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "end_of_table of <dmi>": {
      "key": "end_of_table of <dmi>",
      "type": "property",
      "resultType": "dmi end_of_table",
      "singularPhrase": "end_of_table",
      "pluralPhrase": "end_of_tables",
      "directObjectType": "dmi"
    },
    "end_of_table <integer> of <dmi>": {
      "key": "end_of_table <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi end_of_table",
      "singularPhrase": "end_of_table",
      "pluralPhrase": "end_of_tables",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "electrical_current_probe of <dmi>": {
      "key": "electrical_current_probe of <dmi>",
      "type": "property",
      "resultType": "dmi electrical_current_probe",
      "singularPhrase": "electrical_current_probe",
      "pluralPhrase": "electrical_current_probes",
      "directObjectType": "dmi"
    },
    "electrical_current_probe <integer> of <dmi>": {
      "key": "electrical_current_probe <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi electrical_current_probe",
      "singularPhrase": "electrical_current_probe",
      "pluralPhrase": "electrical_current_probes",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "cooling_device of <dmi>": {
      "key": "cooling_device of <dmi>",
      "type": "property",
      "resultType": "dmi cooling_device",
      "singularPhrase": "cooling_device",
      "pluralPhrase": "cooling_devices",
      "directObjectType": "dmi"
    },
    "cooling_device <integer> of <dmi>": {
      "key": "cooling_device <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi cooling_device",
      "singularPhrase": "cooling_device",
      "pluralPhrase": "cooling_devices",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "cache_information of <dmi>": {
      "key": "cache_information of <dmi>",
      "type": "property",
      "resultType": "dmi cache_information",
      "singularPhrase": "cache_information",
      "pluralPhrase": "cache_informations",
      "directObjectType": "dmi"
    },
    "cache_information <integer> of <dmi>": {
      "key": "cache_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi cache_information",
      "singularPhrase": "cache_information",
      "pluralPhrase": "cache_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "built_in_pointing_device of <dmi>": {
      "key": "built_in_pointing_device of <dmi>",
      "type": "property",
      "resultType": "dmi built_in_pointing_device",
      "singularPhrase": "built_in_pointing_device",
      "pluralPhrase": "built_in_pointing_devices",
      "directObjectType": "dmi"
    },
    "built_in_pointing_device <integer> of <dmi>": {
      "key": "built_in_pointing_device <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi built_in_pointing_device",
      "singularPhrase": "built_in_pointing_device",
      "pluralPhrase": "built_in_pointing_devices",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "bios_language_information of <dmi>": {
      "key": "bios_language_information of <dmi>",
      "type": "property",
      "resultType": "dmi bios_language_information",
      "singularPhrase": "bios_language_information",
      "pluralPhrase": "bios_language_informations",
      "directObjectType": "dmi"
    },
    "bios_language_information <integer> of <dmi>": {
      "key": "bios_language_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi bios_language_information",
      "singularPhrase": "bios_language_information",
      "pluralPhrase": "bios_language_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "bios_information of <dmi>": {
      "key": "bios_information of <dmi>",
      "type": "property",
      "resultType": "dmi bios_information",
      "singularPhrase": "bios_information",
      "pluralPhrase": "bios_informations",
      "directObjectType": "dmi"
    },
    "bios_information <integer> of <dmi>": {
      "key": "bios_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi bios_information",
      "singularPhrase": "bios_information",
      "pluralPhrase": "bios_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "base_board_information of <dmi>": {
      "key": "base_board_information of <dmi>",
      "type": "property",
      "resultType": "dmi base_board_information",
      "singularPhrase": "base_board_information",
      "pluralPhrase": "base_board_informations",
      "directObjectType": "dmi"
    },
    "base_board_information <integer> of <dmi>": {
      "key": "base_board_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi base_board_information",
      "singularPhrase": "base_board_information",
      "pluralPhrase": "base_board_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "b64_bit_memory_error_information of <dmi>": {
      "key": "b64_bit_memory_error_information of <dmi>",
      "type": "property",
      "resultType": "dmi b64_bit_memory_error_information",
      "singularPhrase": "b64_bit_memory_error_information",
      "pluralPhrase": "b64_bit_memory_error_informations",
      "directObjectType": "dmi"
    },
    "b64_bit_memory_error_information <integer> of <dmi>": {
      "key": "b64_bit_memory_error_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi b64_bit_memory_error_information",
      "singularPhrase": "b64_bit_memory_error_information",
      "pluralPhrase": "b64_bit_memory_error_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "b32_bit_memory_error_information of <dmi>": {
      "key": "b32_bit_memory_error_information of <dmi>",
      "type": "property",
      "resultType": "dmi b32_bit_memory_error_information",
      "singularPhrase": "b32_bit_memory_error_information",
      "pluralPhrase": "b32_bit_memory_error_informations",
      "directObjectType": "dmi"
    },
    "b32_bit_memory_error_information <integer> of <dmi>": {
      "key": "b32_bit_memory_error_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi b32_bit_memory_error_information",
      "singularPhrase": "b32_bit_memory_error_information",
      "pluralPhrase": "b32_bit_memory_error_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "additional_information of <dmi>": {
      "key": "additional_information of <dmi>",
      "type": "property",
      "resultType": "dmi additional_information",
      "singularPhrase": "additional_information",
      "pluralPhrase": "additional_informations",
      "directObjectType": "dmi"
    },
    "additional_information <integer> of <dmi>": {
      "key": "additional_information <integer> of <dmi>",
      "type": "property",
      "resultType": "dmi additional_information",
      "singularPhrase": "additional_information",
      "pluralPhrase": "additional_informations",
      "indexType": "integer",
      "directObjectType": "dmi"
    },
    "minor of <device file>": {
      "key": "minor of <device file>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minor",
      "pluralPhrase": "minors",
      "directObjectType": "device file"
    },
    "major of <device file>": {
      "key": "major of <device file>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "major",
      "pluralPhrase": "majors",
      "directObjectType": "device file"
    },
    "filesystem of <device file>": {
      "key": "filesystem of <device file>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "filesystem",
      "pluralPhrase": "filesystems",
      "directObjectType": "device file"
    },
    "drive of <device file>": {
      "key": "drive of <device file>",
      "type": "property",
      "resultType": "filesystem",
      "singularPhrase": "drive",
      "pluralPhrase": "drives",
      "directObjectType": "device file"
    },
    "device type of <device file>": {
      "key": "device type of <device file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device type",
      "pluralPhrase": "device types",
      "directObjectType": "device file"
    },
    "version of <current relay>": {
      "key": "version of <current relay>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "current relay"
    },
    "encrypt report of <client_cryptography>": {
      "key": "encrypt report of <client_cryptography>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "encrypt report",
      "pluralPhrase": "encrypt reports",
      "directObjectType": "client_cryptography"
    },
    "encrypt report failure message of <client_cryptography>": {
      "key": "encrypt report failure message of <client_cryptography>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "encrypt report failure message",
      "pluralPhrase": "encrypt report failure messages",
      "directObjectType": "client_cryptography"
    },
    "desired encrypt report of <client_cryptography>": {
      "key": "desired encrypt report of <client_cryptography>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "desired encrypt report",
      "pluralPhrase": "desired encrypt reports",
      "directObjectType": "client_cryptography"
    },
    "version of <client>": {
      "key": "version of <client>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "client"
    },
    "upload progress of <client>": {
      "key": "upload progress of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "upload progress",
      "pluralPhrase": "upload progresses",
      "directObjectType": "client"
    },
    "setting of <client>": {
      "key": "setting of <client>",
      "type": "property",
      "resultType": "setting",
      "singularPhrase": "setting",
      "pluralPhrase": "settings",
      "directObjectType": "client"
    },
    "setting <string> of <client>": {
      "key": "setting <string> of <client>",
      "type": "property",
      "resultType": "setting",
      "singularPhrase": "setting",
      "pluralPhrase": "settings",
      "indexType": "string",
      "directObjectType": "client"
    },
    "registration subnet address of <client>": {
      "key": "registration subnet address of <client>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "registration subnet address",
      "pluralPhrase": "registration subnet addresses",
      "directObjectType": "client"
    },
    "registration mac address of <client>": {
      "key": "registration mac address of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "registration mac address",
      "pluralPhrase": "registration mac addresses",
      "directObjectType": "client"
    },
    "registration cidr address of <client>": {
      "key": "registration cidr address of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "registration cidr address",
      "pluralPhrase": "registration cidr addresses",
      "directObjectType": "client"
    },
    "registration address of <client>": {
      "key": "registration address of <client>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "registration address",
      "pluralPhrase": "registration addresses",
      "directObjectType": "client"
    },
    "evaluationcycle of <client>": {
      "key": "evaluationcycle of <client>",
      "type": "property",
      "resultType": "evaluation cycle",
      "singularPhrase": "evaluationcycle",
      "pluralPhrase": "evaluationcycles",
      "directObjectType": "client"
    },
    "administrator of <client>": {
      "key": "administrator of <client>",
      "type": "property",
      "resultType": "setting",
      "singularPhrase": "administrator",
      "pluralPhrase": "administrators",
      "directObjectType": "client"
    },
    "administrator <string> of <client>": {
      "key": "administrator <string> of <client>",
      "type": "property",
      "resultType": "setting",
      "singularPhrase": "administrator",
      "pluralPhrase": "administrators",
      "indexType": "string",
      "directObjectType": "client"
    },
    "administrative rights of <client>": {
      "key": "administrative rights of <client>",
      "type": "property",
      "resultType": "administrative rights",
      "singularPhrase": "administrative rights",
      "pluralPhrase": "administrative rightss",
      "directObjectType": "client"
    },
    "version of <capability>": {
      "key": "version of <capability>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "capability"
    },
    "relation of <capability>": {
      "key": "relation of <capability>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "relation",
      "pluralPhrase": "relations",
      "directObjectType": "capability"
    },
    "name of <capability>": {
      "key": "name of <capability>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "capability"
    },
    "<capability> contains <capability>": {
      "key": "<capability> contains <capability>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "capability",
      "op": "contains",
      "rightType": "capability"
    },
    "<capability> as string": {
      "key": "<capability> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "capability",
      "phrase": "string"
    },
    "version of <bios>": {
      "key": "version of <bios>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "bios"
    },
    "date of <bios>": {
      "key": "date of <bios>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "date",
      "pluralPhrase": "dates",
      "directObjectType": "bios"
    },
    "<bios> as string": {
      "key": "<bios> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "bios",
      "phrase": "string"
    },
    "version of <application usage summary instance>": {
      "key": "version of <application usage summary instance>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "application usage summary instance"
    },
    "total run count of <application usage summary instance>": {
      "key": "total run count of <application usage summary instance>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total run count",
      "pluralPhrase": "total run counts",
      "directObjectType": "application usage summary instance"
    },
    "total duration of <application usage summary instance>": {
      "key": "total duration of <application usage summary instance>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "total duration",
      "pluralPhrase": "total durations",
      "directObjectType": "application usage summary instance"
    },
    "string version of <application usage summary instance>": {
      "key": "string version of <application usage summary instance>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "string version",
      "pluralPhrase": "string versions",
      "directObjectType": "application usage summary instance"
    },
    "size of <application usage summary instance>": {
      "key": "size of <application usage summary instance>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "application usage summary instance"
    },
    "name of <application usage summary instance>": {
      "key": "name of <application usage summary instance>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "application usage summary instance"
    },
    "last time seen of <application usage summary instance>": {
      "key": "last time seen of <application usage summary instance>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last time seen",
      "pluralPhrase": "last times seen",
      "directObjectType": "application usage summary instance"
    },
    "last start time of <application usage summary instance>": {
      "key": "last start time of <application usage summary instance>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last start time",
      "pluralPhrase": "last start times",
      "directObjectType": "application usage summary instance"
    },
    "first start time of <application usage summary instance>": {
      "key": "first start time of <application usage summary instance>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "first start time",
      "pluralPhrase": "first start times",
      "directObjectType": "application usage summary instance"
    },
    "total run count of <application usage summary>": {
      "key": "total run count of <application usage summary>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total run count",
      "pluralPhrase": "total run counts",
      "directObjectType": "application usage summary"
    },
    "total duration of <application usage summary>": {
      "key": "total duration of <application usage summary>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "total duration",
      "pluralPhrase": "total durations",
      "directObjectType": "application usage summary"
    },
    "running of <application usage summary>": {
      "key": "running of <application usage summary>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "running",
      "pluralPhrase": "runnings",
      "directObjectType": "application usage summary"
    },
    "name of <application usage summary>": {
      "key": "name of <application usage summary>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "application usage summary"
    },
    "last time seen of <application usage summary>": {
      "key": "last time seen of <application usage summary>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last time seen",
      "pluralPhrase": "last times seen",
      "directObjectType": "application usage summary"
    },
    "last start time of <application usage summary>": {
      "key": "last start time of <application usage summary>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last start time",
      "pluralPhrase": "last start times",
      "directObjectType": "application usage summary"
    },
    "instance of <application usage summary>": {
      "key": "instance of <application usage summary>",
      "type": "property",
      "resultType": "application usage summary instance",
      "singularPhrase": "instance",
      "pluralPhrase": "instances",
      "directObjectType": "application usage summary"
    },
    "first start time of <application usage summary>": {
      "key": "first start time of <application usage summary>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "first start time",
      "pluralPhrase": "first start times",
      "directObjectType": "application usage summary"
    },
    "last time of <analysis>": {
      "key": "last time of <analysis>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last time",
      "pluralPhrase": "last times",
      "directObjectType": "analysis"
    },
    "enabled of <administrative rights>": {
      "key": "enabled of <administrative rights>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "administrative rights"
    },
    "locked of <action lock state>": {
      "key": "locked of <action lock state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "locked",
      "pluralPhrase": "lockeds",
      "directObjectType": "action lock state"
    },
    "lock string of <action lock state>": {
      "key": "lock string of <action lock state>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "lock string",
      "pluralPhrase": "lock strings",
      "directObjectType": "action lock state"
    },
    "expiration date of <action lock state>": {
      "key": "expiration date of <action lock state>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "expiration date",
      "pluralPhrase": "expiration dates",
      "directObjectType": "action lock state"
    },
    "effective date of <action lock state>": {
      "key": "effective date of <action lock state>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "effective date",
      "pluralPhrase": "effective dates",
      "directObjectType": "action lock state"
    },
    "controller of <action lock state>": {
      "key": "controller of <action lock state>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "controller",
      "pluralPhrase": "controllers",
      "directObjectType": "action lock state"
    },
    "<action lock state> as string": {
      "key": "<action lock state> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "action lock state",
      "phrase": "string"
    },
    "waiting for download of <action>": {
      "key": "waiting for download of <action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "waiting for download",
      "pluralPhrase": "waiting for downloads",
      "directObjectType": "action"
    },
    "system constraint of <action>": {
      "key": "system constraint of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "system constraint",
      "pluralPhrase": "system constraints",
      "directObjectType": "action"
    },
    "status of <action>": {
      "key": "status of <action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "status",
      "pluralPhrase": "statuss",
      "directObjectType": "action"
    },
    "persistent constraint of <action>": {
      "key": "persistent constraint of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "persistent constraint",
      "pluralPhrase": "persistent constraints",
      "directObjectType": "action"
    },
    "pending time of <action>": {
      "key": "pending time of <action>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "pending time",
      "pluralPhrase": "pending times",
      "directObjectType": "action"
    },
    "pending restart of <action>": {
      "key": "pending restart of <action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "pending restart",
      "pluralPhrase": "pending restarts",
      "directObjectType": "action"
    },
    "pending of <action>": {
      "key": "pending of <action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "pending",
      "pluralPhrase": "pendings",
      "directObjectType": "action"
    },
    "pending login of <action>": {
      "key": "pending login of <action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "pending login",
      "pluralPhrase": "pending logins",
      "directObjectType": "action"
    },
    "parameter <string> of <action>": {
      "key": "parameter <string> of <action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "parameter",
      "pluralPhrase": "parameters",
      "indexType": "string",
      "directObjectType": "action"
    },
    "origin fixlet id of <action>": {
      "key": "origin fixlet id of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "origin fixlet id",
      "pluralPhrase": "origin fixlet ids",
      "directObjectType": "action"
    },
    "offer of <action>": {
      "key": "offer of <action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "offer",
      "pluralPhrase": "offers",
      "directObjectType": "action"
    },
    "offer accepted of <action>": {
      "key": "offer accepted of <action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "offer accepted",
      "pluralPhrase": "offer accepteds",
      "directObjectType": "action"
    },
    "last change time of <action>": {
      "key": "last change time of <action>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last change time",
      "pluralPhrase": "last change times",
      "directObjectType": "action"
    },
    "last active time of <action>": {
      "key": "last active time of <action>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last active time",
      "pluralPhrase": "last active times",
      "directObjectType": "action"
    },
    "last active line number of <action>": {
      "key": "last active line number of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "last active line number",
      "pluralPhrase": "last active line numbers",
      "directObjectType": "action"
    },
    "id of <action>": {
      "key": "id of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "action"
    },
    "group leader of <action>": {
      "key": "group leader of <action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "group leader",
      "pluralPhrase": "group leaders",
      "directObjectType": "action"
    },
    "first active count of <action>": {
      "key": "first active count of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "first active count",
      "pluralPhrase": "first active counts",
      "directObjectType": "action"
    },
    "exit code of <action>": {
      "key": "exit code of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "exit code",
      "pluralPhrase": "exit codes",
      "directObjectType": "action"
    },
    "download failure of <action>": {
      "key": "download failure of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "download failure",
      "pluralPhrase": "download failures",
      "directObjectType": "action"
    },
    "constraint of <action>": {
      "key": "constraint of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "constraint",
      "pluralPhrase": "constraints",
      "directObjectType": "action"
    },
    "constrained of <action>": {
      "key": "constrained of <action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "constrained",
      "pluralPhrase": "constraineds",
      "directObjectType": "action"
    },
    "complete time of <action>": {
      "key": "complete time of <action>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "complete time",
      "pluralPhrase": "complete times",
      "directObjectType": "action"
    },
    "active start time of <action>": {
      "key": "active start time of <action>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "active start time",
      "pluralPhrase": "active start times",
      "directObjectType": "action"
    },
    "active of <action>": {
      "key": "active of <action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "active",
      "pluralPhrase": "actives",
      "directObjectType": "action"
    },
    "active line number of <action>": {
      "key": "active line number of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "active line number",
      "pluralPhrase": "active line numbers",
      "directObjectType": "action"
    },
    "active count of <action>": {
      "key": "active count of <action>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "active count",
      "pluralPhrase": "active counts",
      "directObjectType": "action"
    },
    "<action> as string": {
      "key": "<action> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "action",
      "phrase": "string"
    },
    "volume": {
      "key": "volume",
      "type": "property",
      "resultType": "volume",
      "singularPhrase": "volume",
      "pluralPhrase": "volumes"
    },
    "volume settings folder": {
      "key": "volume settings folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "volume settings folder",
      "pluralPhrase": "volume settings folders"
    },
    "volume <string>": {
      "key": "volume <string>",
      "type": "property",
      "resultType": "volume",
      "singularPhrase": "volume",
      "pluralPhrase": "volumes",
      "indexType": "string"
    },
    "volume <integer>": {
      "key": "volume <integer>",
      "type": "property",
      "resultType": "volume",
      "singularPhrase": "volume",
      "pluralPhrase": "volumes",
      "indexType": "integer"
    },
    "voices folder": {
      "key": "voices folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "voices folder",
      "pluralPhrase": "voices folders"
    },
    "virtual memory": {
      "key": "virtual memory",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "virtual memory",
      "pluralPhrase": "virtual memories"
    },
    "utilities folder": {
      "key": "utilities folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "utilities folder",
      "pluralPhrase": "utilities folders"
    },
    "users folder": {
      "key": "users folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "users folder",
      "pluralPhrase": "users folders"
    },
    "user temp folder": {
      "key": "user temp folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "user temp folder",
      "pluralPhrase": "user temp folders"
    },
    "user domain": {
      "key": "user domain",
      "type": "property",
      "resultType": "domain",
      "singularPhrase": "user domain",
      "pluralPhrase": "user domains"
    },
    "usb": {
      "key": "usb",
      "type": "property",
      "resultType": "usb",
      "singularPhrase": "usb",
      "pluralPhrase": "usbs"
    },
    "themes folder": {
      "key": "themes folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "themes folder",
      "pluralPhrase": "themes folders"
    },
    "text encodings folder": {
      "key": "text encodings folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "text encodings folder",
      "pluralPhrase": "text encodings folders"
    },
    "temporary items folder": {
      "key": "temporary items folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "temporary items folder",
      "pluralPhrase": "temporary items folders"
    },
    "system version": {
      "key": "system version",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "system version",
      "pluralPhrase": "system versions"
    },
    "system domain": {
      "key": "system domain",
      "type": "property",
      "resultType": "domain",
      "singularPhrase": "system domain",
      "pluralPhrase": "system domains"
    },
    "startup items folder": {
      "key": "startup items folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "startup items folder",
      "pluralPhrase": "startup items folders"
    },
    "startup item": {
      "key": "startup item",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "startup item",
      "pluralPhrase": "startup items"
    },
    "startup item <string>": {
      "key": "startup item <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "startup item",
      "pluralPhrase": "startup items",
      "indexType": "string"
    },
    "stage <string>": {
      "key": "stage <string>",
      "type": "property",
      "resultType": "stage",
      "singularPhrase": "stage",
      "pluralPhrase": "stages",
      "indexType": "string"
    },
    "speech folder": {
      "key": "speech folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "speech folder",
      "pluralPhrase": "speech folders"
    },
    "sound folder": {
      "key": "sound folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "sound folder",
      "pluralPhrase": "sound folders"
    },
    "shutdown items folder": {
      "key": "shutdown items folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "shutdown items folder",
      "pluralPhrase": "shutdown items folders"
    },
    "shutdown item": {
      "key": "shutdown item",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "shutdown item",
      "pluralPhrase": "shutdown items"
    },
    "shutdown item <string>": {
      "key": "shutdown item <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "shutdown item",
      "pluralPhrase": "shutdown items",
      "indexType": "string"
    },
    "shared libraries folder": {
      "key": "shared libraries folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "shared libraries folder",
      "pluralPhrase": "shared libraries folders"
    },
    "shared folder": {
      "key": "shared folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "shared folder",
      "pluralPhrase": "shared folders"
    },
    "scsidevice": {
      "key": "scsidevice",
      "type": "property",
      "resultType": "scsidevice",
      "singularPhrase": "scsidevice",
      "pluralPhrase": "scsidevices"
    },
    "scsidevice <integer>": {
      "key": "scsidevice <integer>",
      "type": "property",
      "resultType": "scsidevice",
      "singularPhrase": "scsidevice",
      "pluralPhrase": "scsidevices",
      "indexType": "integer"
    },
    "scsibus": {
      "key": "scsibus",
      "type": "property",
      "resultType": "scsibus",
      "singularPhrase": "scsibus",
      "pluralPhrase": "scsibuses"
    },
    "scsibus <integer>": {
      "key": "scsibus <integer>",
      "type": "property",
      "resultType": "scsibus",
      "singularPhrase": "scsibus",
      "pluralPhrase": "scsibuses",
      "indexType": "integer"
    },
    "scripting additions folder": {
      "key": "scripting additions folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "scripting additions folder",
      "pluralPhrase": "scripting additions folders"
    },
    "rom version": {
      "key": "rom version",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "rom version",
      "pluralPhrase": "rom versions"
    },
    "registry": {
      "key": "registry",
      "type": "property",
      "resultType": "registry",
      "singularPhrase": "registry",
      "pluralPhrase": "registries"
    },
    "regapp": {
      "key": "regapp",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "regapp",
      "pluralPhrase": "regapps"
    },
    "receipts folder": {
      "key": "receipts folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "receipts folder",
      "pluralPhrase": "receipts folders"
    },
    "quicktime folder": {
      "key": "quicktime folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "quicktime folder",
      "pluralPhrase": "quicktime folders"
    },
    "quickdraw version": {
      "key": "quickdraw version",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "quickdraw version",
      "pluralPhrase": "quickdraw versions"
    },
    "private framework folder": {
      "key": "private framework folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "private framework folder",
      "pluralPhrase": "private framework folders"
    },
    "printmonitor documents folder": {
      "key": "printmonitor documents folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "printmonitor documents folder",
      "pluralPhrase": "printmonitor documents folders"
    },
    "printers folder": {
      "key": "printers folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "printers folder",
      "pluralPhrase": "printers folders"
    },
    "printer drivers folder": {
      "key": "printer drivers folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "printer drivers folder",
      "pluralPhrase": "printer drivers folders"
    },
    "printer descriptions folder": {
      "key": "printer descriptions folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "printer descriptions folder",
      "pluralPhrase": "printer descriptions folders"
    },
    "primary internet connection": {
      "key": "primary internet connection",
      "type": "property",
      "resultType": "network ip interface",
      "singularPhrase": "primary internet connection",
      "pluralPhrase": "primary internet connections"
    },
    "preferences folder": {
      "key": "preferences folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "preferences folder",
      "pluralPhrase": "preferences folders"
    },
    "preference <string>": {
      "key": "preference <string>",
      "type": "property",
      "resultType": "preference",
      "singularPhrase": "preference",
      "pluralPhrase": "preferences",
      "indexType": "string"
    },
    "powerpc": {
      "key": "powerpc",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "powerpc",
      "pluralPhrase": "powerpcs"
    },
    "posix item <string>": {
      "key": "posix item <string>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "posix item",
      "pluralPhrase": "posix items",
      "indexType": "string"
    },
    "posix folder <string>": {
      "key": "posix folder <string>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "posix folder",
      "pluralPhrase": "posix folders",
      "indexType": "string"
    },
    "posix file <string>": {
      "key": "posix file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "posix file",
      "pluralPhrase": "posix files",
      "indexType": "string"
    },
    "physical ram": {
      "key": "physical ram",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "physical ram",
      "pluralPhrase": "physical rams"
    },
    "on system disk domain": {
      "key": "on system disk domain",
      "type": "property",
      "resultType": "domain",
      "singularPhrase": "on system disk domain",
      "pluralPhrase": "on system disk domains"
    },
    "on appropriate disk domain": {
      "key": "on appropriate disk domain",
      "type": "property",
      "resultType": "domain",
      "singularPhrase": "on appropriate disk domain",
      "pluralPhrase": "on appropriate disk domains"
    },
    "nubus map": {
      "key": "nubus map",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "nubus map",
      "pluralPhrase": "nubus maps"
    },
    "network domain": {
      "key": "network domain",
      "type": "property",
      "resultType": "domain",
      "singularPhrase": "network domain",
      "pluralPhrase": "network domains"
    },
    "name registry version": {
      "key": "name registry version",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "name registry version",
      "pluralPhrase": "name registry versions"
    },
    "modem scripts folder": {
      "key": "modem scripts folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "modem scripts folder",
      "pluralPhrase": "modem scripts folders"
    },
    "macos read me folder": {
      "key": "macos read me folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "macos read me folder",
      "pluralPhrase": "macos read me folders"
    },
    "machine type": {
      "key": "machine type",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "machine type",
      "pluralPhrase": "machine types"
    },
    "machine name": {
      "key": "machine name",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "machine name",
      "pluralPhrase": "machine names"
    },
    "logical ram": {
      "key": "logical ram",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "logical ram",
      "pluralPhrase": "logical rams"
    },
    "logged on user": {
      "key": "logged on user",
      "type": "property",
      "resultType": "logged on user",
      "singularPhrase": "logged on user",
      "pluralPhrase": "logged on users"
    },
    "locations folder": {
      "key": "locations folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "locations folder",
      "pluralPhrase": "locations folders"
    },
    "location manager preferences folder": {
      "key": "location manager preferences folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "location manager preferences folder",
      "pluralPhrase": "location manager preferences folders"
    },
    "location manager modules folder": {
      "key": "location manager modules folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "location manager modules folder",
      "pluralPhrase": "location manager modules folders"
    },
    "locales folder": {
      "key": "locales folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "locales folder",
      "pluralPhrase": "locales folders"
    },
    "local domain": {
      "key": "local domain",
      "type": "property",
      "resultType": "domain",
      "singularPhrase": "local domain",
      "pluralPhrase": "local domains"
    },
    "keyboard type": {
      "key": "keyboard type",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "keyboard type",
      "pluralPhrase": "keyboard types"
    },
    "kernel extensions folder": {
      "key": "kernel extensions folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "kernel extensions folder",
      "pluralPhrase": "kernel extensions folders"
    },
    "item <string>": {
      "key": "item <string>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "item",
      "pluralPhrase": "items",
      "indexType": "string"
    },
    "iss download folder": {
      "key": "iss download folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "iss download folder",
      "pluralPhrase": "iss download folders"
    },
    "iokit registry": {
      "key": "iokit registry",
      "type": "property",
      "resultType": "registryroot",
      "singularPhrase": "iokit registry",
      "pluralPhrase": "iokit registries"
    },
    "internet plugins folder": {
      "key": "internet plugins folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "internet plugins folder",
      "pluralPhrase": "internet plugins folders"
    },
    "hfs item <string>": {
      "key": "hfs item <string>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "hfs item",
      "pluralPhrase": "hfs items",
      "indexType": "string"
    },
    "hfs folder <string>": {
      "key": "hfs folder <string>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "hfs folder",
      "pluralPhrase": "hfs folders",
      "indexType": "string"
    },
    "hfs file <string>": {
      "key": "hfs file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "hfs file",
      "pluralPhrase": "hfs files",
      "indexType": "string"
    },
    "help folder": {
      "key": "help folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "help folder",
      "pluralPhrase": "help folders"
    },
    "gestalt <string>": {
      "key": "gestalt <string>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "gestalt",
      "pluralPhrase": "gestalts",
      "indexType": "string"
    },
    "framework folder": {
      "key": "framework folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "framework folder",
      "pluralPhrase": "framework folders"
    },
    "framework <string>": {
      "key": "framework <string>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "framework",
      "pluralPhrase": "frameworks",
      "indexType": "string"
    },
    "fonts folder": {
      "key": "fonts folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "fonts folder",
      "pluralPhrase": "fonts folders"
    },
    "filesystem <integer>": {
      "key": "filesystem <integer>",
      "type": "property",
      "resultType": "volume",
      "singularPhrase": "filesystem",
      "pluralPhrase": "filesystems",
      "indexType": "integer"
    },
    "file type <string>": {
      "key": "file type <string>",
      "type": "property",
      "resultType": "file type",
      "singularPhrase": "file type",
      "pluralPhrase": "file types",
      "indexType": "string"
    },
    "file signature <string>": {
      "key": "file signature <string>",
      "type": "property",
      "resultType": "file signature",
      "singularPhrase": "file signature",
      "pluralPhrase": "file signatures",
      "indexType": "string"
    },
    "favorites folder": {
      "key": "favorites folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "favorites folder",
      "pluralPhrase": "favorites folders"
    },
    "extensions folder": {
      "key": "extensions folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "extensions folder",
      "pluralPhrase": "extensions folders"
    },
    "extension": {
      "key": "extension",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "extension",
      "pluralPhrase": "extensions"
    },
    "extension <string>": {
      "key": "extension <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "extension",
      "pluralPhrase": "extensions",
      "indexType": "string"
    },
    "enabled startup item": {
      "key": "enabled startup item",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "enabled startup item",
      "pluralPhrase": "enabled startup items"
    },
    "enabled startup item <string>": {
      "key": "enabled startup item <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "enabled startup item",
      "pluralPhrase": "enabled startup items",
      "indexType": "string"
    },
    "enabled shutdown item": {
      "key": "enabled shutdown item",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "enabled shutdown item",
      "pluralPhrase": "enabled shutdown items"
    },
    "enabled shutdown item <string>": {
      "key": "enabled shutdown item <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "enabled shutdown item",
      "pluralPhrase": "enabled shutdown items",
      "indexType": "string"
    },
    "enabled extension": {
      "key": "enabled extension",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "enabled extension",
      "pluralPhrase": "enabled extensions"
    },
    "enabled extension <string>": {
      "key": "enabled extension <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "enabled extension",
      "pluralPhrase": "enabled extensions",
      "indexType": "string"
    },
    "enabled control panel": {
      "key": "enabled control panel",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "enabled control panel",
      "pluralPhrase": "enabled control panels"
    },
    "enabled control panel <string>": {
      "key": "enabled control panel <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "enabled control panel",
      "pluralPhrase": "enabled control panels",
      "indexType": "string"
    },
    "drive <integer>": {
      "key": "drive <integer>",
      "type": "property",
      "resultType": "volume",
      "singularPhrase": "drive",
      "pluralPhrase": "drives",
      "indexType": "integer"
    },
    "domain top folder": {
      "key": "domain top folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "domain top folder",
      "pluralPhrase": "domain top folders"
    },
    "domain library folder": {
      "key": "domain library folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "domain library folder",
      "pluralPhrase": "domain library folders"
    },
    "documents folder": {
      "key": "documents folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "documents folder",
      "pluralPhrase": "documents folders"
    },
    "documentation folder": {
      "key": "documentation folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "documentation folder",
      "pluralPhrase": "documentation folders"
    },
    "disabled system extensions folder": {
      "key": "disabled system extensions folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled system extensions folder",
      "pluralPhrase": "disabled system extensions folders"
    },
    "disabled startup items folder": {
      "key": "disabled startup items folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled startup items folder",
      "pluralPhrase": "disabled startup items folders"
    },
    "disabled startup item": {
      "key": "disabled startup item",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "disabled startup item",
      "pluralPhrase": "disabled startup items"
    },
    "disabled startup item <string>": {
      "key": "disabled startup item <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "disabled startup item",
      "pluralPhrase": "disabled startup items",
      "indexType": "string"
    },
    "disabled shutdown items folder": {
      "key": "disabled shutdown items folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled shutdown items folder",
      "pluralPhrase": "disabled shutdown items folders"
    },
    "disabled shutdown item": {
      "key": "disabled shutdown item",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "disabled shutdown item",
      "pluralPhrase": "disabled shutdown items"
    },
    "disabled shutdown item <string>": {
      "key": "disabled shutdown item <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "disabled shutdown item",
      "pluralPhrase": "disabled shutdown items",
      "indexType": "string"
    },
    "disabled extensions folder": {
      "key": "disabled extensions folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled extensions folder",
      "pluralPhrase": "disabled extensions folders"
    },
    "disabled extension": {
      "key": "disabled extension",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "disabled extension",
      "pluralPhrase": "disabled extensions"
    },
    "disabled extension <string>": {
      "key": "disabled extension <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "disabled extension",
      "pluralPhrase": "disabled extensions",
      "indexType": "string"
    },
    "disabled control panels folder": {
      "key": "disabled control panels folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled control panels folder",
      "pluralPhrase": "disabled control panels folders"
    },
    "disabled control panel": {
      "key": "disabled control panel",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "disabled control panel",
      "pluralPhrase": "disabled control panels"
    },
    "disabled control panel <string>": {
      "key": "disabled control panel <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "disabled control panel",
      "pluralPhrase": "disabled control panels",
      "indexType": "string"
    },
    "developer help folder": {
      "key": "developer help folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "developer help folder",
      "pluralPhrase": "developer help folders"
    },
    "developer folder": {
      "key": "developer folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "developer folder",
      "pluralPhrase": "developer folders"
    },
    "developer docs folder": {
      "key": "developer docs folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "developer docs folder",
      "pluralPhrase": "developer docs folders"
    },
    "desktop folder": {
      "key": "desktop folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "desktop folder",
      "pluralPhrase": "desktop folders"
    },
    "current user folder": {
      "key": "current user folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "current user folder",
      "pluralPhrase": "current user folders"
    },
    "cpu speed": {
      "key": "cpu speed",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cpu speed",
      "pluralPhrase": "cpu speeds"
    },
    "country <string>": {
      "key": "country <string>",
      "type": "property",
      "resultType": "country",
      "singularPhrase": "country",
      "pluralPhrase": "countries",
      "indexType": "string"
    },
    "core services folder": {
      "key": "core services folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "core services folder",
      "pluralPhrase": "core services folders"
    },
    "control strip modules folder": {
      "key": "control strip modules folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "control strip modules folder",
      "pluralPhrase": "control strip modules folders"
    },
    "control panels folder": {
      "key": "control panels folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "control panels folder",
      "pluralPhrase": "control panels folders"
    },
    "control panel": {
      "key": "control panel",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "control panel",
      "pluralPhrase": "control panels"
    },
    "control panel <string>": {
      "key": "control panel <string>",
      "type": "property",
      "resultType": "enableable_file",
      "singularPhrase": "control panel",
      "pluralPhrase": "control panels",
      "indexType": "string"
    },
    "contextual menu items folder": {
      "key": "contextual menu items folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "contextual menu items folder",
      "pluralPhrase": "contextual menu items folders"
    },
    "computer": {
      "key": "computer",
      "type": "property",
      "resultType": "computer",
      "singularPhrase": "computer",
      "pluralPhrase": "computers"
    },
    "component": {
      "key": "component",
      "type": "property",
      "resultType": "component",
      "singularPhrase": "component",
      "pluralPhrase": "components"
    },
    "component folder": {
      "key": "component folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "component folder",
      "pluralPhrase": "component folders"
    },
    "colorsync profiles folder": {
      "key": "colorsync profiles folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "colorsync profiles folder",
      "pluralPhrase": "colorsync profiles folders"
    },
    "color sync folder": {
      "key": "color sync folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "color sync folder",
      "pluralPhrase": "color sync folders"
    },
    "classic folder": {
      "key": "classic folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "classic folder",
      "pluralPhrase": "classic folders"
    },
    "classic domain": {
      "key": "classic domain",
      "type": "property",
      "resultType": "domain",
      "singularPhrase": "classic domain",
      "pluralPhrase": "classic domains"
    },
    "chewable items folder": {
      "key": "chewable items folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "chewable items folder",
      "pluralPhrase": "chewable items folders"
    },
    "carbon folder": {
      "key": "carbon folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "carbon folder",
      "pluralPhrase": "carbon folders"
    },
    "cache folder": {
      "key": "cache folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "cache folder",
      "pluralPhrase": "cache folders"
    },
    "bundle <string>": {
      "key": "bundle <string>",
      "type": "property",
      "resultType": "bundle",
      "singularPhrase": "bundle",
      "pluralPhrase": "bundles",
      "indexType": "string"
    },
    "audio folder": {
      "key": "audio folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "audio folder",
      "pluralPhrase": "audio folders"
    },
    "assistants folder": {
      "key": "assistants folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "assistants folder",
      "pluralPhrase": "assistants folders"
    },
    "applications folder": {
      "key": "applications folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "applications folder",
      "pluralPhrase": "applications folders"
    },
    "application": {
      "key": "application",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "application",
      "pluralPhrase": "applications"
    },
    "application support folder": {
      "key": "application support folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "application support folder",
      "pluralPhrase": "application support folders"
    },
    "apple menu items folder": {
      "key": "apple menu items folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "apple menu items folder",
      "pluralPhrase": "apple menu items folders"
    },
    "apple extras folder": {
      "key": "apple extras folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "apple extras folder",
      "pluralPhrase": "apple extras folders"
    },
    "active directory": {
      "key": "active directory",
      "type": "property",
      "resultType": "active directory server",
      "singularPhrase": "active directory",
      "pluralPhrase": "active directories"
    },
    "used space of <volume>": {
      "key": "used space of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "used space",
      "pluralPhrase": "used spaces",
      "directObjectType": "volume"
    },
    "used percent of <volume>": {
      "key": "used percent of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "used percent",
      "pluralPhrase": "used percents",
      "directObjectType": "volume"
    },
    "total space of <volume>": {
      "key": "total space of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total space",
      "pluralPhrase": "total spaces",
      "directObjectType": "volume"
    },
    "size of <volume>": {
      "key": "size of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "volume"
    },
    "name of <volume>": {
      "key": "name of <volume>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "volume"
    },
    "modification time of <volume>": {
      "key": "modification time of <volume>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "modification time",
      "pluralPhrase": "modification times",
      "directObjectType": "volume"
    },
    "init date of <volume>": {
      "key": "init date of <volume>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "init date",
      "pluralPhrase": "init dates",
      "directObjectType": "volume"
    },
    "free space of <volume>": {
      "key": "free space of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free space",
      "pluralPhrase": "free spaces",
      "directObjectType": "volume"
    },
    "free percent of <volume>": {
      "key": "free percent of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free percent",
      "pluralPhrase": "free percents",
      "directObjectType": "volume"
    },
    "flag of <volume>": {
      "key": "flag of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "flag",
      "pluralPhrase": "flags",
      "directObjectType": "volume"
    },
    "file count of <volume>": {
      "key": "file count of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "file count",
      "pluralPhrase": "file counts",
      "directObjectType": "volume"
    },
    "directory count of <volume>": {
      "key": "directory count of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "directory count",
      "pluralPhrase": "directory counts",
      "directObjectType": "volume"
    },
    "allocation block count of <volume>": {
      "key": "allocation block count of <volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "allocation block count",
      "pluralPhrase": "allocation block counts",
      "directObjectType": "volume"
    },
    "<volume> = <volume>": {
      "key": "<volume> = <volume>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "volume",
      "op": "=",
      "rightType": "volume"
    },
    "stage of <version>": {
      "key": "stage of <version>",
      "type": "property",
      "resultType": "stage",
      "singularPhrase": "stage",
      "pluralPhrase": "stages",
      "directObjectType": "version"
    },
    "minor revision of <version>": {
      "key": "minor revision of <version>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minor revision",
      "pluralPhrase": "minor revisions",
      "directObjectType": "version"
    },
    "major revision of <version>": {
      "key": "major revision of <version>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "major revision",
      "pluralPhrase": "major revisions",
      "directObjectType": "version"
    },
    "build revision of <version>": {
      "key": "build revision of <version>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "build revision",
      "pluralPhrase": "build revisions",
      "directObjectType": "version"
    },
    "bug revision of <version>": {
      "key": "bug revision of <version>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bug revision",
      "pluralPhrase": "bug revisions",
      "directObjectType": "version"
    },
    "value of <user attribute>": {
      "key": "value of <user attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "user attribute"
    },
    "key of <user attribute>": {
      "key": "key of <user attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "directObjectType": "user attribute"
    },
    "<user attribute> as string": {
      "key": "<user attribute> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "user attribute",
      "phrase": "string"
    },
    "primary group id of <user>": {
      "key": "primary group id of <user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "primary group id",
      "pluralPhrase": "primary group ids",
      "directObjectType": "user"
    },
    "id of <user>": {
      "key": "id of <user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "user"
    },
    "home directory of <user>": {
      "key": "home directory of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "home directory",
      "pluralPhrase": "home directories",
      "directObjectType": "user"
    },
    "attribute of <user>": {
      "key": "attribute of <user>",
      "type": "property",
      "resultType": "user attribute",
      "singularPhrase": "attribute",
      "pluralPhrase": "attributes",
      "directObjectType": "user"
    },
    "attribute <string> of <user>": {
      "key": "attribute <string> of <user>",
      "type": "property",
      "resultType": "user attribute",
      "singularPhrase": "attribute",
      "pluralPhrase": "attributes",
      "indexType": "string",
      "directObjectType": "user"
    },
    "version of <usb>": {
      "key": "version of <usb>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "usb"
    },
    "isochronous of <usb>": {
      "key": "isochronous of <usb>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "isochronous",
      "pluralPhrase": "isochronouses",
      "directObjectType": "usb"
    },
    "<stage> as string": {
      "key": "<stage> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "stage",
      "phrase": "string"
    },
    "<stage> = <stage>": {
      "key": "<stage> = <stage>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "stage",
      "op": "=",
      "rightType": "stage"
    },
    "vendor of <scsidevice>": {
      "key": "vendor of <scsidevice>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "vendor",
      "pluralPhrase": "vendors",
      "directObjectType": "scsidevice"
    },
    "type of <scsidevice>": {
      "key": "type of <scsidevice>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "scsidevice"
    },
    "revision of <scsidevice>": {
      "key": "revision of <scsidevice>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "revision",
      "pluralPhrase": "revisions",
      "directObjectType": "scsidevice"
    },
    "product of <scsidevice>": {
      "key": "product of <scsidevice>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "scsidevice"
    },
    "wide32 scsi of <scsibus>": {
      "key": "wide32 scsi of <scsibus>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "wide32 scsi",
      "pluralPhrase": "wide32 scsis",
      "directObjectType": "scsibus"
    },
    "wide16 scsi of <scsibus>": {
      "key": "wide16 scsi of <scsibus>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "wide16 scsi",
      "pluralPhrase": "wide16 scsis",
      "directObjectType": "scsibus"
    },
    "version of <scsibus>": {
      "key": "version of <scsibus>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "scsibus"
    },
    "scsidevice of <scsibus>": {
      "key": "scsidevice of <scsibus>",
      "type": "property",
      "resultType": "scsidevice",
      "singularPhrase": "scsidevice",
      "pluralPhrase": "scsidevices",
      "directObjectType": "scsibus"
    },
    "scsidevice <integer> of <scsibus>": {
      "key": "scsidevice <integer> of <scsibus>",
      "type": "property",
      "resultType": "scsidevice",
      "singularPhrase": "scsidevice",
      "pluralPhrase": "scsidevices",
      "indexType": "integer",
      "directObjectType": "scsibus"
    },
    "fast scsi of <scsibus>": {
      "key": "fast scsi of <scsibus>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fast scsi",
      "pluralPhrase": "fast scsis",
      "directObjectType": "scsibus"
    },
    "size of <resfork>": {
      "key": "size of <resfork>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "resfork"
    },
    "length of <resfork>": {
      "key": "length of <resfork>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "resfork"
    },
    "usb plane of <registryroot>": {
      "key": "usb plane of <registryroot>",
      "type": "property",
      "resultType": "registrynode",
      "singularPhrase": "usb plane",
      "pluralPhrase": "usb planes",
      "directObjectType": "registryroot"
    },
    "service plane of <registryroot>": {
      "key": "service plane of <registryroot>",
      "type": "property",
      "resultType": "registrynode",
      "singularPhrase": "service plane",
      "pluralPhrase": "service planes",
      "directObjectType": "registryroot"
    },
    "power plane of <registryroot>": {
      "key": "power plane of <registryroot>",
      "type": "property",
      "resultType": "registrynode",
      "singularPhrase": "power plane",
      "pluralPhrase": "power planes",
      "directObjectType": "registryroot"
    },
    "node <string> of <registryroot>": {
      "key": "node <string> of <registryroot>",
      "type": "property",
      "resultType": "registrynode",
      "singularPhrase": "node",
      "pluralPhrase": "nodes",
      "indexType": "string",
      "directObjectType": "registryroot"
    },
    "firewire plane of <registryroot>": {
      "key": "firewire plane of <registryroot>",
      "type": "property",
      "resultType": "registrynode",
      "singularPhrase": "firewire plane",
      "pluralPhrase": "firewire planes",
      "directObjectType": "registryroot"
    },
    "dictionary of <registryroot>": {
      "key": "dictionary of <registryroot>",
      "type": "property",
      "resultType": "dictionary",
      "singularPhrase": "dictionary",
      "pluralPhrase": "dictionaries",
      "directObjectType": "registryroot"
    },
    "devicetree plane of <registryroot>": {
      "key": "devicetree plane of <registryroot>",
      "type": "property",
      "resultType": "registrynode",
      "singularPhrase": "devicetree plane",
      "pluralPhrase": "devicetree planes",
      "directObjectType": "registryroot"
    },
    "audio plane of <registryroot>": {
      "key": "audio plane of <registryroot>",
      "type": "property",
      "resultType": "registrynode",
      "singularPhrase": "audio plane",
      "pluralPhrase": "audio planes",
      "directObjectType": "registryroot"
    },
    "path of <registrynode>": {
      "key": "path of <registrynode>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "registrynode"
    },
    "node of <registrynode>": {
      "key": "node of <registrynode>",
      "type": "property",
      "resultType": "registrynode",
      "singularPhrase": "node",
      "pluralPhrase": "nodes",
      "directObjectType": "registrynode"
    },
    "node <string> of <registrynode>": {
      "key": "node <string> of <registrynode>",
      "type": "property",
      "resultType": "registrynode",
      "singularPhrase": "node",
      "pluralPhrase": "nodes",
      "indexType": "string",
      "directObjectType": "registrynode"
    },
    "name of <registrynode>": {
      "key": "name of <registrynode>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "registrynode"
    },
    "dictionary of <registrynode>": {
      "key": "dictionary of <registrynode>",
      "type": "property",
      "resultType": "dictionary",
      "singularPhrase": "dictionary",
      "pluralPhrase": "dictionaries",
      "directObjectType": "registrynode"
    },
    "classname of <registrynode>": {
      "key": "classname of <registrynode>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "classname",
      "pluralPhrase": "classnames",
      "directObjectType": "registrynode"
    },
    "type of <processor>": {
      "key": "type of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "processor"
    },
    "string <string> of <preference>": {
      "key": "string <string> of <preference>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "string",
      "pluralPhrase": "strings",
      "indexType": "string",
      "directObjectType": "preference"
    },
    "integer <string> of <preference>": {
      "key": "integer <string> of <preference>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer",
      "pluralPhrase": "integers",
      "indexType": "string",
      "directObjectType": "preference"
    },
    "dictionary <string> of <preference>": {
      "key": "dictionary <string> of <preference>",
      "type": "property",
      "resultType": "dictionary",
      "singularPhrase": "dictionary",
      "pluralPhrase": "dictionaries",
      "indexType": "string",
      "directObjectType": "preference"
    },
    "date <string> of <preference>": {
      "key": "date <string> of <preference>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "date",
      "pluralPhrase": "dates",
      "indexType": "string",
      "directObjectType": "preference"
    },
    "boolean <string> of <preference>": {
      "key": "boolean <string> of <preference>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "boolean",
      "pluralPhrase": "booleans",
      "indexType": "string",
      "directObjectType": "preference"
    },
    "array <string> of <preference>": {
      "key": "array <string> of <preference>",
      "type": "property",
      "resultType": "array",
      "singularPhrase": "array",
      "pluralPhrase": "arrays",
      "indexType": "string",
      "directObjectType": "preference"
    },
    "type of <osxvalue>": {
      "key": "type of <osxvalue>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "osxvalue"
    },
    "string of <osxvalue>": {
      "key": "string of <osxvalue>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "string",
      "pluralPhrase": "strings",
      "directObjectType": "osxvalue"
    },
    "integer of <osxvalue>": {
      "key": "integer of <osxvalue>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer",
      "pluralPhrase": "integers",
      "directObjectType": "osxvalue"
    },
    "dictionary of <osxvalue>": {
      "key": "dictionary of <osxvalue>",
      "type": "property",
      "resultType": "dictionary",
      "singularPhrase": "dictionary",
      "pluralPhrase": "dictionaries",
      "directObjectType": "osxvalue"
    },
    "date of <osxvalue>": {
      "key": "date of <osxvalue>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "date",
      "pluralPhrase": "dates",
      "directObjectType": "osxvalue"
    },
    "data of <osxvalue>": {
      "key": "data of <osxvalue>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "data",
      "pluralPhrase": "datas",
      "directObjectType": "osxvalue"
    },
    "cstring of <osxvalue>": {
      "key": "cstring of <osxvalue>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cstring",
      "pluralPhrase": "csrings",
      "directObjectType": "osxvalue"
    },
    "boolean of <osxvalue>": {
      "key": "boolean of <osxvalue>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "boolean",
      "pluralPhrase": "booleans",
      "directObjectType": "osxvalue"
    },
    "array of <osxvalue>": {
      "key": "array of <osxvalue>",
      "type": "property",
      "resultType": "array",
      "singularPhrase": "array",
      "pluralPhrase": "arrays",
      "directObjectType": "osxvalue"
    },
    "version of <operating system>": {
      "key": "version of <operating system>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "operating system"
    },
    "build number of <operating system>": {
      "key": "build number of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "build number",
      "pluralPhrase": "build numbers",
      "directObjectType": "operating system"
    },
    "mac address of <network link interface>": {
      "key": "mac address of <network link interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "mac address",
      "pluralPhrase": "mac addresses",
      "directObjectType": "network link interface"
    },
    "up of <network interface>": {
      "key": "up of <network interface>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "up",
      "pluralPhrase": "ups",
      "directObjectType": "network interface"
    },
    "name of <network interface>": {
      "key": "name of <network interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "network interface"
    },
    "family name of <network interface>": {
      "key": "family name of <network interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "family name",
      "pluralPhrase": "family names",
      "directObjectType": "network interface"
    },
    "point to point of <network adapter>": {
      "key": "point to point of <network adapter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "point to point",
      "pluralPhrase": "point to points",
      "directObjectType": "network adapter"
    },
    "link interface of <network adapter>": {
      "key": "link interface of <network adapter>",
      "type": "property",
      "resultType": "network link interface",
      "singularPhrase": "link interface",
      "pluralPhrase": "link interfaces",
      "directObjectType": "network adapter"
    },
    "ip interface of <network adapter>": {
      "key": "ip interface of <network adapter>",
      "type": "property",
      "resultType": "network ip interface",
      "singularPhrase": "ip interface",
      "pluralPhrase": "ip interfaces",
      "directObjectType": "network adapter"
    },
    "interface of <network adapter>": {
      "key": "interface of <network adapter>",
      "type": "property",
      "resultType": "network interface",
      "singularPhrase": "interface",
      "pluralPhrase": "interfaces",
      "directObjectType": "network adapter"
    },
    "broadcast support of <network adapter>": {
      "key": "broadcast support of <network adapter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "broadcast support",
      "pluralPhrase": "broadcast supports",
      "directObjectType": "network adapter"
    },
    "broadcast address of <network adapter>": {
      "key": "broadcast address of <network adapter>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "broadcast address",
      "pluralPhrase": "broadcast addresses",
      "directObjectType": "network adapter"
    },
    "link interface of <network>": {
      "key": "link interface of <network>",
      "type": "property",
      "resultType": "network link interface",
      "singularPhrase": "link interface",
      "pluralPhrase": "link interfaces",
      "directObjectType": "network"
    },
    "link interface <integer> of <network>": {
      "key": "link interface <integer> of <network>",
      "type": "property",
      "resultType": "network link interface",
      "singularPhrase": "link interface",
      "pluralPhrase": "link interfaces",
      "indexType": "integer",
      "directObjectType": "network"
    },
    "adapter <string> of <network>": {
      "key": "adapter <string> of <network>",
      "type": "property",
      "resultType": "network adapter",
      "singularPhrase": "adapter",
      "pluralPhrase": "adapters",
      "indexType": "string",
      "directObjectType": "network"
    },
    "adapter <integer> of <network>": {
      "key": "adapter <integer> of <network>",
      "type": "property",
      "resultType": "network adapter",
      "singularPhrase": "adapter",
      "pluralPhrase": "adapters",
      "indexType": "integer",
      "directObjectType": "network"
    },
    "session id of <logged on user>": {
      "key": "session id of <logged on user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "session id",
      "pluralPhrase": "session ids",
      "directObjectType": "logged on user"
    },
    "remote of <logged on user>": {
      "key": "remote of <logged on user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "remote",
      "pluralPhrase": "remotes",
      "directObjectType": "logged on user"
    },
    "active of <logged on user>": {
      "key": "active of <logged on user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "active",
      "pluralPhrase": "actives",
      "directObjectType": "logged on user"
    },
    "volume of <folder>": {
      "key": "volume of <folder>",
      "type": "property",
      "resultType": "volume",
      "singularPhrase": "volume",
      "pluralPhrase": "volumes",
      "directObjectType": "folder"
    },
    "version of <folder>": {
      "key": "version of <folder>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "folder"
    },
    "relative posix folder <string> of <folder>": {
      "key": "relative posix folder <string> of <folder>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "relative posix folder",
      "pluralPhrase": "relative posix folders",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "relative posix file <string> of <folder>": {
      "key": "relative posix file <string> of <folder>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "relative posix file",
      "pluralPhrase": "relative posix files",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "relative item <string> of <folder>": {
      "key": "relative item <string> of <folder>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "relative item",
      "pluralPhrase": "relative items",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "relative hfs folder <string> of <folder>": {
      "key": "relative hfs folder <string> of <folder>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "relative hfs folder",
      "pluralPhrase": "relative hfs folders",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "relative hfs file <string> of <folder>": {
      "key": "relative hfs file <string> of <folder>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "relative hfs file",
      "pluralPhrase": "relative hfs files",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "relative folder <string> of <folder>": {
      "key": "relative folder <string> of <folder>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "relative folder",
      "pluralPhrase": "relative folders",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "relative file <string> of <folder>": {
      "key": "relative file <string> of <folder>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "relative file",
      "pluralPhrase": "relative files",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "posix relative item <string> of <folder>": {
      "key": "posix relative item <string> of <folder>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "posix relative item",
      "pluralPhrase": "posix relative items",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "item of <folder>": {
      "key": "item of <folder>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "item",
      "pluralPhrase": "items",
      "directObjectType": "folder"
    },
    "item ending in <string> of <folder>": {
      "key": "item ending in <string> of <folder>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "item ending in",
      "pluralPhrase": "items ending in",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "item <string> of <folder>": {
      "key": "item <string> of <folder>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "item",
      "pluralPhrase": "items",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "hfs relative item <string> of <folder>": {
      "key": "hfs relative item <string> of <folder>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "hfs relative item",
      "pluralPhrase": "hfs relative items",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "folder ending in <string> of <folder>": {
      "key": "folder ending in <string> of <folder>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "folder ending in",
      "pluralPhrase": "folders ending in",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "find item <string> of <folder>": {
      "key": "find item <string> of <folder>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "find item",
      "pluralPhrase": "find items",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "file ending in <string> of <folder>": {
      "key": "file ending in <string> of <folder>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "file ending in",
      "pluralPhrase": "files ending in",
      "indexType": "string",
      "directObjectType": "folder"
    },
    "bundle version of <folder>": {
      "key": "bundle version of <folder>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "bundle version",
      "pluralPhrase": "bundle versions",
      "directObjectType": "folder"
    },
    "bundle of <folder>": {
      "key": "bundle of <folder>",
      "type": "property",
      "resultType": "bundle",
      "singularPhrase": "bundle",
      "pluralPhrase": "bundles",
      "directObjectType": "folder"
    },
    "application of <folder>": {
      "key": "application of <folder>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "application",
      "pluralPhrase": "applications",
      "directObjectType": "folder"
    },
    "version of <filesystem object>": {
      "key": "version of <filesystem object>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "filesystem object"
    },
    "sibling item <string> of <filesystem object>": {
      "key": "sibling item <string> of <filesystem object>",
      "type": "property",
      "resultType": "filesystem object",
      "singularPhrase": "sibling item",
      "pluralPhrase": "sibling items",
      "indexType": "string",
      "directObjectType": "filesystem object"
    },
    "sibling folder <string> of <filesystem object>": {
      "key": "sibling folder <string> of <filesystem object>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "sibling folder",
      "pluralPhrase": "sibling folders",
      "indexType": "string",
      "directObjectType": "filesystem object"
    },
    "sibling file <string> of <filesystem object>": {
      "key": "sibling file <string> of <filesystem object>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "sibling file",
      "pluralPhrase": "sibling files",
      "indexType": "string",
      "directObjectType": "filesystem object"
    },
    "posix path of <filesystem object>": {
      "key": "posix path of <filesystem object>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "posix path",
      "pluralPhrase": "posix paths",
      "directObjectType": "filesystem object"
    },
    "hfs path of <filesystem object>": {
      "key": "hfs path of <filesystem object>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "hfs path",
      "pluralPhrase": "hfs paths",
      "directObjectType": "filesystem object"
    },
    "creation time of <filesystem object>": {
      "key": "creation time of <filesystem object>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "creation time",
      "pluralPhrase": "creation times",
      "directObjectType": "filesystem object"
    },
    "bundle version of <filesystem object>": {
      "key": "bundle version of <filesystem object>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "bundle version",
      "pluralPhrase": "bundle versions",
      "directObjectType": "filesystem object"
    },
    "backup time of <filesystem object>": {
      "key": "backup time of <filesystem object>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "backup time",
      "pluralPhrase": "backup times",
      "directObjectType": "filesystem object"
    },
    "<filesystem object> as folder": {
      "key": "<filesystem object> as folder",
      "type": "cast",
      "resultType": "folder",
      "argType": "filesystem object",
      "phrase": "folder"
    },
    "<filesystem object> as file": {
      "key": "<filesystem object> as file",
      "type": "cast",
      "resultType": "file",
      "argType": "filesystem object",
      "phrase": "file"
    },
    "<filesystem object> = <filesystem object>": {
      "key": "<filesystem object> = <filesystem object>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "filesystem object",
      "op": "=",
      "rightType": "filesystem object"
    },
    "<file type> = <file type>": {
      "key": "<file type> = <file type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "file type",
      "op": "=",
      "rightType": "file type"
    },
    "<file signature> = <file signature>": {
      "key": "<file signature> = <file signature>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "file signature",
      "op": "=",
      "rightType": "file signature"
    },
    "volume of <file>": {
      "key": "volume of <file>",
      "type": "property",
      "resultType": "volume",
      "singularPhrase": "volume",
      "pluralPhrase": "volumes",
      "directObjectType": "file"
    },
    "visible of <file>": {
      "key": "visible of <file>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "visible",
      "pluralPhrase": "visibles",
      "directObjectType": "file"
    },
    "version <integer> of <file>": {
      "key": "version <integer> of <file>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "indexType": "integer",
      "directObjectType": "file"
    },
    "type of <file>": {
      "key": "type of <file>",
      "type": "property",
      "resultType": "file type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "file"
    },
    "stationery of <file>": {
      "key": "stationery of <file>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "stationery",
      "pluralPhrase": "stationeries",
      "directObjectType": "file"
    },
    "resource fork of <file>": {
      "key": "resource fork of <file>",
      "type": "property",
      "resultType": "resfork",
      "singularPhrase": "resource fork",
      "pluralPhrase": "resource forks",
      "directObjectType": "file"
    },
    "locked of <file>": {
      "key": "locked of <file>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "locked",
      "pluralPhrase": "lockeds",
      "directObjectType": "file"
    },
    "length of <file>": {
      "key": "length of <file>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "file"
    },
    "dictionary of <file>": {
      "key": "dictionary of <file>",
      "type": "property",
      "resultType": "dictionary",
      "singularPhrase": "dictionary",
      "pluralPhrase": "dictionaries",
      "directObjectType": "file"
    },
    "data fork of <file>": {
      "key": "data fork of <file>",
      "type": "property",
      "resultType": "datafork",
      "singularPhrase": "data fork",
      "pluralPhrase": "data forks",
      "directObjectType": "file"
    },
    "creator of <file>": {
      "key": "creator of <file>",
      "type": "property",
      "resultType": "file signature",
      "singularPhrase": "creator",
      "pluralPhrase": "creators",
      "directObjectType": "file"
    },
    "alias of <file>": {
      "key": "alias of <file>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "alias",
      "pluralPhrase": "aliases",
      "directObjectType": "file"
    },
    "enabled of <enableable_file>": {
      "key": "enabled of <enableable_file>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "enableable_file"
    },
    "disabled of <enableable_file>": {
      "key": "disabled of <enableable_file>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "disabled",
      "pluralPhrase": "disableds",
      "directObjectType": "enableable_file"
    },
    "<dummy type> as string": {
      "key": "<dummy type> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "dummy type",
      "phrase": "string"
    },
    "state of <dummy>": {
      "key": "state of <dummy>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "state",
      "pluralPhrase": "states",
      "directObjectType": "dummy"
    },
    "volume settings folder of <domain>": {
      "key": "volume settings folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "volume settings folder",
      "pluralPhrase": "volume settings folders",
      "directObjectType": "domain"
    },
    "voices folder of <domain>": {
      "key": "voices folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "voices folder",
      "pluralPhrase": "voices folders",
      "directObjectType": "domain"
    },
    "utilities folder of <domain>": {
      "key": "utilities folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "utilities folder",
      "pluralPhrase": "utilities folders",
      "directObjectType": "domain"
    },
    "users folder of <domain>": {
      "key": "users folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "users folder",
      "pluralPhrase": "users folders",
      "directObjectType": "domain"
    },
    "user temp folder of <domain>": {
      "key": "user temp folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "user temp folder",
      "pluralPhrase": "user temp folders",
      "directObjectType": "domain"
    },
    "themes folder of <domain>": {
      "key": "themes folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "themes folder",
      "pluralPhrase": "themes folders",
      "directObjectType": "domain"
    },
    "text encodings folder of <domain>": {
      "key": "text encodings folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "text encodings folder",
      "pluralPhrase": "text encodings folders",
      "directObjectType": "domain"
    },
    "temporary items folder of <domain>": {
      "key": "temporary items folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "temporary items folder",
      "pluralPhrase": "temporary items folders",
      "directObjectType": "domain"
    },
    "system folder of <domain>": {
      "key": "system folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "system folder",
      "pluralPhrase": "system folders",
      "directObjectType": "domain"
    },
    "startup items folder of <domain>": {
      "key": "startup items folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "startup items folder",
      "pluralPhrase": "startup items folders",
      "directObjectType": "domain"
    },
    "speech folder of <domain>": {
      "key": "speech folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "speech folder",
      "pluralPhrase": "speech folders",
      "directObjectType": "domain"
    },
    "sound folder of <domain>": {
      "key": "sound folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "sound folder",
      "pluralPhrase": "sound folders",
      "directObjectType": "domain"
    },
    "shutdown items folder of <domain>": {
      "key": "shutdown items folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "shutdown items folder",
      "pluralPhrase": "shutdown items folders",
      "directObjectType": "domain"
    },
    "shared libraries folder of <domain>": {
      "key": "shared libraries folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "shared libraries folder",
      "pluralPhrase": "shared libraries folders",
      "directObjectType": "domain"
    },
    "shared folder of <domain>": {
      "key": "shared folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "shared folder",
      "pluralPhrase": "shared folders",
      "directObjectType": "domain"
    },
    "scripting additions folder of <domain>": {
      "key": "scripting additions folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "scripting additions folder",
      "pluralPhrase": "scripting additions folders",
      "directObjectType": "domain"
    },
    "receipts folder of <domain>": {
      "key": "receipts folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "receipts folder",
      "pluralPhrase": "receipts folders",
      "directObjectType": "domain"
    },
    "quicktime folder of <domain>": {
      "key": "quicktime folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "quicktime folder",
      "pluralPhrase": "quicktime folders",
      "directObjectType": "domain"
    },
    "private framework folder of <domain>": {
      "key": "private framework folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "private framework folder",
      "pluralPhrase": "private framework folders",
      "directObjectType": "domain"
    },
    "printmonitor documents folder of <domain>": {
      "key": "printmonitor documents folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "printmonitor documents folder",
      "pluralPhrase": "printmonitor documents folders",
      "directObjectType": "domain"
    },
    "printers folder of <domain>": {
      "key": "printers folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "printers folder",
      "pluralPhrase": "printers folders",
      "directObjectType": "domain"
    },
    "printer drivers folder of <domain>": {
      "key": "printer drivers folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "printer drivers folder",
      "pluralPhrase": "printer drivers folders",
      "directObjectType": "domain"
    },
    "printer descriptions folder of <domain>": {
      "key": "printer descriptions folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "printer descriptions folder",
      "pluralPhrase": "printer descriptions folders",
      "directObjectType": "domain"
    },
    "preferences folder of <domain>": {
      "key": "preferences folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "preferences folder",
      "pluralPhrase": "preferences folders",
      "directObjectType": "domain"
    },
    "modem scripts folder of <domain>": {
      "key": "modem scripts folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "modem scripts folder",
      "pluralPhrase": "modem scripts folders",
      "directObjectType": "domain"
    },
    "macos read me folder of <domain>": {
      "key": "macos read me folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "macos read me folder",
      "pluralPhrase": "macos read me folders",
      "directObjectType": "domain"
    },
    "locations folder of <domain>": {
      "key": "locations folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "locations folder",
      "pluralPhrase": "locations folders",
      "directObjectType": "domain"
    },
    "location manager preferences folder of <domain>": {
      "key": "location manager preferences folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "location manager preferences folder",
      "pluralPhrase": "location manager preferences folders",
      "directObjectType": "domain"
    },
    "location manager modules folder of <domain>": {
      "key": "location manager modules folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "location manager modules folder",
      "pluralPhrase": "location manager modules folders",
      "directObjectType": "domain"
    },
    "locales folder of <domain>": {
      "key": "locales folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "locales folder",
      "pluralPhrase": "locales folders",
      "directObjectType": "domain"
    },
    "kernel extensions folder of <domain>": {
      "key": "kernel extensions folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "kernel extensions folder",
      "pluralPhrase": "kernel extensions folders",
      "directObjectType": "domain"
    },
    "iss download folder of <domain>": {
      "key": "iss download folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "iss download folder",
      "pluralPhrase": "iss download folders",
      "directObjectType": "domain"
    },
    "internet plugins folder of <domain>": {
      "key": "internet plugins folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "internet plugins folder",
      "pluralPhrase": "internet plugins folders",
      "directObjectType": "domain"
    },
    "help folder of <domain>": {
      "key": "help folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "help folder",
      "pluralPhrase": "help folders",
      "directObjectType": "domain"
    },
    "framework folder of <domain>": {
      "key": "framework folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "framework folder",
      "pluralPhrase": "framework folders",
      "directObjectType": "domain"
    },
    "framework <string> of <domain>": {
      "key": "framework <string> of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "framework",
      "pluralPhrase": "frameworks",
      "indexType": "string",
      "directObjectType": "domain"
    },
    "fonts folder of <domain>": {
      "key": "fonts folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "fonts folder",
      "pluralPhrase": "fonts folders",
      "directObjectType": "domain"
    },
    "favorites folder of <domain>": {
      "key": "favorites folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "favorites folder",
      "pluralPhrase": "favorites folders",
      "directObjectType": "domain"
    },
    "extensions folder of <domain>": {
      "key": "extensions folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "extensions folder",
      "pluralPhrase": "extensions folders",
      "directObjectType": "domain"
    },
    "domain top folder of <domain>": {
      "key": "domain top folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "domain top folder",
      "pluralPhrase": "domain top folders",
      "directObjectType": "domain"
    },
    "domain library folder of <domain>": {
      "key": "domain library folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "domain library folder",
      "pluralPhrase": "domain library folders",
      "directObjectType": "domain"
    },
    "documents folder of <domain>": {
      "key": "documents folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "documents folder",
      "pluralPhrase": "documents folders",
      "directObjectType": "domain"
    },
    "documentation folder of <domain>": {
      "key": "documentation folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "documentation folder",
      "pluralPhrase": "documentation folders",
      "directObjectType": "domain"
    },
    "disabled system extensions folder of <domain>": {
      "key": "disabled system extensions folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled system extensions folder",
      "pluralPhrase": "disabled system extensions folders",
      "directObjectType": "domain"
    },
    "disabled startup items folder of <domain>": {
      "key": "disabled startup items folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled startup items folder",
      "pluralPhrase": "disabled startup items folders",
      "directObjectType": "domain"
    },
    "disabled shutdown items folder of <domain>": {
      "key": "disabled shutdown items folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled shutdown items folder",
      "pluralPhrase": "disabled shutdown items folders",
      "directObjectType": "domain"
    },
    "disabled extensions folder of <domain>": {
      "key": "disabled extensions folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled extensions folder",
      "pluralPhrase": "disabled extensions folders",
      "directObjectType": "domain"
    },
    "disabled control panels folder of <domain>": {
      "key": "disabled control panels folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "disabled control panels folder",
      "pluralPhrase": "disabled control panels folders",
      "directObjectType": "domain"
    },
    "developer help folder of <domain>": {
      "key": "developer help folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "developer help folder",
      "pluralPhrase": "developer help folders",
      "directObjectType": "domain"
    },
    "developer folder of <domain>": {
      "key": "developer folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "developer folder",
      "pluralPhrase": "developer folders",
      "directObjectType": "domain"
    },
    "developer docs folder of <domain>": {
      "key": "developer docs folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "developer docs folder",
      "pluralPhrase": "developer docs folders",
      "directObjectType": "domain"
    },
    "desktop folder of <domain>": {
      "key": "desktop folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "desktop folder",
      "pluralPhrase": "desktop folders",
      "directObjectType": "domain"
    },
    "current user folder of <domain>": {
      "key": "current user folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "current user folder",
      "pluralPhrase": "current user folders",
      "directObjectType": "domain"
    },
    "core services folder of <domain>": {
      "key": "core services folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "core services folder",
      "pluralPhrase": "core services folders",
      "directObjectType": "domain"
    },
    "control strip modules folder of <domain>": {
      "key": "control strip modules folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "control strip modules folder",
      "pluralPhrase": "control strip modules folders",
      "directObjectType": "domain"
    },
    "control panels folder of <domain>": {
      "key": "control panels folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "control panels folder",
      "pluralPhrase": "control panels folders",
      "directObjectType": "domain"
    },
    "contextual menu items folder of <domain>": {
      "key": "contextual menu items folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "contextual menu items folder",
      "pluralPhrase": "contextual menu items folders",
      "directObjectType": "domain"
    },
    "component folder of <domain>": {
      "key": "component folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "component folder",
      "pluralPhrase": "component folders",
      "directObjectType": "domain"
    },
    "colorsync profiles folder of <domain>": {
      "key": "colorsync profiles folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "colorsync profiles folder",
      "pluralPhrase": "colorsync profiles folders",
      "directObjectType": "domain"
    },
    "color sync folder of <domain>": {
      "key": "color sync folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "color sync folder",
      "pluralPhrase": "color sync folders",
      "directObjectType": "domain"
    },
    "classic folder of <domain>": {
      "key": "classic folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "classic folder",
      "pluralPhrase": "classic folders",
      "directObjectType": "domain"
    },
    "chewable items folder of <domain>": {
      "key": "chewable items folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "chewable items folder",
      "pluralPhrase": "chewable items folders",
      "directObjectType": "domain"
    },
    "carbon folder of <domain>": {
      "key": "carbon folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "carbon folder",
      "pluralPhrase": "carbon folders",
      "directObjectType": "domain"
    },
    "cache folder of <domain>": {
      "key": "cache folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "cache folder",
      "pluralPhrase": "cache folders",
      "directObjectType": "domain"
    },
    "audio folder of <domain>": {
      "key": "audio folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "audio folder",
      "pluralPhrase": "audio folders",
      "directObjectType": "domain"
    },
    "assistants folder of <domain>": {
      "key": "assistants folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "assistants folder",
      "pluralPhrase": "assistants folders",
      "directObjectType": "domain"
    },
    "applications folder of <domain>": {
      "key": "applications folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "applications folder",
      "pluralPhrase": "applications folders",
      "directObjectType": "domain"
    },
    "application support folder of <domain>": {
      "key": "application support folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "application support folder",
      "pluralPhrase": "application support folders",
      "directObjectType": "domain"
    },
    "apple menu items folder of <domain>": {
      "key": "apple menu items folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "apple menu items folder",
      "pluralPhrase": "apple menu items folders",
      "directObjectType": "domain"
    },
    "apple extras folder of <domain>": {
      "key": "apple extras folder of <domain>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "apple extras folder",
      "pluralPhrase": "apple extras folders",
      "directObjectType": "domain"
    },
    "value of <dictionaryentry>": {
      "key": "value of <dictionaryentry>",
      "type": "property",
      "resultType": "osxvalue",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "dictionaryentry"
    },
    "key of <dictionaryentry>": {
      "key": "key of <dictionaryentry>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "directObjectType": "dictionaryentry"
    },
    "string <string> of <dictionary>": {
      "key": "string <string> of <dictionary>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "string",
      "pluralPhrase": "strings",
      "indexType": "string",
      "directObjectType": "dictionary"
    },
    "size of <dictionary>": {
      "key": "size of <dictionary>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "dictionary"
    },
    "key of <dictionary>": {
      "key": "key of <dictionary>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "directObjectType": "dictionary"
    },
    "integer <string> of <dictionary>": {
      "key": "integer <string> of <dictionary>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer",
      "pluralPhrase": "integers",
      "indexType": "string",
      "directObjectType": "dictionary"
    },
    "entry of <dictionary>": {
      "key": "entry of <dictionary>",
      "type": "property",
      "resultType": "dictionaryentry",
      "singularPhrase": "entry",
      "pluralPhrase": "entries",
      "directObjectType": "dictionary"
    },
    "dictionary <string> of <dictionary>": {
      "key": "dictionary <string> of <dictionary>",
      "type": "property",
      "resultType": "dictionary",
      "singularPhrase": "dictionary",
      "pluralPhrase": "dictionaries",
      "indexType": "string",
      "directObjectType": "dictionary"
    },
    "date <string> of <dictionary>": {
      "key": "date <string> of <dictionary>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "date",
      "pluralPhrase": "dates",
      "indexType": "string",
      "directObjectType": "dictionary"
    },
    "data <string> of <dictionary>": {
      "key": "data <string> of <dictionary>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "data",
      "pluralPhrase": "datas",
      "indexType": "string",
      "directObjectType": "dictionary"
    },
    "cstring <string> of <dictionary>": {
      "key": "cstring <string> of <dictionary>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cstring",
      "pluralPhrase": "cstrings",
      "indexType": "string",
      "directObjectType": "dictionary"
    },
    "boolean <string> of <dictionary>": {
      "key": "boolean <string> of <dictionary>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "boolean",
      "pluralPhrase": "booleans",
      "indexType": "string",
      "directObjectType": "dictionary"
    },
    "array <string> of <dictionary>": {
      "key": "array <string> of <dictionary>",
      "type": "property",
      "resultType": "array",
      "singularPhrase": "array",
      "pluralPhrase": "arrays",
      "indexType": "string",
      "directObjectType": "dictionary"
    },
    "size of <datafork>": {
      "key": "size of <datafork>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "datafork"
    },
    "length of <datafork>": {
      "key": "length of <datafork>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "datafork"
    },
    "<country> = <country>": {
      "key": "<country> = <country>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "country",
      "op": "=",
      "rightType": "country"
    },
    "name of <computer>": {
      "key": "name of <computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "computer"
    },
    "version of <component>": {
      "key": "version of <component>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "component"
    },
    "type of <component>": {
      "key": "type of <component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "component"
    },
    "subtype of <component>": {
      "key": "subtype of <component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "subtype",
      "pluralPhrase": "subtypes",
      "directObjectType": "component"
    },
    "name of <component>": {
      "key": "name of <component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "component"
    },
    "maker of <component>": {
      "key": "maker of <component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "maker",
      "pluralPhrase": "makers",
      "directObjectType": "component"
    },
    "info of <component>": {
      "key": "info of <component>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "info",
      "pluralPhrase": "infos",
      "directObjectType": "component"
    },
    "short name of <client process owner>": {
      "key": "short name of <client process owner>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "short name",
      "pluralPhrase": "short names",
      "directObjectType": "client process owner"
    },
    "name of <client process owner>": {
      "key": "name of <client process owner>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "client process owner"
    },
    "long name of <client process owner>": {
      "key": "long name of <client process owner>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "long name",
      "pluralPhrase": "long names",
      "directObjectType": "client process owner"
    },
    "<client process owner> as string": {
      "key": "<client process owner> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "client process owner",
      "phrase": "string"
    },
    "process owner of <client>": {
      "key": "process owner of <client>",
      "type": "property",
      "resultType": "client process owner",
      "singularPhrase": "process owner",
      "pluralPhrase": "process owners",
      "directObjectType": "client"
    },
    "version of <bundle>": {
      "key": "version of <bundle>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "bundle"
    },
    "type of <bundle>": {
      "key": "type of <bundle>",
      "type": "property",
      "resultType": "file type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "bundle"
    },
    "local dictionary of <bundle>": {
      "key": "local dictionary of <bundle>",
      "type": "property",
      "resultType": "dictionary",
      "singularPhrase": "local dictionary",
      "pluralPhrase": "local dictionaries",
      "directObjectType": "bundle"
    },
    "global dictionary of <bundle>": {
      "key": "global dictionary of <bundle>",
      "type": "property",
      "resultType": "dictionary",
      "singularPhrase": "global dictionary",
      "pluralPhrase": "global dictionaries",
      "directObjectType": "bundle"
    },
    "creator of <bundle>": {
      "key": "creator of <bundle>",
      "type": "property",
      "resultType": "file signature",
      "singularPhrase": "creator",
      "pluralPhrase": "creators",
      "directObjectType": "bundle"
    },
    "bundle version of <bundle>": {
      "key": "bundle version of <bundle>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "bundle version",
      "pluralPhrase": "bundle versions",
      "directObjectType": "bundle"
    },
    "value of <array>": {
      "key": "value of <array>",
      "type": "property",
      "resultType": "osxvalue",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "array"
    },
    "string <integer> of <array>": {
      "key": "string <integer> of <array>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "string",
      "pluralPhrase": "strings",
      "indexType": "integer",
      "directObjectType": "array"
    },
    "size of <array>": {
      "key": "size of <array>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "array"
    },
    "integer <integer> of <array>": {
      "key": "integer <integer> of <array>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer",
      "pluralPhrase": "integers",
      "indexType": "integer",
      "directObjectType": "array"
    },
    "dictionary <integer> of <array>": {
      "key": "dictionary <integer> of <array>",
      "type": "property",
      "resultType": "dictionary",
      "singularPhrase": "dictionary",
      "pluralPhrase": "dictionaries",
      "indexType": "integer",
      "directObjectType": "array"
    },
    "date <integer> of <array>": {
      "key": "date <integer> of <array>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "date",
      "pluralPhrase": "dates",
      "indexType": "integer",
      "directObjectType": "array"
    },
    "boolean <integer> of <array>": {
      "key": "boolean <integer> of <array>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "boolean",
      "pluralPhrase": "booleans",
      "indexType": "integer",
      "directObjectType": "array"
    },
    "array <integer> of <array>": {
      "key": "array <integer> of <array>",
      "type": "property",
      "resultType": "array",
      "singularPhrase": "array",
      "pluralPhrase": "arrays",
      "indexType": "integer",
      "directObjectType": "array"
    },
    "local computer of <active directory server>": {
      "key": "local computer of <active directory server>",
      "type": "property",
      "resultType": "active directory local computer",
      "singularPhrase": "local computer",
      "pluralPhrase": "local computers",
      "directObjectType": "active directory server"
    },
    "sample time of <active directory local computer>": {
      "key": "sample time of <active directory local computer>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "sample time",
      "pluralPhrase": "sample times",
      "directObjectType": "active directory local computer"
    },
    "distinguished name of <active directory local computer>": {
      "key": "distinguished name of <active directory local computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "distinguished name",
      "pluralPhrase": "distinguished names",
      "directObjectType": "active directory local computer"
    },
    "distinguished name error message of <active directory local computer>": {
      "key": "distinguished name error message of <active directory local computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "distinguished name error message",
      "pluralPhrase": "distinguished name error messages",
      "directObjectType": "active directory local computer"
    },
    "software depot": {
      "key": "software depot",
      "type": "property",
      "resultType": "software_depot",
      "singularPhrase": "software depot",
      "pluralPhrase": "software depots"
    },
    "model": {
      "key": "model",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "model",
      "pluralPhrase": "models"
    },
    "product of <software_depot>": {
      "key": "product of <software_depot>",
      "type": "property",
      "resultType": "product",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "software_depot"
    },
    "product <string> of <software_depot>": {
      "key": "product <string> of <software_depot>",
      "type": "property",
      "resultType": "product",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "indexType": "string",
      "directObjectType": "software_depot"
    },
    "bundle of <software_depot>": {
      "key": "bundle of <software_depot>",
      "type": "property",
      "resultType": "bundle",
      "singularPhrase": "bundle",
      "pluralPhrase": "bundles",
      "directObjectType": "software_depot"
    },
    "bundle <string> of <software_depot>": {
      "key": "bundle <string> of <software_depot>",
      "type": "property",
      "resultType": "bundle",
      "singularPhrase": "bundle",
      "pluralPhrase": "bundles",
      "indexType": "string",
      "directObjectType": "software_depot"
    },
    "vendor of <product>": {
      "key": "vendor of <product>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "vendor",
      "pluralPhrase": "vendors",
      "directObjectType": "product"
    },
    "title of <product>": {
      "key": "title of <product>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "title",
      "pluralPhrase": "titles",
      "directObjectType": "product"
    },
    "tag of <product>": {
      "key": "tag of <product>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "tag",
      "pluralPhrase": "tags",
      "directObjectType": "product"
    },
    "revision of <product>": {
      "key": "revision of <product>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "revision",
      "pluralPhrase": "revisions",
      "directObjectType": "product"
    },
    "bundle of <product>": {
      "key": "bundle of <product>",
      "type": "property",
      "resultType": "bundle",
      "singularPhrase": "bundle",
      "pluralPhrase": "bundles",
      "directObjectType": "product"
    },
    "<product> as string": {
      "key": "<product> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "product",
      "phrase": "string"
    },
    "version of <processor>": {
      "key": "version of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "processor"
    },
    "state of <processor>": {
      "key": "state of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "state",
      "pluralPhrase": "states",
      "directObjectType": "processor"
    },
    "product of <bundle>": {
      "key": "product of <bundle>",
      "type": "property",
      "resultType": "product",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "bundle"
    },
    "object repository": {
      "key": "object repository",
      "type": "property",
      "resultType": "object repository",
      "singularPhrase": "object repository",
      "pluralPhrase": "object repositories"
    },
    "logical volume manager": {
      "key": "logical volume manager",
      "type": "property",
      "resultType": "logical volume manager",
      "singularPhrase": "logical volume manager",
      "pluralPhrase": "logical volume managers"
    },
    "partition size of <volume group>": {
      "key": "partition size of <volume group>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "partition size",
      "pluralPhrase": "partition sizes",
      "directObjectType": "volume group"
    },
    "name of <volume group>": {
      "key": "name of <volume group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "volume group"
    },
    "major number of <volume group>": {
      "key": "major number of <volume group>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "major number",
      "pluralPhrase": "major numbers",
      "directObjectType": "volume group"
    },
    "logical volume of <volume group>": {
      "key": "logical volume of <volume group>",
      "type": "property",
      "resultType": "logical volume",
      "singularPhrase": "logical volume",
      "pluralPhrase": "logical volumes",
      "directObjectType": "volume group"
    },
    "logical volume <string> of <volume group>": {
      "key": "logical volume <string> of <volume group>",
      "type": "property",
      "resultType": "logical volume",
      "singularPhrase": "logical volume",
      "pluralPhrase": "logical volumes",
      "indexType": "string",
      "directObjectType": "volume group"
    },
    "free partition count of <volume group>": {
      "key": "free partition count of <volume group>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free partition count",
      "pluralPhrase": "free partition counts",
      "directObjectType": "volume group"
    },
    "<volume group> as string": {
      "key": "<volume group> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "volume group",
      "phrase": "string"
    },
    "name of <product>": {
      "key": "name of <product>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "product"
    },
    "fileset of <product>": {
      "key": "fileset of <product>",
      "type": "property",
      "resultType": "fileset",
      "singularPhrase": "fileset",
      "pluralPhrase": "filesets",
      "directObjectType": "product"
    },
    "id of <processor>": {
      "key": "id of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "processor"
    },
    "product of <object_repository>": {
      "key": "product of <object_repository>",
      "type": "property",
      "resultType": "product",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "object_repository"
    },
    "product <string> of <object_repository>": {
      "key": "product <string> of <object_repository>",
      "type": "property",
      "resultType": "product",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "indexType": "string",
      "directObjectType": "object_repository"
    },
    "fileset matching <string> of <object_repository>": {
      "key": "fileset matching <string> of <object_repository>",
      "type": "property",
      "resultType": "fileset",
      "singularPhrase": "fileset matching",
      "pluralPhrase": "filesets matching",
      "indexType": "string",
      "directObjectType": "object_repository"
    },
    "volume group of <logical volume manager>": {
      "key": "volume group of <logical volume manager>",
      "type": "property",
      "resultType": "volume group",
      "singularPhrase": "volume group",
      "pluralPhrase": "volume groups",
      "directObjectType": "logical volume manager"
    },
    "volume group <string> of <logical volume manager>": {
      "key": "volume group <string> of <logical volume manager>",
      "type": "property",
      "resultType": "volume group",
      "singularPhrase": "volume group",
      "pluralPhrase": "volume groups",
      "indexType": "string",
      "directObjectType": "logical volume manager"
    },
    "volume group of <logical volume>": {
      "key": "volume group of <logical volume>",
      "type": "property",
      "resultType": "volume group",
      "singularPhrase": "volume group",
      "pluralPhrase": "volume groups",
      "directObjectType": "logical volume"
    },
    "partition count of <logical volume>": {
      "key": "partition count of <logical volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "partition count",
      "pluralPhrase": "partition counts",
      "directObjectType": "logical volume"
    },
    "name of <logical volume>": {
      "key": "name of <logical volume>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "logical volume"
    },
    "mirror count of <logical volume>": {
      "key": "mirror count of <logical volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "mirror count",
      "pluralPhrase": "mirror counts",
      "directObjectType": "logical volume"
    },
    "minor number of <logical volume>": {
      "key": "minor number of <logical volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minor number",
      "pluralPhrase": "minor numbers",
      "directObjectType": "logical volume"
    },
    "maximum partition count of <logical volume>": {
      "key": "maximum partition count of <logical volume>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum partition count",
      "pluralPhrase": "maximum partition counts",
      "directObjectType": "logical volume"
    },
    "label of <logical volume>": {
      "key": "label of <logical volume>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "label",
      "pluralPhrase": "labels",
      "directObjectType": "logical volume"
    },
    "<logical volume> as string": {
      "key": "<logical volume> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "logical volume",
      "phrase": "string"
    },
    "logical volume of <filesystem>": {
      "key": "logical volume of <filesystem>",
      "type": "property",
      "resultType": "logical volume",
      "singularPhrase": "logical volume",
      "pluralPhrase": "logical volumes",
      "directObjectType": "filesystem"
    },
    "version of <fileset>": {
      "key": "version of <fileset>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "fileset"
    },
    "update of <fileset>": {
      "key": "update of <fileset>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "update",
      "pluralPhrase": "updates",
      "directObjectType": "fileset"
    },
    "product of <fileset>": {
      "key": "product of <fileset>",
      "type": "property",
      "resultType": "product",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "fileset"
    },
    "lpp_name of <fileset>": {
      "key": "lpp_name of <fileset>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "lpp_name",
      "pluralPhrase": "lpp_names",
      "directObjectType": "fileset"
    },
    "description of <fileset>": {
      "key": "description of <fileset>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "fileset"
    },
    "<fileset> as string": {
      "key": "<fileset> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "fileset",
      "phrase": "string"
    },
    "zone": {
      "key": "zone",
      "type": "property",
      "resultType": "zone",
      "singularPhrase": "zone",
      "pluralPhrase": "zones"
    },
    "zone <uuid>": {
      "key": "zone <uuid>",
      "type": "property",
      "resultType": "zone",
      "singularPhrase": "zone",
      "pluralPhrase": "zones",
      "indexType": "uuid"
    },
    "zone <string>": {
      "key": "zone <string>",
      "type": "property",
      "resultType": "zone",
      "singularPhrase": "zone",
      "pluralPhrase": "zones",
      "indexType": "string"
    },
    "zone <integer>": {
      "key": "zone <integer>",
      "type": "property",
      "resultType": "zone",
      "singularPhrase": "zone",
      "pluralPhrase": "zones",
      "indexType": "integer"
    },
    "uuid <string>": {
      "key": "uuid <string>",
      "type": "property",
      "resultType": "uuid",
      "singularPhrase": "uuid",
      "pluralPhrase": "uuids",
      "indexType": "string"
    },
    "pkgdb": {
      "key": "pkgdb",
      "type": "property",
      "resultType": "pkgdb",
      "singularPhrase": "pkgdb",
      "pluralPhrase": "pkgdbs"
    },
    "name of <zone network interface>": {
      "key": "name of <zone network interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "zone network interface"
    },
    "address of <zone network interface>": {
      "key": "address of <zone network interface>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "address",
      "pluralPhrase": "addresses",
      "directObjectType": "zone network interface"
    },
    "<zone network interface> as string": {
      "key": "<zone network interface> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "zone network interface",
      "phrase": "string"
    },
    "uuid of <zone>": {
      "key": "uuid of <zone>",
      "type": "property",
      "resultType": "uuid",
      "singularPhrase": "uuid",
      "pluralPhrase": "uuids",
      "directObjectType": "zone"
    },
    "scheduling class of <zone>": {
      "key": "scheduling class of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "scheduling class",
      "pluralPhrase": "scheduling classes",
      "directObjectType": "zone"
    },
    "physical memory cap of <zone>": {
      "key": "physical memory cap of <zone>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "physical memory cap",
      "pluralPhrase": "physical memory caps",
      "directObjectType": "zone"
    },
    "path of <zone>": {
      "key": "path of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "zone"
    },
    "network interface of <zone>": {
      "key": "network interface of <zone>",
      "type": "property",
      "resultType": "zone network interface",
      "singularPhrase": "network interface",
      "pluralPhrase": "network interfaces",
      "directObjectType": "zone"
    },
    "network interface <string> of <zone>": {
      "key": "network interface <string> of <zone>",
      "type": "property",
      "resultType": "zone network interface",
      "singularPhrase": "network interface",
      "pluralPhrase": "network interfaces",
      "indexType": "string",
      "directObjectType": "zone"
    },
    "name of <zone>": {
      "key": "name of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "zone"
    },
    "init process of <zone>": {
      "key": "init process of <zone>",
      "type": "property",
      "resultType": "process",
      "singularPhrase": "init process",
      "pluralPhrase": "init processes",
      "directObjectType": "zone"
    },
    "inherited package directory of <zone>": {
      "key": "inherited package directory of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "inherited package directory",
      "pluralPhrase": "inherited package directories",
      "directObjectType": "zone"
    },
    "id of <zone>": {
      "key": "id of <zone>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "zone"
    },
    "execution state of <zone>": {
      "key": "execution state of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "execution state",
      "pluralPhrase": "execution states",
      "directObjectType": "zone"
    },
    "exclusive ip of <zone>": {
      "key": "exclusive ip of <zone>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "exclusive ip",
      "pluralPhrase": "exclusive ips",
      "directObjectType": "zone"
    },
    "configuration state of <zone>": {
      "key": "configuration state of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "configuration state",
      "pluralPhrase": "configuration states",
      "directObjectType": "zone"
    },
    "comment of <zone>": {
      "key": "comment of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "comment",
      "pluralPhrase": "comments",
      "directObjectType": "zone"
    },
    "brand of <zone>": {
      "key": "brand of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "brand",
      "pluralPhrase": "brands",
      "directObjectType": "zone"
    },
    "boot argument of <zone>": {
      "key": "boot argument of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "boot argument",
      "pluralPhrase": "boot arguments",
      "directObjectType": "zone"
    },
    "boot argument <integer> of <zone>": {
      "key": "boot argument <integer> of <zone>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "boot argument",
      "pluralPhrase": "boot arguments",
      "indexType": "integer",
      "directObjectType": "zone"
    },
    "autoboot value of <zone>": {
      "key": "autoboot value of <zone>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "autoboot value",
      "pluralPhrase": "autoboot values",
      "directObjectType": "zone"
    },
    "<zone> as string": {
      "key": "<zone> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "zone",
      "phrase": "string"
    },
    "multiplicity of <uuid with multiplicity>": {
      "key": "multiplicity of <uuid with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "uuid with multiplicity"
    },
    "unique value of <uuid>": {
      "key": "unique value of <uuid>",
      "type": "property",
      "resultType": "uuid with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "uuid"
    },
    "minimum of <uuid>": {
      "key": "minimum of <uuid>",
      "type": "property",
      "resultType": "uuid",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "uuid"
    },
    "maximum of <uuid>": {
      "key": "maximum of <uuid>",
      "type": "property",
      "resultType": "uuid",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "uuid"
    },
    "extrema of <uuid>": {
      "key": "extrema of <uuid>",
      "type": "property",
      "resultType": "( uuid, uuid )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "uuid"
    },
    "<uuid> as string": {
      "key": "<uuid> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "uuid",
      "phrase": "string"
    },
    "<uuid> = <uuid>": {
      "key": "<uuid> = <uuid>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "uuid",
      "op": "=",
      "rightType": "uuid"
    },
    "<uuid> <= <uuid>": {
      "key": "<uuid> <= <uuid>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "uuid",
      "op": "<=",
      "rightType": "uuid"
    },
    "<uuid> < <uuid>": {
      "key": "<uuid> < <uuid>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "uuid",
      "op": "<",
      "rightType": "uuid"
    },
    "<uuid> = <string>": {
      "key": "<uuid> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "uuid",
      "op": "=",
      "rightType": "string"
    },
    "<uuid> <= <string>": {
      "key": "<uuid> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "uuid",
      "op": "<=",
      "rightType": "string"
    },
    "<uuid> < <string>": {
      "key": "<uuid> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "uuid",
      "op": "<",
      "rightType": "string"
    },
    "<string> = <uuid>": {
      "key": "<string> = <uuid>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "uuid"
    },
    "<string> <= <uuid>": {
      "key": "<string> <= <uuid>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "uuid"
    },
    "<string> < <uuid>": {
      "key": "<string> < <uuid>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "uuid"
    },
    "fputype of <processor>": {
      "key": "fputype of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "fputype",
      "pluralPhrase": "fputypes",
      "directObjectType": "processor"
    },
    "zone of <process>": {
      "key": "zone of <process>",
      "type": "property",
      "resultType": "zone",
      "singularPhrase": "zone",
      "pluralPhrase": "zones",
      "directObjectType": "process"
    },
    "version of <pkginfo>": {
      "key": "version of <pkginfo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "pkginfo"
    },
    "vendor of <pkginfo>": {
      "key": "vendor of <pkginfo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "vendor",
      "pluralPhrase": "vendors",
      "directObjectType": "pkginfo"
    },
    "pkginst of <pkginfo>": {
      "key": "pkginst of <pkginfo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "pkginst",
      "pluralPhrase": "pkginsts",
      "directObjectType": "pkginfo"
    },
    "patch of <pkginfo>": {
      "key": "patch of <pkginfo>",
      "type": "property",
      "resultType": "patch",
      "singularPhrase": "patch",
      "pluralPhrase": "patches",
      "directObjectType": "pkginfo"
    },
    "patch id of <pkginfo>": {
      "key": "patch id of <pkginfo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "patch id",
      "pluralPhrase": "patch ids",
      "directObjectType": "pkginfo"
    },
    "patch id <string> of <pkginfo>": {
      "key": "patch id <string> of <pkginfo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "patch id",
      "pluralPhrase": "patch ids",
      "indexType": "string",
      "directObjectType": "pkginfo"
    },
    "patch <string> of <pkginfo>": {
      "key": "patch <string> of <pkginfo>",
      "type": "property",
      "resultType": "patch",
      "singularPhrase": "patch",
      "pluralPhrase": "patches",
      "indexType": "string",
      "directObjectType": "pkginfo"
    },
    "param <string> of <pkginfo>": {
      "key": "param <string> of <pkginfo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "param",
      "pluralPhrase": "params",
      "indexType": "string",
      "directObjectType": "pkginfo"
    },
    "name of <pkginfo>": {
      "key": "name of <pkginfo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "pkginfo"
    },
    "category of <pkginfo>": {
      "key": "category of <pkginfo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "category",
      "pluralPhrase": "categories",
      "directObjectType": "pkginfo"
    },
    "arch of <pkginfo>": {
      "key": "arch of <pkginfo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "arch",
      "pluralPhrase": "archs",
      "directObjectType": "pkginfo"
    },
    "<pkginfo> as string": {
      "key": "<pkginfo> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "pkginfo",
      "phrase": "string"
    },
    "pkginfo of <pkgdb>": {
      "key": "pkginfo of <pkgdb>",
      "type": "property",
      "resultType": "pkginfo",
      "singularPhrase": "pkginfo",
      "pluralPhrase": "pkginfos",
      "directObjectType": "pkgdb"
    },
    "pkginfo <string> of <pkgdb>": {
      "key": "pkginfo <string> of <pkgdb>",
      "type": "property",
      "resultType": "pkginfo",
      "singularPhrase": "pkginfo",
      "pluralPhrase": "pkginfos",
      "indexType": "string",
      "directObjectType": "pkgdb"
    },
    "patch of <pkgdb>": {
      "key": "patch of <pkgdb>",
      "type": "property",
      "resultType": "patch",
      "singularPhrase": "patch",
      "pluralPhrase": "patches",
      "directObjectType": "pkgdb"
    },
    "patch id of <pkgdb>": {
      "key": "patch id of <pkgdb>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "patch id",
      "pluralPhrase": "patch ids",
      "directObjectType": "pkgdb"
    },
    "patch id <string> of <pkgdb>": {
      "key": "patch id <string> of <pkgdb>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "patch id",
      "pluralPhrase": "patch ids",
      "indexType": "string",
      "directObjectType": "pkgdb"
    },
    "patch <string> of <pkgdb>": {
      "key": "patch <string> of <pkgdb>",
      "type": "property",
      "resultType": "patch",
      "singularPhrase": "patch",
      "pluralPhrase": "patches",
      "indexType": "string",
      "directObjectType": "pkgdb"
    },
    "revision of <patch>": {
      "key": "revision of <patch>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "revision",
      "pluralPhrase": "revisions",
      "directObjectType": "patch"
    },
    "revision <string> of <patch>": {
      "key": "revision <string> of <patch>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "revision",
      "pluralPhrase": "revisions",
      "indexType": "string",
      "directObjectType": "patch"
    },
    "least revision of <patch>": {
      "key": "least revision of <patch>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "least revision",
      "pluralPhrase": "least revisions",
      "directObjectType": "patch"
    },
    "greatest revision of <patch>": {
      "key": "greatest revision of <patch>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "greatest revision",
      "pluralPhrase": "greatest revisions",
      "directObjectType": "patch"
    },
    "base of <patch>": {
      "key": "base of <patch>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "base",
      "pluralPhrase": "bases",
      "directObjectType": "patch"
    },
    "x64 registry": {
      "key": "x64 registry",
      "type": "property",
      "resultType": "registry",
      "singularPhrase": "x64 registry",
      "pluralPhrase": "x64 registries"
    },
    "x64 folder <string>": {
      "key": "x64 folder <string>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "x64 folder",
      "pluralPhrase": "x64 folders",
      "indexType": "string"
    },
    "x64 file <string>": {
      "key": "x64 file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "x64 file",
      "pluralPhrase": "x64 files",
      "indexType": "string"
    },
    "x64 application <string>": {
      "key": "x64 application <string>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "x64 application",
      "pluralPhrase": "x64 applications",
      "indexType": "string"
    },
    "x32 registry": {
      "key": "x32 registry",
      "type": "property",
      "resultType": "registry",
      "singularPhrase": "x32 registry",
      "pluralPhrase": "x32 registries"
    },
    "x32 folder <string>": {
      "key": "x32 folder <string>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "x32 folder",
      "pluralPhrase": "x32 folders",
      "indexType": "string"
    },
    "x32 file <string>": {
      "key": "x32 file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "x32 file",
      "pluralPhrase": "x32 files",
      "indexType": "string"
    },
    "x32 application <string>": {
      "key": "x32 application <string>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "x32 application",
      "pluralPhrase": "x32 applications",
      "indexType": "string"
    },
    "wmi": {
      "key": "wmi",
      "type": "property",
      "resultType": "wmi",
      "singularPhrase": "wmi",
      "pluralPhrase": "wmis"
    },
    "wmi <string>": {
      "key": "wmi <string>",
      "type": "property",
      "resultType": "wmi",
      "singularPhrase": "wmi",
      "pluralPhrase": "wmis",
      "indexType": "string"
    },
    "windows folder": {
      "key": "windows folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "windows folder",
      "pluralPhrase": "windows folders"
    },
    "windows file <string>": {
      "key": "windows file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "windows file",
      "pluralPhrase": "windows files",
      "indexType": "string"
    },
    "well known account <integer>": {
      "key": "well known account <integer>",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "well known account",
      "pluralPhrase": "well known accounts",
      "indexType": "integer"
    },
    "weekly task trigger type": {
      "key": "weekly task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "weekly task trigger type",
      "pluralPhrase": "weekly task trigger types"
    },
    "warning event log event type": {
      "key": "warning event log event type",
      "type": "property",
      "resultType": "event log event type",
      "singularPhrase": "warning event log event type",
      "pluralPhrase": "warning event log event types"
    },
    "user ui language": {
      "key": "user ui language",
      "type": "property",
      "resultType": "language",
      "singularPhrase": "user ui language",
      "pluralPhrase": "user ui languages"
    },
    "user locale": {
      "key": "user locale",
      "type": "property",
      "resultType": "language",
      "singularPhrase": "user locale",
      "pluralPhrase": "user locales"
    },
    "user language": {
      "key": "user language",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "user language",
      "pluralPhrase": "user languages"
    },
    "upnp firewall service type": {
      "key": "upnp firewall service type",
      "type": "property",
      "resultType": "firewall service type",
      "singularPhrase": "upnp firewall service type",
      "pluralPhrase": "upnp firewall service types"
    },
    "udp": {
      "key": "udp",
      "type": "property",
      "resultType": "internet protocol",
      "singularPhrase": "udp",
      "pluralPhrase": "udps"
    },
    "total processor core count": {
      "key": "total processor core count",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total processor core count",
      "pluralPhrase": "total processor core counts"
    },
    "time task trigger type": {
      "key": "time task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "time task trigger type",
      "pluralPhrase": "time task trigger types"
    },
    "terminal server user group": {
      "key": "terminal server user group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "terminal server user group",
      "pluralPhrase": "terminal server user groups"
    },
    "terminal bit <operating system suite mask>": {
      "key": "terminal bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "terminal bit",
      "pluralPhrase": "terminal bits",
      "indexType": "operating system suite mask"
    },
    "tcp": {
      "key": "tcp",
      "type": "property",
      "resultType": "internet protocol",
      "singularPhrase": "tcp",
      "pluralPhrase": "tcps"
    },
    "task trigger type <integer>": {
      "key": "task trigger type <integer>",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "task trigger type",
      "pluralPhrase": "task trigger types",
      "indexType": "integer"
    },
    "task folder <string>": {
      "key": "task folder <string>",
      "type": "property",
      "resultType": "task folder",
      "singularPhrase": "task folder",
      "pluralPhrase": "task folders",
      "indexType": "string"
    },
    "task action type <integer>": {
      "key": "task action type <integer>",
      "type": "property",
      "resultType": "task action type",
      "singularPhrase": "task action type",
      "pluralPhrase": "task action types",
      "indexType": "integer"
    },
    "system x64 folder": {
      "key": "system x64 folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "system x64 folder",
      "pluralPhrase": "system x64 folders"
    },
    "system x32 folder": {
      "key": "system x32 folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "system x32 folder",
      "pluralPhrase": "system x32 folders"
    },
    "system wow64 folder": {
      "key": "system wow64 folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "system wow64 folder",
      "pluralPhrase": "system wow64 folders"
    },
    "system ini device file": {
      "key": "system ini device file",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "system ini device file",
      "pluralPhrase": "system ini device files"
    },
    "system ini device file <string>": {
      "key": "system ini device file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "system ini device file",
      "pluralPhrase": "system ini device files",
      "indexType": "string"
    },
    "system group": {
      "key": "system group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "system group",
      "pluralPhrase": "system groups"
    },
    "system file <string>": {
      "key": "system file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "system file",
      "pluralPhrase": "system files",
      "indexType": "string"
    },
    "system event log": {
      "key": "system event log",
      "type": "property",
      "resultType": "event log",
      "singularPhrase": "system event log",
      "pluralPhrase": "system event logs"
    },
    "standby state": {
      "key": "standby state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "standby state",
      "pluralPhrase": "standby states"
    },
    "standard firewall profile type": {
      "key": "standard firewall profile type",
      "type": "property",
      "resultType": "firewall profile type",
      "singularPhrase": "standard firewall profile type",
      "pluralPhrase": "standard firewall profile types"
    },
    "small business restricted bit <operating system suite mask>": {
      "key": "small business restricted bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "small business restricted bit",
      "pluralPhrase": "small business restricted bits",
      "indexType": "operating system suite mask"
    },
    "small business bit <operating system suite mask>": {
      "key": "small business bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "small business bit",
      "pluralPhrase": "small business bits",
      "indexType": "operating system suite mask"
    },
    "single user ts bit <operating system suite mask>": {
      "key": "single user ts bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "single user ts bit",
      "pluralPhrase": "single user ts bits",
      "indexType": "operating system suite mask"
    },
    "show message task action type": {
      "key": "show message task action type",
      "type": "property",
      "resultType": "task action type",
      "singularPhrase": "show message task action type",
      "pluralPhrase": "show message task action types"
    },
    "session state change task trigger type": {
      "key": "session state change task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "session state change task trigger type",
      "pluralPhrase": "session state change task trigger types"
    },
    "service": {
      "key": "service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "service",
      "pluralPhrase": "services"
    },
    "service group": {
      "key": "service group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "service group",
      "pluralPhrase": "service groups"
    },
    "security event log": {
      "key": "security event log",
      "type": "property",
      "resultType": "event log",
      "singularPhrase": "security event log",
      "pluralPhrase": "security event logs"
    },
    "security database": {
      "key": "security database",
      "type": "property",
      "resultType": "security database",
      "singularPhrase": "security database",
      "pluralPhrase": "security databases"
    },
    "security account <string>": {
      "key": "security account <string>",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "security account",
      "pluralPhrase": "security accounts",
      "indexType": "string"
    },
    "scheduled task": {
      "key": "scheduled task",
      "type": "property",
      "resultType": "scheduled task",
      "singularPhrase": "scheduled task",
      "pluralPhrase": "scheduled tasks"
    },
    "scheduled task <string>": {
      "key": "scheduled task <string>",
      "type": "property",
      "resultType": "scheduled task",
      "singularPhrase": "scheduled task",
      "pluralPhrase": "scheduled tasks",
      "indexType": "string"
    },
    "running task": {
      "key": "running task",
      "type": "property",
      "resultType": "running task",
      "singularPhrase": "running task",
      "pluralPhrase": "running tasks"
    },
    "running service": {
      "key": "running service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "running service",
      "pluralPhrase": "running services"
    },
    "rsop user wmi <security identifier>": {
      "key": "rsop user wmi <security identifier>",
      "type": "property",
      "resultType": "wmi",
      "singularPhrase": "rsop user wmi",
      "pluralPhrase": "rsop user wmis",
      "indexType": "security identifier"
    },
    "rsop computer wmi": {
      "key": "rsop computer wmi",
      "type": "property",
      "resultType": "wmi",
      "singularPhrase": "rsop computer wmi",
      "pluralPhrase": "rsop computer wmis"
    },
    "remote interactive logon group": {
      "key": "remote interactive logon group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "remote interactive logon group",
      "pluralPhrase": "remote interactive logon groups"
    },
    "remote desktop firewall service type": {
      "key": "remote desktop firewall service type",
      "type": "property",
      "resultType": "firewall service type",
      "singularPhrase": "remote desktop firewall service type",
      "pluralPhrase": "remote desktop firewall service types"
    },
    "registration task trigger type": {
      "key": "registration task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "registration task trigger type",
      "pluralPhrase": "registration task trigger types"
    },
    "regapp <string>": {
      "key": "regapp <string>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "regapp",
      "pluralPhrase": "regapps",
      "indexType": "string"
    },
    "realtime priority": {
      "key": "realtime priority",
      "type": "property",
      "resultType": "priority class",
      "singularPhrase": "realtime priority",
      "pluralPhrase": "realtime priorities"
    },
    "public firewall profile type": {
      "key": "public firewall profile type",
      "type": "property",
      "resultType": "firewall profile type",
      "singularPhrase": "public firewall profile type",
      "pluralPhrase": "public firewall profile types"
    },
    "private firewall profile type": {
      "key": "private firewall profile type",
      "type": "property",
      "resultType": "firewall profile type",
      "singularPhrase": "private firewall profile type",
      "pluralPhrase": "private firewall profile types"
    },
    "power history": {
      "key": "power history",
      "type": "property",
      "resultType": "power history",
      "singularPhrase": "power history",
      "pluralPhrase": "power histories"
    },
    "physical processor count": {
      "key": "physical processor count",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "physical processor count",
      "pluralPhrase": "physical processor counts"
    },
    "personal bit <operating system suite mask>": {
      "key": "personal bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "personal bit",
      "pluralPhrase": "personal bits",
      "indexType": "operating system suite mask"
    },
    "palm device": {
      "key": "palm device",
      "type": "property",
      "resultType": "palm device",
      "singularPhrase": "palm device",
      "pluralPhrase": "palm devices"
    },
    "palm device <string>": {
      "key": "palm device <string>",
      "type": "property",
      "resultType": "palm device",
      "singularPhrase": "palm device",
      "pluralPhrase": "palm devices",
      "indexType": "string"
    },
    "palm device <integer>": {
      "key": "palm device <integer>",
      "type": "property",
      "resultType": "palm device",
      "singularPhrase": "palm device",
      "pluralPhrase": "palm devices",
      "indexType": "integer"
    },
    "operating system product type <integer>": {
      "key": "operating system product type <integer>",
      "type": "property",
      "resultType": "operating system product type",
      "singularPhrase": "operating system product type",
      "pluralPhrase": "operating system product types",
      "indexType": "integer"
    },
    "ok firewall local policy modify state": {
      "key": "ok firewall local policy modify state",
      "type": "property",
      "resultType": "firewall local policy modify state",
      "singularPhrase": "ok firewall local policy modify state",
      "pluralPhrase": "ok firewall local policy modify states"
    },
    "off state": {
      "key": "off state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "off state",
      "pluralPhrase": "off states"
    },
    "oem code page": {
      "key": "oem code page",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oem code page",
      "pluralPhrase": "oem code pages"
    },
    "nt workstation product type": {
      "key": "nt workstation product type",
      "type": "property",
      "resultType": "operating system product type",
      "singularPhrase": "nt workstation product type",
      "pluralPhrase": "nt workstation product types"
    },
    "nt server product type": {
      "key": "nt server product type",
      "type": "property",
      "resultType": "operating system product type",
      "singularPhrase": "nt server product type",
      "pluralPhrase": "nt server product types"
    },
    "nt domain controller product type": {
      "key": "nt domain controller product type",
      "type": "property",
      "resultType": "operating system product type",
      "singularPhrase": "nt domain controller product type",
      "pluralPhrase": "nt domain controller product types"
    },
    "normal priority": {
      "key": "normal priority",
      "type": "property",
      "resultType": "priority class",
      "singularPhrase": "normal priority",
      "pluralPhrase": "normal priorities"
    },
    "none firewall service type": {
      "key": "none firewall service type",
      "type": "property",
      "resultType": "firewall service type",
      "singularPhrase": "none firewall service type",
      "pluralPhrase": "none firewall service types"
    },
    "network share": {
      "key": "network share",
      "type": "property",
      "resultType": "network share",
      "singularPhrase": "network share",
      "pluralPhrase": "network shares"
    },
    "network share <string>": {
      "key": "network share <string>",
      "type": "property",
      "resultType": "network share",
      "singularPhrase": "network share",
      "pluralPhrase": "network shares",
      "indexType": "string"
    },
    "network service group": {
      "key": "network service group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "network service group",
      "pluralPhrase": "network service groups"
    },
    "network group": {
      "key": "network group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "network group",
      "pluralPhrase": "network groups"
    },
    "native registry": {
      "key": "native registry",
      "type": "property",
      "resultType": "registry",
      "singularPhrase": "native registry",
      "pluralPhrase": "native registries"
    },
    "monthlydow task trigger type": {
      "key": "monthlydow task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "monthlydow task trigger type",
      "pluralPhrase": "monthlydow task trigger types"
    },
    "monthly task trigger type": {
      "key": "monthly task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "monthly task trigger type",
      "pluralPhrase": "monthly task trigger types"
    },
    "monitor standby state": {
      "key": "monitor standby state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "monitor standby state",
      "pluralPhrase": "monitor standby states"
    },
    "monitor on state": {
      "key": "monitor on state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "monitor on state",
      "pluralPhrase": "monitor on states"
    },
    "monitor off state": {
      "key": "monitor off state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "monitor off state",
      "pluralPhrase": "monitor off states"
    },
    "monitor invalid state": {
      "key": "monitor invalid state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "monitor invalid state",
      "pluralPhrase": "monitor invalid states"
    },
    "metabase": {
      "key": "metabase",
      "type": "property",
      "resultType": "metabase",
      "singularPhrase": "metabase",
      "pluralPhrase": "metabases"
    },
    "media type tunnel": {
      "key": "media type tunnel",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type tunnel",
      "pluralPhrase": "media types tunnel"
    },
    "media type shared access host ras": {
      "key": "media type shared access host ras",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type shared access host ras",
      "pluralPhrase": "media types shared access host ras"
    },
    "media type shared access host lan": {
      "key": "media type shared access host lan",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type shared access host lan",
      "pluralPhrase": "media types shared access host lan"
    },
    "media type pppoe": {
      "key": "media type pppoe",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type pppoe",
      "pluralPhrase": "media types pppoe"
    },
    "media type phone": {
      "key": "media type phone",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type phone",
      "pluralPhrase": "media types phone"
    },
    "media type lan": {
      "key": "media type lan",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type lan",
      "pluralPhrase": "media types lans"
    },
    "media type isdn": {
      "key": "media type isdn",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type isdn",
      "pluralPhrase": "media types isdn"
    },
    "media type direct": {
      "key": "media type direct",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type direct",
      "pluralPhrase": "media types direct"
    },
    "media type bridge": {
      "key": "media type bridge",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type bridge",
      "pluralPhrase": "media types bridge"
    },
    "media type <integer>": {
      "key": "media type <integer>",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type",
      "pluralPhrase": "media types",
      "indexType": "integer"
    },
    "main palm device": {
      "key": "main palm device",
      "type": "property",
      "resultType": "palm device",
      "singularPhrase": "main palm device",
      "pluralPhrase": "main palm devices"
    },
    "logon task trigger type": {
      "key": "logon task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "logon task trigger type",
      "pluralPhrase": "logon task trigger types"
    },
    "logical processor count": {
      "key": "logical processor count",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "logical processor count",
      "pluralPhrase": "logical processor counts"
    },
    "logged off state": {
      "key": "logged off state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "logged off state",
      "pluralPhrase": "logged off states"
    },
    "local user": {
      "key": "local user",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "local user",
      "pluralPhrase": "local users"
    },
    "local user <string>": {
      "key": "local user <string>",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "local user",
      "pluralPhrase": "local users",
      "indexType": "string"
    },
    "local subnet firewall scope": {
      "key": "local subnet firewall scope",
      "type": "property",
      "resultType": "firewall scope",
      "singularPhrase": "local subnet firewall scope",
      "pluralPhrase": "local subnet firewall scopes"
    },
    "local service group": {
      "key": "local service group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "local service group",
      "pluralPhrase": "local service groups"
    },
    "local mssql database": {
      "key": "local mssql database",
      "type": "property",
      "resultType": "local mssql database",
      "singularPhrase": "local mssql database",
      "pluralPhrase": "local mssql databases"
    },
    "local mssql database <string>": {
      "key": "local mssql database <string>",
      "type": "property",
      "resultType": "local mssql database",
      "singularPhrase": "local mssql database",
      "pluralPhrase": "local mssql databases",
      "indexType": "string"
    },
    "local group": {
      "key": "local group",
      "type": "property",
      "resultType": "local group",
      "singularPhrase": "local group",
      "pluralPhrase": "local groups"
    },
    "local group <string>": {
      "key": "local group <string>",
      "type": "property",
      "resultType": "local group",
      "singularPhrase": "local group",
      "pluralPhrase": "local groups",
      "indexType": "string"
    },
    "local administrator": {
      "key": "local administrator",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "local administrator",
      "pluralPhrase": "local administrators"
    },
    "invalid state": {
      "key": "invalid state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "invalid state",
      "pluralPhrase": "invalid states"
    },
    "internet protocol <integer>": {
      "key": "internet protocol <integer>",
      "type": "property",
      "resultType": "internet protocol",
      "singularPhrase": "internet protocol",
      "pluralPhrase": "internet protocols",
      "indexType": "integer"
    },
    "interactive group": {
      "key": "interactive group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "interactive group",
      "pluralPhrase": "interactive groups"
    },
    "install folder <integer>": {
      "key": "install folder <integer>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "install folder",
      "pluralPhrase": "install folders",
      "indexType": "integer"
    },
    "information event log event type": {
      "key": "information event log event type",
      "type": "property",
      "resultType": "event log event type",
      "singularPhrase": "information event log event type",
      "pluralPhrase": "information event log event types"
    },
    "inbound blocked firewall local policy modify state": {
      "key": "inbound blocked firewall local policy modify state",
      "type": "property",
      "resultType": "firewall local policy modify state",
      "singularPhrase": "inbound blocked firewall local policy modify state",
      "pluralPhrase": "inbound blocked firewall local policy modify states"
    },
    "idle task trigger type": {
      "key": "idle task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "idle task trigger type",
      "pluralPhrase": "idle task trigger types"
    },
    "idle state": {
      "key": "idle state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "idle state",
      "pluralPhrase": "idle states"
    },
    "idle priority": {
      "key": "idle priority",
      "type": "property",
      "resultType": "priority class",
      "singularPhrase": "idle priority",
      "pluralPhrase": "idle priorities"
    },
    "hyperthreading enabled": {
      "key": "hyperthreading enabled",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "hyperthreading enabled",
      "pluralPhrase": "hyperthreading enableds"
    },
    "hyperthreading capable": {
      "key": "hyperthreading capable",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "hyperthreading capable",
      "pluralPhrase": "hyperthreading capables"
    },
    "hotsync manager": {
      "key": "hotsync manager",
      "type": "property",
      "resultType": "hotsync manager",
      "singularPhrase": "hotsync manager",
      "pluralPhrase": "hotsync managers"
    },
    "high priority": {
      "key": "high priority",
      "type": "property",
      "resultType": "priority class",
      "singularPhrase": "high priority",
      "pluralPhrase": "high priorities"
    },
    "gp override firewall local policy modify state": {
      "key": "gp override firewall local policy modify state",
      "type": "property",
      "resultType": "firewall local policy modify state",
      "singularPhrase": "gp override firewall local policy modify state",
      "pluralPhrase": "gp override firewall local policy modify states"
    },
    "full wmi <string>": {
      "key": "full wmi <string>",
      "type": "property",
      "resultType": "wmi",
      "singularPhrase": "full wmi",
      "pluralPhrase": "full wmis",
      "indexType": "string"
    },
    "first interface scheduled task": {
      "key": "first interface scheduled task",
      "type": "property",
      "resultType": "scheduled task",
      "singularPhrase": "first interface scheduled task",
      "pluralPhrase": "first interface scheduled tasks"
    },
    "firewall": {
      "key": "firewall",
      "type": "property",
      "resultType": "firewall",
      "singularPhrase": "firewall",
      "pluralPhrase": "firewalls"
    },
    "firewall service type <integer>": {
      "key": "firewall service type <integer>",
      "type": "property",
      "resultType": "firewall service type",
      "singularPhrase": "firewall service type",
      "pluralPhrase": "firewall service types",
      "indexType": "integer"
    },
    "firewall scope <integer>": {
      "key": "firewall scope <integer>",
      "type": "property",
      "resultType": "firewall scope",
      "singularPhrase": "firewall scope",
      "pluralPhrase": "firewall scopes",
      "indexType": "integer"
    },
    "firewall profile type <integer>": {
      "key": "firewall profile type <integer>",
      "type": "property",
      "resultType": "firewall profile type",
      "singularPhrase": "firewall profile type",
      "pluralPhrase": "firewall profile types",
      "indexType": "integer"
    },
    "firewall local policy modify state <integer>": {
      "key": "firewall local policy modify state <integer>",
      "type": "property",
      "resultType": "firewall local policy modify state",
      "singularPhrase": "firewall local policy modify state",
      "pluralPhrase": "firewall local policy modify states",
      "indexType": "integer"
    },
    "firewall action <integer>": {
      "key": "firewall action <integer>",
      "type": "property",
      "resultType": "firewall action",
      "singularPhrase": "firewall action",
      "pluralPhrase": "firewall actions",
      "indexType": "integer"
    },
    "file_and_print firewall service type": {
      "key": "file_and_print firewall service type",
      "type": "property",
      "resultType": "firewall service type",
      "singularPhrase": "file_and_print firewall service type",
      "pluralPhrase": "file_and_print firewall service types"
    },
    "exec task action type": {
      "key": "exec task action type",
      "type": "property",
      "resultType": "task action type",
      "singularPhrase": "exec task action type",
      "pluralPhrase": "exec task action types"
    },
    "everyone group": {
      "key": "everyone group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "everyone group",
      "pluralPhrase": "everyone groups"
    },
    "event task trigger type": {
      "key": "event task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "event task trigger type",
      "pluralPhrase": "event task trigger types"
    },
    "event log event type <integer>": {
      "key": "event log event type <integer>",
      "type": "property",
      "resultType": "event log event type",
      "singularPhrase": "event log event type",
      "pluralPhrase": "event log event types",
      "indexType": "integer"
    },
    "event log <string>": {
      "key": "event log <string>",
      "type": "property",
      "resultType": "event log",
      "singularPhrase": "event log",
      "pluralPhrase": "event logs",
      "indexType": "string"
    },
    "error event log event type": {
      "key": "error event log event type",
      "type": "property",
      "resultType": "event log event type",
      "singularPhrase": "error event log event type",
      "pluralPhrase": "error event log event types"
    },
    "enterprise bit <operating system suite mask>": {
      "key": "enterprise bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enterprise bit",
      "pluralPhrase": "enterprise bits",
      "indexType": "operating system suite mask"
    },
    "embedded restricted bit <operating system suite mask>": {
      "key": "embedded restricted bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "embedded restricted bit",
      "pluralPhrase": "embedded restricted bits",
      "indexType": "operating system suite mask"
    },
    "embedded nt bit <operating system suite mask>": {
      "key": "embedded nt bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "embedded nt bit",
      "pluralPhrase": "embedded nt bits",
      "indexType": "operating system suite mask"
    },
    "email task action type": {
      "key": "email task action type",
      "type": "property",
      "resultType": "task action type",
      "singularPhrase": "email task action type",
      "pluralPhrase": "email task action types"
    },
    "domain user": {
      "key": "domain user",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "domain user",
      "pluralPhrase": "domain users"
    },
    "domain user <string>": {
      "key": "domain user <string>",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "domain user",
      "pluralPhrase": "domain users",
      "indexType": "string"
    },
    "domain firewall profile type": {
      "key": "domain firewall profile type",
      "type": "property",
      "resultType": "firewall profile type",
      "singularPhrase": "domain firewall profile type",
      "pluralPhrase": "domain firewall profile types"
    },
    "dialup group": {
      "key": "dialup group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "dialup group",
      "pluralPhrase": "dialup groups"
    },
    "datacenter bit <operating system suite mask>": {
      "key": "datacenter bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "datacenter bit",
      "pluralPhrase": "datacenter bits",
      "indexType": "operating system suite mask"
    },
    "daily task trigger type": {
      "key": "daily task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "daily task trigger type",
      "pluralPhrase": "daily task trigger types"
    },
    "custom firewall scope": {
      "key": "custom firewall scope",
      "type": "property",
      "resultType": "firewall scope",
      "singularPhrase": "custom firewall scope",
      "pluralPhrase": "custom firewall scopes"
    },
    "current firewall profile type": {
      "key": "current firewall profile type",
      "type": "property",
      "resultType": "firewall profile type",
      "singularPhrase": "current firewall profile type",
      "pluralPhrase": "current firewall profile types"
    },
    "csidl folder <integer>": {
      "key": "csidl folder <integer>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "csidl folder",
      "pluralPhrase": "csidl folders",
      "indexType": "integer"
    },
    "creator owner group": {
      "key": "creator owner group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "creator owner group",
      "pluralPhrase": "creator owner groups"
    },
    "creator group group": {
      "key": "creator group group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "creator group group",
      "pluralPhrase": "creator group groups"
    },
    "connection status no hardware present": {
      "key": "connection status no hardware present",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status no hardware present",
      "pluralPhrase": "connection statuses no hardware present"
    },
    "connection status media disconnected": {
      "key": "connection status media disconnected",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status media disconnected",
      "pluralPhrase": "connection statuses media disconnected"
    },
    "connection status hardware malfunction": {
      "key": "connection status hardware malfunction",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status hardware malfunction",
      "pluralPhrase": "connection statuses hardware malfunction"
    },
    "connection status hardware disabled": {
      "key": "connection status hardware disabled",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status hardware disabled",
      "pluralPhrase": "connection statuses hardware disabled"
    },
    "connection status disconnecting": {
      "key": "connection status disconnecting",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status disconnecting",
      "pluralPhrase": "connection statuses disconnecting"
    },
    "connection status disconnected": {
      "key": "connection status disconnected",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status disconnected",
      "pluralPhrase": "connection statuses disconnected"
    },
    "connection status connecting": {
      "key": "connection status connecting",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status connecting",
      "pluralPhrase": "connection statuses connecting"
    },
    "connection status connected": {
      "key": "connection status connected",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status connected",
      "pluralPhrase": "connection statuses connected"
    },
    "connection status authentication succeeded": {
      "key": "connection status authentication succeeded",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status authentication succeeded",
      "pluralPhrase": "connection statuses authentication succeeded"
    },
    "connection status authentication failed": {
      "key": "connection status authentication failed",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status authentication failed",
      "pluralPhrase": "connection statuses authentication failed"
    },
    "connection status authenticating": {
      "key": "connection status authenticating",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status authenticating",
      "pluralPhrase": "connection statuses authenticating"
    },
    "connection status <integer>": {
      "key": "connection status <integer>",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "connection status",
      "pluralPhrase": "connection statuses",
      "indexType": "integer"
    },
    "communications bit <operating system suite mask>": {
      "key": "communications bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "communications bit",
      "pluralPhrase": "communications bits",
      "indexType": "operating system suite mask"
    },
    "com handler task action type": {
      "key": "com handler task action type",
      "type": "property",
      "resultType": "task action type",
      "singularPhrase": "com handler task action type",
      "pluralPhrase": "com handler task action types"
    },
    "builtin users group": {
      "key": "builtin users group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "builtin users group",
      "pluralPhrase": "builtin users groups"
    },
    "builtin replicator group": {
      "key": "builtin replicator group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "builtin replicator group",
      "pluralPhrase": "builtin replicator groups"
    },
    "builtin remote desktop users group": {
      "key": "builtin remote desktop users group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "builtin remote desktop users group",
      "pluralPhrase": "builtin remote desktop users groups"
    },
    "builtin power users group": {
      "key": "builtin power users group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "builtin power users group",
      "pluralPhrase": "builtin power users groups"
    },
    "builtin network configuration operators group": {
      "key": "builtin network configuration operators group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "builtin network configuration operators group",
      "pluralPhrase": "builtin network configuration operators groups"
    },
    "builtin guests group": {
      "key": "builtin guests group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "builtin guests group",
      "pluralPhrase": "builtin guests groups"
    },
    "builtin backup operators group": {
      "key": "builtin backup operators group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "builtin backup operators group",
      "pluralPhrase": "builtin backup operators groups"
    },
    "builtin administrators group": {
      "key": "builtin administrators group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "builtin administrators group",
      "pluralPhrase": "builtin administrators groups"
    },
    "boot task trigger type": {
      "key": "boot task trigger type",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "boot task trigger type",
      "pluralPhrase": "boot task trigger types"
    },
    "block firewall action": {
      "key": "block firewall action",
      "type": "property",
      "resultType": "firewall action",
      "singularPhrase": "block firewall action",
      "pluralPhrase": "block firewall actions"
    },
    "blade bit <operating system suite mask>": {
      "key": "blade bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "blade bit",
      "pluralPhrase": "blade bits",
      "indexType": "operating system suite mask"
    },
    "below normal priority": {
      "key": "below normal priority",
      "type": "property",
      "resultType": "priority class",
      "singularPhrase": "below normal priority",
      "pluralPhrase": "below normal priorities"
    },
    "batch group": {
      "key": "batch group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "batch group",
      "pluralPhrase": "batch groups"
    },
    "backoffice bit <operating system suite mask>": {
      "key": "backoffice bit <operating system suite mask>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "backoffice bit",
      "pluralPhrase": "backoffice bits",
      "indexType": "operating system suite mask"
    },
    "authenticated users group": {
      "key": "authenticated users group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "authenticated users group",
      "pluralPhrase": "authenticated users groups"
    },
    "audit success event log event type": {
      "key": "audit success event log event type",
      "type": "property",
      "resultType": "event log event type",
      "singularPhrase": "audit success event log event type",
      "pluralPhrase": "audit success event log event types"
    },
    "audit policy": {
      "key": "audit policy",
      "type": "property",
      "resultType": "audit policy",
      "singularPhrase": "audit policy",
      "pluralPhrase": "audit policies"
    },
    "audit failure event log event type": {
      "key": "audit failure event log event type",
      "type": "property",
      "resultType": "event log event type",
      "singularPhrase": "audit failure event log event type",
      "pluralPhrase": "audit failure event log event types"
    },
    "application event log": {
      "key": "application event log",
      "type": "property",
      "resultType": "event log",
      "singularPhrase": "application event log",
      "pluralPhrase": "application event logs"
    },
    "ansi code page": {
      "key": "ansi code page",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "ansi code page",
      "pluralPhrase": "ansi code pages"
    },
    "anonymous logon group": {
      "key": "anonymous logon group",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "anonymous logon group",
      "pluralPhrase": "anonymous logon groups"
    },
    "allow firewall action": {
      "key": "allow firewall action",
      "type": "property",
      "resultType": "firewall action",
      "singularPhrase": "allow firewall action",
      "pluralPhrase": "allow firewall actions"
    },
    "all firewall scope": {
      "key": "all firewall scope",
      "type": "property",
      "resultType": "firewall scope",
      "singularPhrase": "all firewall scope",
      "pluralPhrase": "all firewall scopes"
    },
    "active state": {
      "key": "active state",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "active state",
      "pluralPhrase": "active states"
    },
    "active device": {
      "key": "active device",
      "type": "property",
      "resultType": "active device",
      "singularPhrase": "active device",
      "pluralPhrase": "active devices"
    },
    "active device file": {
      "key": "active device file",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "active device file",
      "pluralPhrase": "active device files"
    },
    "active device file <string>": {
      "key": "active device file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "active device file",
      "pluralPhrase": "active device files",
      "indexType": "string"
    },
    "account with privileges": {
      "key": "account with privileges",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "account with privileges",
      "pluralPhrase": "accounts with privileges"
    },
    "account with privilege <string>": {
      "key": "account with privilege <string>",
      "type": "property",
      "resultType": "security account",
      "singularPhrase": "account with privilege",
      "pluralPhrase": "accounts with privilege",
      "indexType": "string"
    },
    "above normal priority": {
      "key": "above normal priority",
      "type": "property",
      "resultType": "priority class",
      "singularPhrase": "above normal priority",
      "pluralPhrase": "above normal priorities"
    },
    "type of <wmi select>": {
      "key": "type of <wmi select>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "wmi select"
    },
    "time value of <wmi select>": {
      "key": "time value of <wmi select>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time value",
      "pluralPhrase": "time values",
      "directObjectType": "wmi select"
    },
    "time value <integer> of <wmi select>": {
      "key": "time value <integer> of <wmi select>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time value",
      "pluralPhrase": "time values",
      "indexType": "integer",
      "directObjectType": "wmi select"
    },
    "string value of <wmi select>": {
      "key": "string value of <wmi select>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "string value",
      "pluralPhrase": "string values",
      "directObjectType": "wmi select"
    },
    "string value <integer> of <wmi select>": {
      "key": "string value <integer> of <wmi select>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "string value",
      "pluralPhrase": "string values",
      "indexType": "integer",
      "directObjectType": "wmi select"
    },
    "name of <wmi select>": {
      "key": "name of <wmi select>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "wmi select"
    },
    "integer value of <wmi select>": {
      "key": "integer value of <wmi select>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer value",
      "pluralPhrase": "integer values",
      "directObjectType": "wmi select"
    },
    "integer value <integer> of <wmi select>": {
      "key": "integer value <integer> of <wmi select>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "integer value",
      "pluralPhrase": "integer values",
      "indexType": "integer",
      "directObjectType": "wmi select"
    },
    "boolean value of <wmi select>": {
      "key": "boolean value of <wmi select>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "boolean value",
      "pluralPhrase": "boolean values",
      "directObjectType": "wmi select"
    },
    "boolean value <integer> of <wmi select>": {
      "key": "boolean value <integer> of <wmi select>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "boolean value",
      "pluralPhrase": "boolean values",
      "indexType": "integer",
      "directObjectType": "wmi select"
    },
    "<wmi select> as string": {
      "key": "<wmi select> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "wmi select",
      "phrase": "string"
    },
    "property of <wmi object>": {
      "key": "property of <wmi object>",
      "type": "property",
      "resultType": "wmi select",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "directObjectType": "wmi object"
    },
    "property <string> of <wmi object>": {
      "key": "property <string> of <wmi object>",
      "type": "property",
      "resultType": "wmi select",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "indexType": "string",
      "directObjectType": "wmi object"
    },
    "<wmi object> as string": {
      "key": "<wmi object> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "wmi object",
      "phrase": "string"
    },
    "select object <string> of <wmi>": {
      "key": "select object <string> of <wmi>",
      "type": "property",
      "resultType": "wmi object",
      "singularPhrase": "select object",
      "pluralPhrase": "select objects",
      "indexType": "string",
      "directObjectType": "wmi"
    },
    "select <string> of <wmi>": {
      "key": "select <string> of <wmi>",
      "type": "property",
      "resultType": "wmi select",
      "singularPhrase": "select",
      "pluralPhrase": "selects",
      "indexType": "string",
      "directObjectType": "wmi"
    },
    "weeks interval of <weekly task trigger>": {
      "key": "weeks interval of <weekly task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "weeks interval",
      "pluralPhrase": "weeks intervals",
      "directObjectType": "weekly task trigger"
    },
    "random delay of <weekly task trigger>": {
      "key": "random delay of <weekly task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "random delay",
      "pluralPhrase": "random delays",
      "directObjectType": "weekly task trigger"
    },
    "days run of <weekly task trigger>": {
      "key": "days run of <weekly task trigger>",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "days run",
      "pluralPhrase": "days runs",
      "directObjectType": "weekly task trigger"
    },
    "random delay of <time task trigger>": {
      "key": "random delay of <time task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "random delay",
      "pluralPhrase": "random delays",
      "directObjectType": "time task trigger"
    },
    "<task trigger type> = <task trigger type>": {
      "key": "<task trigger type> = <task trigger type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "task trigger type",
      "op": "=",
      "rightType": "task trigger type"
    },
    "type of <task trigger>": {
      "key": "type of <task trigger>",
      "type": "property",
      "resultType": "task trigger type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "task trigger"
    },
    "start boundary of <task trigger>": {
      "key": "start boundary of <task trigger>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "start boundary",
      "pluralPhrase": "start boundaries",
      "directObjectType": "task trigger"
    },
    "repetition of <task trigger>": {
      "key": "repetition of <task trigger>",
      "type": "property",
      "resultType": "task repetition pattern",
      "singularPhrase": "repetition",
      "pluralPhrase": "repetitions",
      "directObjectType": "task trigger"
    },
    "id of <task trigger>": {
      "key": "id of <task trigger>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "task trigger"
    },
    "execution time limit of <task trigger>": {
      "key": "execution time limit of <task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "execution time limit",
      "pluralPhrase": "execution time limits",
      "directObjectType": "task trigger"
    },
    "end boundary of <task trigger>": {
      "key": "end boundary of <task trigger>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "end boundary",
      "pluralPhrase": "end boundaries",
      "directObjectType": "task trigger"
    },
    "enabled of <task trigger>": {
      "key": "enabled of <task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "task trigger"
    },
    "<task trigger> as weekly task trigger": {
      "key": "<task trigger> as weekly task trigger",
      "type": "cast",
      "resultType": "weekly task trigger",
      "argType": "task trigger",
      "phrase": "weekly task trigger"
    },
    "<task trigger> as time task trigger": {
      "key": "<task trigger> as time task trigger",
      "type": "cast",
      "resultType": "time task trigger",
      "argType": "task trigger",
      "phrase": "time task trigger"
    },
    "<task trigger> as session state change task trigger": {
      "key": "<task trigger> as session state change task trigger",
      "type": "cast",
      "resultType": "session state change task trigger",
      "argType": "task trigger",
      "phrase": "session state change task trigger"
    },
    "<task trigger> as registration task trigger": {
      "key": "<task trigger> as registration task trigger",
      "type": "cast",
      "resultType": "registration task trigger",
      "argType": "task trigger",
      "phrase": "registration task trigger"
    },
    "<task trigger> as monthlydow task trigger": {
      "key": "<task trigger> as monthlydow task trigger",
      "type": "cast",
      "resultType": "monthlydow task trigger",
      "argType": "task trigger",
      "phrase": "monthlydow task trigger"
    },
    "<task trigger> as monthly task trigger": {
      "key": "<task trigger> as monthly task trigger",
      "type": "cast",
      "resultType": "monthly task trigger",
      "argType": "task trigger",
      "phrase": "monthly task trigger"
    },
    "<task trigger> as logon task trigger": {
      "key": "<task trigger> as logon task trigger",
      "type": "cast",
      "resultType": "logon task trigger",
      "argType": "task trigger",
      "phrase": "logon task trigger"
    },
    "<task trigger> as idle task trigger": {
      "key": "<task trigger> as idle task trigger",
      "type": "cast",
      "resultType": "idle task trigger",
      "argType": "task trigger",
      "phrase": "idle task trigger"
    },
    "<task trigger> as event task trigger": {
      "key": "<task trigger> as event task trigger",
      "type": "cast",
      "resultType": "event task trigger",
      "argType": "task trigger",
      "phrase": "event task trigger"
    },
    "<task trigger> as daily task trigger": {
      "key": "<task trigger> as daily task trigger",
      "type": "cast",
      "resultType": "daily task trigger",
      "argType": "task trigger",
      "phrase": "daily task trigger"
    },
    "<task trigger> as boot task trigger": {
      "key": "<task trigger> as boot task trigger",
      "type": "cast",
      "resultType": "boot task trigger",
      "argType": "task trigger",
      "phrase": "boot task trigger"
    },
    "xml of <task settings>": {
      "key": "xml of <task settings>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "xml",
      "pluralPhrase": "xmls",
      "directObjectType": "task settings"
    },
    "wake to run of <task settings>": {
      "key": "wake to run of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "wake to run",
      "pluralPhrase": "wake to runs",
      "directObjectType": "task settings"
    },
    "v2 compatibility of <task settings>": {
      "key": "v2 compatibility of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "v2 compatibility",
      "pluralPhrase": "v2 compatibilities",
      "directObjectType": "task settings"
    },
    "v1 compatibility of <task settings>": {
      "key": "v1 compatibility of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "v1 compatibility",
      "pluralPhrase": "v1 compatibilities",
      "directObjectType": "task settings"
    },
    "stop when going on battery of <task settings>": {
      "key": "stop when going on battery of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "stop when going on battery",
      "pluralPhrase": "stop when going on batteries",
      "directObjectType": "task settings"
    },
    "stop existing instance of <task settings>": {
      "key": "stop existing instance of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "stop existing instance",
      "pluralPhrase": "stop existing instances",
      "directObjectType": "task settings"
    },
    "start when available of <task settings>": {
      "key": "start when available of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "start when available",
      "pluralPhrase": "start when availables",
      "directObjectType": "task settings"
    },
    "run only when network available of <task settings>": {
      "key": "run only when network available of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "run only when network available",
      "pluralPhrase": "run only when network availables",
      "directObjectType": "task settings"
    },
    "run only when idle of <task settings>": {
      "key": "run only when idle of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "run only when idle",
      "pluralPhrase": "run only when idles",
      "directObjectType": "task settings"
    },
    "restart interval of <task settings>": {
      "key": "restart interval of <task settings>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "restart interval",
      "pluralPhrase": "restart intervals",
      "directObjectType": "task settings"
    },
    "restart count of <task settings>": {
      "key": "restart count of <task settings>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "restart count",
      "pluralPhrase": "restart counts",
      "directObjectType": "task settings"
    },
    "queue instance of <task settings>": {
      "key": "queue instance of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "queue instance",
      "pluralPhrase": "queue instances",
      "directObjectType": "task settings"
    },
    "priority of <task settings>": {
      "key": "priority of <task settings>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "priority",
      "pluralPhrase": "priorities",
      "directObjectType": "task settings"
    },
    "parallel instance of <task settings>": {
      "key": "parallel instance of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "parallel instance",
      "pluralPhrase": "parallel instances",
      "directObjectType": "task settings"
    },
    "network setting of <task settings>": {
      "key": "network setting of <task settings>",
      "type": "property",
      "resultType": "task network settings",
      "singularPhrase": "network setting",
      "pluralPhrase": "network settings",
      "directObjectType": "task settings"
    },
    "ignore new instance of <task settings>": {
      "key": "ignore new instance of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "ignore new instance",
      "pluralPhrase": "ignore new instances",
      "directObjectType": "task settings"
    },
    "idle setting of <task settings>": {
      "key": "idle setting of <task settings>",
      "type": "property",
      "resultType": "task idle settings",
      "singularPhrase": "idle setting",
      "pluralPhrase": "idle settings",
      "directObjectType": "task settings"
    },
    "hidden of <task settings>": {
      "key": "hidden of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "hidden",
      "pluralPhrase": "hiddens",
      "directObjectType": "task settings"
    },
    "execution time limit of <task settings>": {
      "key": "execution time limit of <task settings>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "execution time limit",
      "pluralPhrase": "execution time limits",
      "directObjectType": "task settings"
    },
    "enabled of <task settings>": {
      "key": "enabled of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "task settings"
    },
    "disallow start when on battery of <task settings>": {
      "key": "disallow start when on battery of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "disallow start when on battery",
      "pluralPhrase": "disallow start when on batteries",
      "directObjectType": "task settings"
    },
    "delete expired task after of <task settings>": {
      "key": "delete expired task after of <task settings>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "delete expired task after",
      "pluralPhrase": "delete expired task afters",
      "directObjectType": "task settings"
    },
    "at compatibility of <task settings>": {
      "key": "at compatibility of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "at compatibility",
      "pluralPhrase": "at compatibilities",
      "directObjectType": "task settings"
    },
    "allow hard terminate of <task settings>": {
      "key": "allow hard terminate of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow hard terminate",
      "pluralPhrase": "allow hard terminates",
      "directObjectType": "task settings"
    },
    "allow demand start of <task settings>": {
      "key": "allow demand start of <task settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow demand start",
      "pluralPhrase": "allow demand starts",
      "directObjectType": "task settings"
    },
    "stop at duration end of <task repetition pattern>": {
      "key": "stop at duration end of <task repetition pattern>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "stop at duration end",
      "pluralPhrase": "stop at duration ends",
      "directObjectType": "task repetition pattern"
    },
    "interval of <task repetition pattern>": {
      "key": "interval of <task repetition pattern>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "interval",
      "pluralPhrase": "intervals",
      "directObjectType": "task repetition pattern"
    },
    "duration of <task repetition pattern>": {
      "key": "duration of <task repetition pattern>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "duration",
      "pluralPhrase": "durations",
      "directObjectType": "task repetition pattern"
    },
    "xml of <task registration info>": {
      "key": "xml of <task registration info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "xml",
      "pluralPhrase": "xmls",
      "directObjectType": "task registration info"
    },
    "version of <task registration info>": {
      "key": "version of <task registration info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "task registration info"
    },
    "uri of <task registration info>": {
      "key": "uri of <task registration info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "uri",
      "pluralPhrase": "uris",
      "directObjectType": "task registration info"
    },
    "source of <task registration info>": {
      "key": "source of <task registration info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "source",
      "pluralPhrase": "sources",
      "directObjectType": "task registration info"
    },
    "security descriptor of <task registration info>": {
      "key": "security descriptor of <task registration info>",
      "type": "property",
      "resultType": "security descriptor",
      "singularPhrase": "security descriptor",
      "pluralPhrase": "security descriptors",
      "directObjectType": "task registration info"
    },
    "documentation of <task registration info>": {
      "key": "documentation of <task registration info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "documentation",
      "pluralPhrase": "documentations",
      "directObjectType": "task registration info"
    },
    "description of <task registration info>": {
      "key": "description of <task registration info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "task registration info"
    },
    "date of <task registration info>": {
      "key": "date of <task registration info>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "date",
      "pluralPhrase": "dates",
      "directObjectType": "task registration info"
    },
    "author of <task registration info>": {
      "key": "author of <task registration info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "author",
      "pluralPhrase": "authors",
      "directObjectType": "task registration info"
    },
    "user id of <task principal>": {
      "key": "user id of <task principal>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "user id",
      "pluralPhrase": "user ids",
      "directObjectType": "task principal"
    },
    "service account logon of <task principal>": {
      "key": "service account logon of <task principal>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "service account logon",
      "pluralPhrase": "service account logons",
      "directObjectType": "task principal"
    },
    "s4u logon of <task principal>": {
      "key": "s4u logon of <task principal>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "s4u logon",
      "pluralPhrase": "s4u logons",
      "directObjectType": "task principal"
    },
    "password logon of <task principal>": {
      "key": "password logon of <task principal>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "password logon",
      "pluralPhrase": "password logons",
      "directObjectType": "task principal"
    },
    "none logon of <task principal>": {
      "key": "none logon of <task principal>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "none logon",
      "pluralPhrase": "none logons",
      "directObjectType": "task principal"
    },
    "lua runlevel of <task principal>": {
      "key": "lua runlevel of <task principal>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "lua runlevel",
      "pluralPhrase": "lua runlevels",
      "directObjectType": "task principal"
    },
    "interactive token password logon of <task principal>": {
      "key": "interactive token password logon of <task principal>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "interactive token password logon",
      "pluralPhrase": "interactive token password logons",
      "directObjectType": "task principal"
    },
    "interactive token logon of <task principal>": {
      "key": "interactive token logon of <task principal>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "interactive token logon",
      "pluralPhrase": "interactive token logons",
      "directObjectType": "task principal"
    },
    "id of <task principal>": {
      "key": "id of <task principal>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "task principal"
    },
    "highest runlevel of <task principal>": {
      "key": "highest runlevel of <task principal>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "highest runlevel",
      "pluralPhrase": "highest runlevels",
      "directObjectType": "task principal"
    },
    "group logon of <task principal>": {
      "key": "group logon of <task principal>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "group logon",
      "pluralPhrase": "group logons",
      "directObjectType": "task principal"
    },
    "group id of <task principal>": {
      "key": "group id of <task principal>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "group id",
      "pluralPhrase": "group ids",
      "directObjectType": "task principal"
    },
    "display name of <task principal>": {
      "key": "display name of <task principal>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display name",
      "pluralPhrase": "display names",
      "directObjectType": "task principal"
    },
    "name of <task network settings>": {
      "key": "name of <task network settings>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "task network settings"
    },
    "id of <task network settings>": {
      "key": "id of <task network settings>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "task network settings"
    },
    "value of <task named value pair>": {
      "key": "value of <task named value pair>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "task named value pair"
    },
    "name of <task named value pair>": {
      "key": "name of <task named value pair>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "task named value pair"
    },
    "wait timeout of <task idle settings>": {
      "key": "wait timeout of <task idle settings>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "wait timeout",
      "pluralPhrase": "wait timeouts",
      "directObjectType": "task idle settings"
    },
    "stop on idle end of <task idle settings>": {
      "key": "stop on idle end of <task idle settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "stop on idle end",
      "pluralPhrase": "stop on idle ends",
      "directObjectType": "task idle settings"
    },
    "restart on idle of <task idle settings>": {
      "key": "restart on idle of <task idle settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "restart on idle",
      "pluralPhrase": "restart on idles",
      "directObjectType": "task idle settings"
    },
    "idle duration of <task idle settings>": {
      "key": "idle duration of <task idle settings>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "idle duration",
      "pluralPhrase": "idle durations",
      "directObjectType": "task idle settings"
    },
    "task folder of <task folder>": {
      "key": "task folder of <task folder>",
      "type": "property",
      "resultType": "task folder",
      "singularPhrase": "task folder",
      "pluralPhrase": "task folders",
      "directObjectType": "task folder"
    },
    "security descriptor of <task folder>": {
      "key": "security descriptor of <task folder>",
      "type": "property",
      "resultType": "security descriptor",
      "singularPhrase": "security descriptor",
      "pluralPhrase": "security descriptors",
      "directObjectType": "task folder"
    },
    "scheduled task of <task folder>": {
      "key": "scheduled task of <task folder>",
      "type": "property",
      "resultType": "scheduled task",
      "singularPhrase": "scheduled task",
      "pluralPhrase": "scheduled tasks",
      "directObjectType": "task folder"
    },
    "scheduled task <string> of <task folder>": {
      "key": "scheduled task <string> of <task folder>",
      "type": "property",
      "resultType": "scheduled task",
      "singularPhrase": "scheduled task",
      "pluralPhrase": "scheduled tasks",
      "indexType": "string",
      "directObjectType": "task folder"
    },
    "path of <task folder>": {
      "key": "path of <task folder>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "task folder"
    },
    "name of <task folder>": {
      "key": "name of <task folder>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "task folder"
    },
    "descendant of <task folder>": {
      "key": "descendant of <task folder>",
      "type": "property",
      "resultType": "scheduled task",
      "singularPhrase": "descendant",
      "pluralPhrase": "descendants",
      "directObjectType": "task folder"
    },
    "xml of <task definition>": {
      "key": "xml of <task definition>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "xml",
      "pluralPhrase": "xmls",
      "directObjectType": "task definition"
    },
    "trigger of <task definition>": {
      "key": "trigger of <task definition>",
      "type": "property",
      "resultType": "task trigger",
      "singularPhrase": "trigger",
      "pluralPhrase": "triggers",
      "directObjectType": "task definition"
    },
    "setting of <task definition>": {
      "key": "setting of <task definition>",
      "type": "property",
      "resultType": "task settings",
      "singularPhrase": "setting",
      "pluralPhrase": "settings",
      "directObjectType": "task definition"
    },
    "registration info of <task definition>": {
      "key": "registration info of <task definition>",
      "type": "property",
      "resultType": "task registration info",
      "singularPhrase": "registration info",
      "pluralPhrase": "registration infos",
      "directObjectType": "task definition"
    },
    "principal of <task definition>": {
      "key": "principal of <task definition>",
      "type": "property",
      "resultType": "task principal",
      "singularPhrase": "principal",
      "pluralPhrase": "principals",
      "directObjectType": "task definition"
    },
    "data of <task definition>": {
      "key": "data of <task definition>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "data",
      "pluralPhrase": "datas",
      "directObjectType": "task definition"
    },
    "action of <task definition>": {
      "key": "action of <task definition>",
      "type": "property",
      "resultType": "task action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "directObjectType": "task definition"
    },
    "<task action type> = <task action type>": {
      "key": "<task action type> = <task action type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "task action type",
      "op": "=",
      "rightType": "task action type"
    },
    "type of <task action>": {
      "key": "type of <task action>",
      "type": "property",
      "resultType": "task action type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "task action"
    },
    "id of <task action>": {
      "key": "id of <task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "task action"
    },
    "<task action> as show message task action": {
      "key": "<task action> as show message task action",
      "type": "cast",
      "resultType": "show message task action",
      "argType": "task action",
      "phrase": "show message task action"
    },
    "<task action> as exec task action": {
      "key": "<task action> as exec task action",
      "type": "cast",
      "resultType": "exec task action",
      "argType": "task action",
      "phrase": "exec task action"
    },
    "<task action> as email task action": {
      "key": "<task action> as email task action",
      "type": "cast",
      "resultType": "email task action",
      "argType": "task action",
      "phrase": "email task action"
    },
    "<task action> as com handler task action": {
      "key": "<task action> as com handler task action",
      "type": "cast",
      "resultType": "com handler task action",
      "argType": "task action",
      "phrase": "com handler task action"
    },
    "state of <system power interval>": {
      "key": "state of <system power interval>",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "state",
      "pluralPhrase": "states",
      "directObjectType": "system power interval"
    },
    "range of <system power interval>": {
      "key": "range of <system power interval>",
      "type": "property",
      "resultType": "time range",
      "singularPhrase": "range",
      "pluralPhrase": "ranges",
      "directObjectType": "system power interval"
    },
    "<system access control list> as string": {
      "key": "<system access control list> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "system access control list",
      "phrase": "string"
    },
    "expand environment string of <string>": {
      "key": "expand environment string of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "expand environment string",
      "pluralPhrase": "expand environment strings",
      "directObjectType": "string"
    },
    "escape of <string>": {
      "key": "escape of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "escape",
      "pluralPhrase": "escapes",
      "directObjectType": "string"
    },
    "value of <site profile variable>": {
      "key": "value of <site profile variable>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "site profile variable"
    },
    "name of <site profile variable>": {
      "key": "name of <site profile variable>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "site profile variable"
    },
    "<site profile variable> as string": {
      "key": "<site profile variable> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "site profile variable",
      "phrase": "string"
    },
    "variable of <site profile>": {
      "key": "variable of <site profile>",
      "type": "property",
      "resultType": "site profile variable",
      "singularPhrase": "variable",
      "pluralPhrase": "variables",
      "directObjectType": "site profile"
    },
    "variable <string> of <site profile>": {
      "key": "variable <string> of <site profile>",
      "type": "property",
      "resultType": "site profile variable",
      "singularPhrase": "variable",
      "pluralPhrase": "variables",
      "indexType": "string",
      "directObjectType": "site profile"
    },
    "template file of <site profile>": {
      "key": "template file of <site profile>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "template file",
      "pluralPhrase": "template files",
      "directObjectType": "site profile"
    },
    "data file of <site profile>": {
      "key": "data file of <site profile>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "data file",
      "pluralPhrase": "data files",
      "directObjectType": "site profile"
    },
    "profile of <site>": {
      "key": "profile of <site>",
      "type": "property",
      "resultType": "site profile",
      "singularPhrase": "profile",
      "pluralPhrase": "profiles",
      "directObjectType": "site"
    },
    "title of <show message task action>": {
      "key": "title of <show message task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "title",
      "pluralPhrase": "titles",
      "directObjectType": "show message task action"
    },
    "message body of <show message task action>": {
      "key": "message body of <show message task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "message body",
      "pluralPhrase": "message bodies",
      "directObjectType": "show message task action"
    },
    "user id of <session state change task trigger>": {
      "key": "user id of <session state change task trigger>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "user id",
      "pluralPhrase": "user ids",
      "directObjectType": "session state change task trigger"
    },
    "session unlock of <session state change task trigger>": {
      "key": "session unlock of <session state change task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "session unlock",
      "pluralPhrase": "session unlocks",
      "directObjectType": "session state change task trigger"
    },
    "session lock of <session state change task trigger>": {
      "key": "session lock of <session state change task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "session lock",
      "pluralPhrase": "session locks",
      "directObjectType": "session state change task trigger"
    },
    "remote disconnect of <session state change task trigger>": {
      "key": "remote disconnect of <session state change task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "remote disconnect",
      "pluralPhrase": "remote disconnects",
      "directObjectType": "session state change task trigger"
    },
    "remote connect of <session state change task trigger>": {
      "key": "remote connect of <session state change task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "remote connect",
      "pluralPhrase": "remote connects",
      "directObjectType": "session state change task trigger"
    },
    "delay of <session state change task trigger>": {
      "key": "delay of <session state change task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "delay",
      "pluralPhrase": "delays",
      "directObjectType": "session state change task trigger"
    },
    "console disconnect of <session state change task trigger>": {
      "key": "console disconnect of <session state change task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "console disconnect",
      "pluralPhrase": "console disconnects",
      "directObjectType": "session state change task trigger"
    },
    "console connect of <session state change task trigger>": {
      "key": "console connect of <session state change task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "console connect",
      "pluralPhrase": "console connects",
      "directObjectType": "session state change task trigger"
    },
    "win32 exit code of <service>": {
      "key": "win32 exit code of <service>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "win32 exit code",
      "pluralPhrase": "win32 exit codes",
      "directObjectType": "service"
    },
    "start type of <service>": {
      "key": "start type of <service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "start type",
      "pluralPhrase": "start types",
      "directObjectType": "service"
    },
    "service specific exit code of <service>": {
      "key": "service specific exit code of <service>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "service specific exit code",
      "pluralPhrase": "service specific exit codes",
      "directObjectType": "service"
    },
    "service name of <service>": {
      "key": "service name of <service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "service name",
      "pluralPhrase": "service names",
      "directObjectType": "service"
    },
    "security descriptor of <service>": {
      "key": "security descriptor of <service>",
      "type": "property",
      "resultType": "security descriptor",
      "singularPhrase": "security descriptor",
      "pluralPhrase": "security descriptors",
      "directObjectType": "service"
    },
    "login account of <service>": {
      "key": "login account of <service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "login account",
      "pluralPhrase": "login accounts",
      "directObjectType": "service"
    },
    "image path of <service>": {
      "key": "image path of <service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "image path",
      "pluralPhrase": "image paths",
      "directObjectType": "service"
    },
    "file of <service>": {
      "key": "file of <service>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "file",
      "pluralPhrase": "files",
      "directObjectType": "service"
    },
    "display name of <service>": {
      "key": "display name of <service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "display name",
      "pluralPhrase": "display names",
      "directObjectType": "service"
    },
    "checkpoint of <service>": {
      "key": "checkpoint of <service>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "checkpoint",
      "pluralPhrase": "checkpoints",
      "directObjectType": "service"
    },
    "can interact with desktop of <service>": {
      "key": "can interact with desktop of <service>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "can interact with desktop",
      "pluralPhrase": "can interact with desktops",
      "directObjectType": "service"
    },
    "<service> as string": {
      "key": "<service> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "service",
      "phrase": "string"
    },
    "domain name of <security identifier>": {
      "key": "domain name of <security identifier>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "domain name",
      "pluralPhrase": "domain names",
      "directObjectType": "security identifier"
    },
    "component string of <security identifier>": {
      "key": "component string of <security identifier>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "component string",
      "pluralPhrase": "component strings",
      "directObjectType": "security identifier"
    },
    "account name of <security identifier>": {
      "key": "account name of <security identifier>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "account name",
      "pluralPhrase": "account names",
      "directObjectType": "security identifier"
    },
    "<security identifier> as string": {
      "key": "<security identifier> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "security identifier",
      "phrase": "string"
    },
    "<security identifier> = <security identifier>": {
      "key": "<security identifier> = <security identifier>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "security identifier",
      "op": "=",
      "rightType": "security identifier"
    },
    "sacl of <security descriptor>": {
      "key": "sacl of <security descriptor>",
      "type": "property",
      "resultType": "system access control list",
      "singularPhrase": "sacl",
      "pluralPhrase": "sacls",
      "directObjectType": "security descriptor"
    },
    "owner of <security descriptor>": {
      "key": "owner of <security descriptor>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "owner",
      "pluralPhrase": "owners",
      "directObjectType": "security descriptor"
    },
    "group of <security descriptor>": {
      "key": "group of <security descriptor>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "group",
      "pluralPhrase": "groups",
      "directObjectType": "security descriptor"
    },
    "dacl of <security descriptor>": {
      "key": "dacl of <security descriptor>",
      "type": "property",
      "resultType": "discretionary access control list",
      "singularPhrase": "dacl",
      "pluralPhrase": "dacls",
      "directObjectType": "security descriptor"
    },
    "control of <security descriptor>": {
      "key": "control of <security descriptor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "control",
      "pluralPhrase": "controls",
      "directObjectType": "security descriptor"
    },
    "<security descriptor> as string": {
      "key": "<security descriptor> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "security descriptor",
      "phrase": "string"
    },
    "password history length of <security database>": {
      "key": "password history length of <security database>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "password history length",
      "pluralPhrase": "password history lengths",
      "directObjectType": "security database"
    },
    "minimum password length of <security database>": {
      "key": "minimum password length of <security database>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minimum password length",
      "pluralPhrase": "minimum password lengths",
      "directObjectType": "security database"
    },
    "minimum password age of <security database>": {
      "key": "minimum password age of <security database>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "minimum password age",
      "pluralPhrase": "minimum password ages",
      "directObjectType": "security database"
    },
    "maximum password age of <security database>": {
      "key": "maximum password age of <security database>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "maximum password age",
      "pluralPhrase": "maximum password ages",
      "directObjectType": "security database"
    },
    "force logoff interval of <security database>": {
      "key": "force logoff interval of <security database>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "force logoff interval",
      "pluralPhrase": "force logoff intervals",
      "directObjectType": "security database"
    },
    "account lockout threshold of <security database>": {
      "key": "account lockout threshold of <security database>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "account lockout threshold",
      "pluralPhrase": "account lockout thresholds",
      "directObjectType": "security database"
    },
    "account lockout observation window of <security database>": {
      "key": "account lockout observation window of <security database>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "account lockout observation window",
      "pluralPhrase": "account lockout observation windows",
      "directObjectType": "security database"
    },
    "account lockout duration of <security database>": {
      "key": "account lockout duration of <security database>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "account lockout duration",
      "pluralPhrase": "account lockout durations",
      "directObjectType": "security database"
    },
    "sid of <security account>": {
      "key": "sid of <security account>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "sid",
      "pluralPhrase": "sids",
      "directObjectType": "security account"
    },
    "privilege of <security account>": {
      "key": "privilege of <security account>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "privilege",
      "pluralPhrase": "privileges",
      "directObjectType": "security account"
    },
    "xml of <scheduled task>": {
      "key": "xml of <scheduled task>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "xml",
      "pluralPhrase": "xmls",
      "directObjectType": "scheduled task"
    },
    "unknown state of <scheduled task>": {
      "key": "unknown state of <scheduled task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unknown state",
      "pluralPhrase": "unknown states",
      "directObjectType": "scheduled task"
    },
    "trigger string of <scheduled task>": {
      "key": "trigger string of <scheduled task>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "trigger string",
      "pluralPhrase": "trigger strings",
      "directObjectType": "scheduled task"
    },
    "security descriptor of <scheduled task>": {
      "key": "security descriptor of <scheduled task>",
      "type": "property",
      "resultType": "security descriptor",
      "singularPhrase": "security descriptor",
      "pluralPhrase": "security descriptors",
      "directObjectType": "scheduled task"
    },
    "running state of <scheduled task>": {
      "key": "running state of <scheduled task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "running state",
      "pluralPhrase": "running states",
      "directObjectType": "scheduled task"
    },
    "ready state of <scheduled task>": {
      "key": "ready state of <scheduled task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "ready state",
      "pluralPhrase": "ready states",
      "directObjectType": "scheduled task"
    },
    "queued state of <scheduled task>": {
      "key": "queued state of <scheduled task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "queued state",
      "pluralPhrase": "queued states",
      "directObjectType": "scheduled task"
    },
    "path of <scheduled task>": {
      "key": "path of <scheduled task>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "scheduled task"
    },
    "next run time of <scheduled task>": {
      "key": "next run time of <scheduled task>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "next run time",
      "pluralPhrase": "next run times",
      "directObjectType": "scheduled task"
    },
    "name of <scheduled task>": {
      "key": "name of <scheduled task>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "scheduled task"
    },
    "missed run count of <scheduled task>": {
      "key": "missed run count of <scheduled task>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "missed run count",
      "pluralPhrase": "missed run counts",
      "directObjectType": "scheduled task"
    },
    "last task result of <scheduled task>": {
      "key": "last task result of <scheduled task>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "last task result",
      "pluralPhrase": "last task results",
      "directObjectType": "scheduled task"
    },
    "last run time of <scheduled task>": {
      "key": "last run time of <scheduled task>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last run time",
      "pluralPhrase": "last run times",
      "directObjectType": "scheduled task"
    },
    "enabled of <scheduled task>": {
      "key": "enabled of <scheduled task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "scheduled task"
    },
    "disabled state of <scheduled task>": {
      "key": "disabled state of <scheduled task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "disabled state",
      "pluralPhrase": "disabled states",
      "directObjectType": "scheduled task"
    },
    "definition of <scheduled task>": {
      "key": "definition of <scheduled task>",
      "type": "property",
      "resultType": "task definition",
      "singularPhrase": "definition",
      "pluralPhrase": "definitions",
      "directObjectType": "scheduled task"
    },
    "unknown state of <running task>": {
      "key": "unknown state of <running task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unknown state",
      "pluralPhrase": "unknown states",
      "directObjectType": "running task"
    },
    "running state of <running task>": {
      "key": "running state of <running task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "running state",
      "pluralPhrase": "running states",
      "directObjectType": "running task"
    },
    "ready state of <running task>": {
      "key": "ready state of <running task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "ready state",
      "pluralPhrase": "ready states",
      "directObjectType": "running task"
    },
    "queued state of <running task>": {
      "key": "queued state of <running task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "queued state",
      "pluralPhrase": "queued states",
      "directObjectType": "running task"
    },
    "path of <running task>": {
      "key": "path of <running task>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "running task"
    },
    "name of <running task>": {
      "key": "name of <running task>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "running task"
    },
    "instance guid of <running task>": {
      "key": "instance guid of <running task>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "instance guid",
      "pluralPhrase": "instance guids",
      "directObjectType": "running task"
    },
    "engine pid of <running task>": {
      "key": "engine pid of <running task>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "engine pid",
      "pluralPhrase": "engine pids",
      "directObjectType": "running task"
    },
    "disabled state of <running task>": {
      "key": "disabled state of <running task>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "disabled state",
      "pluralPhrase": "disabled states",
      "directObjectType": "running task"
    },
    "current action of <running task>": {
      "key": "current action of <running task>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "current action",
      "pluralPhrase": "current actions",
      "directObjectType": "running task"
    },
    "<string> = <registry key value type>": {
      "key": "<string> = <registry key value type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "registry key value type"
    },
    "<string> <= <registry key value type>": {
      "key": "<string> <= <registry key value type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "registry key value type"
    },
    "<string> < <registry key value type>": {
      "key": "<string> < <registry key value type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "registry key value type"
    },
    "<registry key value type> as string": {
      "key": "<registry key value type> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "registry key value type",
      "phrase": "string"
    },
    "<registry key value type> = <string>": {
      "key": "<registry key value type> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value type",
      "op": "=",
      "rightType": "string"
    },
    "<registry key value type> = <registry key value type>": {
      "key": "<registry key value type> = <registry key value type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value type",
      "op": "=",
      "rightType": "registry key value type"
    },
    "<registry key value type> <= <string>": {
      "key": "<registry key value type> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value type",
      "op": "<=",
      "rightType": "string"
    },
    "<registry key value type> <= <registry key value type>": {
      "key": "<registry key value type> <= <registry key value type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value type",
      "op": "<=",
      "rightType": "registry key value type"
    },
    "<registry key value type> < <string>": {
      "key": "<registry key value type> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value type",
      "op": "<",
      "rightType": "string"
    },
    "<registry key value type> < <registry key value type>": {
      "key": "<registry key value type> < <registry key value type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value type",
      "op": "<",
      "rightType": "registry key value type"
    },
    "type of <registry key value>": {
      "key": "type of <registry key value>",
      "type": "property",
      "resultType": "registry key value type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "registry key value"
    },
    "size of <registry key value>": {
      "key": "size of <registry key value>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "registry key value"
    },
    "name of <registry key value>": {
      "key": "name of <registry key value>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "registry key value"
    },
    "<string> = <registry key value>": {
      "key": "<string> = <registry key value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "registry key value"
    },
    "<string> <= <registry key value>": {
      "key": "<string> <= <registry key value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "registry key value"
    },
    "<string> < <registry key value>": {
      "key": "<string> < <registry key value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "registry key value"
    },
    "<registry key value> as time": {
      "key": "<registry key value> as time",
      "type": "cast",
      "resultType": "time",
      "argType": "registry key value",
      "phrase": "time"
    },
    "<registry key value> as system file": {
      "key": "<registry key value> as system file",
      "type": "cast",
      "resultType": "file",
      "argType": "registry key value",
      "phrase": "system file"
    },
    "<registry key value> as string": {
      "key": "<registry key value> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "registry key value",
      "phrase": "string"
    },
    "<registry key value> as integer": {
      "key": "<registry key value> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "registry key value",
      "phrase": "integer"
    },
    "<registry key value> as folder": {
      "key": "<registry key value> as folder",
      "type": "cast",
      "resultType": "folder",
      "argType": "registry key value",
      "phrase": "folder"
    },
    "<registry key value> as file": {
      "key": "<registry key value> as file",
      "type": "cast",
      "resultType": "file",
      "argType": "registry key value",
      "phrase": "file"
    },
    "<registry key value> as application": {
      "key": "<registry key value> as application",
      "type": "cast",
      "resultType": "application",
      "argType": "registry key value",
      "phrase": "application"
    },
    "<registry key value> = <string>": {
      "key": "<registry key value> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value",
      "op": "=",
      "rightType": "string"
    },
    "<registry key value> = <registry key value>": {
      "key": "<registry key value> = <registry key value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value",
      "op": "=",
      "rightType": "registry key value"
    },
    "<registry key value> <= <string>": {
      "key": "<registry key value> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value",
      "op": "<=",
      "rightType": "string"
    },
    "<registry key value> <= <registry key value>": {
      "key": "<registry key value> <= <registry key value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value",
      "op": "<=",
      "rightType": "registry key value"
    },
    "<registry key value> < <string>": {
      "key": "<registry key value> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value",
      "op": "<",
      "rightType": "string"
    },
    "<registry key value> < <registry key value>": {
      "key": "<registry key value> < <registry key value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value",
      "op": "<",
      "rightType": "registry key value"
    },
    "value of <registry key>": {
      "key": "value of <registry key>",
      "type": "property",
      "resultType": "registry key value",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "registry key"
    },
    "value <string> of <registry key>": {
      "key": "value <string> of <registry key>",
      "type": "property",
      "resultType": "registry key value",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "indexType": "string",
      "directObjectType": "registry key"
    },
    "security descriptor of <registry key>": {
      "key": "security descriptor of <registry key>",
      "type": "property",
      "resultType": "security descriptor",
      "singularPhrase": "security descriptor",
      "pluralPhrase": "security descriptors",
      "directObjectType": "registry key"
    },
    "name of <registry key>": {
      "key": "name of <registry key>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "registry key"
    },
    "last write time of <registry key>": {
      "key": "last write time of <registry key>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last write time",
      "pluralPhrase": "last write times",
      "directObjectType": "registry key"
    },
    "key of <registry key>": {
      "key": "key of <registry key>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "directObjectType": "registry key"
    },
    "key <string> of <registry key>": {
      "key": "key <string> of <registry key>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "indexType": "string",
      "directObjectType": "registry key"
    },
    "driver key of <registry key>": {
      "key": "driver key of <registry key>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "driver key",
      "pluralPhrase": "driver keys",
      "directObjectType": "registry key"
    },
    "default value of <registry key>": {
      "key": "default value of <registry key>",
      "type": "property",
      "resultType": "registry key value",
      "singularPhrase": "default value",
      "pluralPhrase": "default values",
      "directObjectType": "registry key"
    },
    "application of <registry key>": {
      "key": "application of <registry key>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "application",
      "pluralPhrase": "applications",
      "directObjectType": "registry key"
    },
    "application folder of <registry key>": {
      "key": "application folder of <registry key>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "application folder",
      "pluralPhrase": "application folders",
      "directObjectType": "registry key"
    },
    "application folder <string> of <registry key>": {
      "key": "application folder <string> of <registry key>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "application folder",
      "pluralPhrase": "application folders",
      "indexType": "string",
      "directObjectType": "registry key"
    },
    "application <string> of <registry key>": {
      "key": "application <string> of <registry key>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "application",
      "pluralPhrase": "applications",
      "indexType": "string",
      "directObjectType": "registry key"
    },
    "key <string> of <registry>": {
      "key": "key <string> of <registry>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "indexType": "string",
      "directObjectType": "registry"
    },
    "file type <string> of <registry>": {
      "key": "file type <string> of <registry>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "file type",
      "pluralPhrase": "file types",
      "indexType": "string",
      "directObjectType": "registry"
    },
    "file extension <string> of <registry>": {
      "key": "file extension <string> of <registry>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "file extension",
      "pluralPhrase": "file extensions",
      "indexType": "string",
      "directObjectType": "registry"
    },
    "device key of <registry>": {
      "key": "device key of <registry>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "device key",
      "pluralPhrase": "device keys",
      "directObjectType": "registry"
    },
    "device key <string> of <registry>": {
      "key": "device key <string> of <registry>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "device key",
      "pluralPhrase": "device keys",
      "indexType": "string",
      "directObjectType": "registry"
    },
    "current user key <logged on user> of <registry>": {
      "key": "current user key <logged on user> of <registry>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "current user key",
      "pluralPhrase": "current user keys",
      "indexType": "logged on user",
      "directObjectType": "registry"
    },
    "application of <registry>": {
      "key": "application of <registry>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "application",
      "pluralPhrase": "applications",
      "directObjectType": "registry"
    },
    "application folder <string> of <registry>": {
      "key": "application folder <string> of <registry>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "application folder",
      "pluralPhrase": "application folders",
      "indexType": "string",
      "directObjectType": "registry"
    },
    "application <string> of <registry>": {
      "key": "application <string> of <registry>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "application",
      "pluralPhrase": "applications",
      "indexType": "string",
      "directObjectType": "registry"
    },
    "delay of <registration task trigger>": {
      "key": "delay of <registration task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "delay",
      "pluralPhrase": "delays",
      "directObjectType": "registration task trigger"
    },
    "feature mask of <processor>": {
      "key": "feature mask of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "feature mask",
      "pluralPhrase": "feature masks",
      "directObjectType": "processor"
    },
    "extended model of <processor>": {
      "key": "extended model of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "extended model",
      "pluralPhrase": "extended models",
      "directObjectType": "processor"
    },
    "extended family of <processor>": {
      "key": "extended family of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "extended family",
      "pluralPhrase": "extended families",
      "directObjectType": "processor"
    },
    "brand string of <processor>": {
      "key": "brand string of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "brand string",
      "pluralPhrase": "brand strings",
      "directObjectType": "processor"
    },
    "brand id of <processor>": {
      "key": "brand id of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "brand id",
      "pluralPhrase": "brand ids",
      "directObjectType": "processor"
    },
    "wow64 of <process>": {
      "key": "wow64 of <process>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "wow64",
      "pluralPhrase": "wow64s",
      "directObjectType": "process"
    },
    "working set size of <process>": {
      "key": "working set size of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "working set size",
      "pluralPhrase": "working set sizes",
      "directObjectType": "process"
    },
    "user time of <process>": {
      "key": "user time of <process>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "user time",
      "pluralPhrase": "user times",
      "directObjectType": "process"
    },
    "user of <process>": {
      "key": "user of <process>",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "user",
      "pluralPhrase": "users",
      "directObjectType": "process"
    },
    "user object count of <process>": {
      "key": "user object count of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "user object count",
      "pluralPhrase": "user object counts",
      "directObjectType": "process"
    },
    "session id of <process>": {
      "key": "session id of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "session id",
      "pluralPhrase": "session ids",
      "directObjectType": "process"
    },
    "quota peak paged pool usage of <process>": {
      "key": "quota peak paged pool usage of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "quota peak paged pool usage",
      "pluralPhrase": "quota peak paged pool usages",
      "directObjectType": "process"
    },
    "quota peak nonpaged pool usage of <process>": {
      "key": "quota peak nonpaged pool usage of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "quota peak nonpaged pool usage",
      "pluralPhrase": "quota peak nonpaged pool usages",
      "directObjectType": "process"
    },
    "quota paged pool usage of <process>": {
      "key": "quota paged pool usage of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "quota paged pool usage",
      "pluralPhrase": "quota paged pool usages",
      "directObjectType": "process"
    },
    "quota nonpaged pool usage of <process>": {
      "key": "quota nonpaged pool usage of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "quota nonpaged pool usage",
      "pluralPhrase": "quota nonpaged pool usages",
      "directObjectType": "process"
    },
    "peak working set size of <process>": {
      "key": "peak working set size of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "peak working set size",
      "pluralPhrase": "peak working set sizes",
      "directObjectType": "process"
    },
    "peak page file usage of <process>": {
      "key": "peak page file usage of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "peak page file usage",
      "pluralPhrase": "peak page file usages",
      "directObjectType": "process"
    },
    "page file usage of <process>": {
      "key": "page file usage of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "page file usage",
      "pluralPhrase": "page file usages",
      "directObjectType": "process"
    },
    "page fault count of <process>": {
      "key": "page fault count of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "page fault count",
      "pluralPhrase": "page fault counts",
      "directObjectType": "process"
    },
    "kernel time of <process>": {
      "key": "kernel time of <process>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "kernel time",
      "pluralPhrase": "kernel times",
      "directObjectType": "process"
    },
    "io write size of <process>": {
      "key": "io write size of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "io write size",
      "pluralPhrase": "io write sizes",
      "directObjectType": "process"
    },
    "io write count of <process>": {
      "key": "io write count of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "io write count",
      "pluralPhrase": "io write counts",
      "directObjectType": "process"
    },
    "io read size of <process>": {
      "key": "io read size of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "io read size",
      "pluralPhrase": "io read sizes",
      "directObjectType": "process"
    },
    "io read count of <process>": {
      "key": "io read count of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "io read count",
      "pluralPhrase": "io read counts",
      "directObjectType": "process"
    },
    "io other size of <process>": {
      "key": "io other size of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "io other size",
      "pluralPhrase": "io other sizes",
      "directObjectType": "process"
    },
    "io other count of <process>": {
      "key": "io other count of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "io other count",
      "pluralPhrase": "io other counts",
      "directObjectType": "process"
    },
    "image file of <process>": {
      "key": "image file of <process>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "image file",
      "pluralPhrase": "image files",
      "directObjectType": "process"
    },
    "handle count of <process>": {
      "key": "handle count of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "handle count",
      "pluralPhrase": "handle counts",
      "directObjectType": "process"
    },
    "gdi object count of <process>": {
      "key": "gdi object count of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "gdi object count",
      "pluralPhrase": "gdi object counts",
      "directObjectType": "process"
    },
    "creation time of <process>": {
      "key": "creation time of <process>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "creation time",
      "pluralPhrase": "creation times",
      "directObjectType": "process"
    },
    "base priority of <process>": {
      "key": "base priority of <process>",
      "type": "property",
      "resultType": "priority class",
      "singularPhrase": "base priority",
      "pluralPhrase": "base priorities",
      "directObjectType": "process"
    },
    "<priority class> = <priority class>": {
      "key": "<priority class> = <priority class>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "priority class",
      "op": "=",
      "rightType": "priority class"
    },
    "<power state> as string": {
      "key": "<power state> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "power state",
      "phrase": "string"
    },
    "<power state> = <power state>": {
      "key": "<power state> = <power state>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "power state",
      "op": "=",
      "rightType": "power state"
    },
    "system interval of <power history>": {
      "key": "system interval of <power history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "system interval",
      "pluralPhrase": "system intervals",
      "directObjectType": "power history"
    },
    "monitor interval of <power history>": {
      "key": "monitor interval of <power history>",
      "type": "property",
      "resultType": "monitor power interval",
      "singularPhrase": "monitor interval",
      "pluralPhrase": "monitor intervals",
      "directObjectType": "power history"
    },
    "current system interval of <power history>": {
      "key": "current system interval of <power history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "current system interval",
      "pluralPhrase": "current system intervals",
      "directObjectType": "power history"
    },
    "current monitor interval of <power history>": {
      "key": "current monitor interval of <power history>",
      "type": "property",
      "resultType": "monitor power interval",
      "singularPhrase": "current monitor interval",
      "pluralPhrase": "current monitor intervals",
      "directObjectType": "power history"
    },
    "target name of <port mapping>": {
      "key": "target name of <port mapping>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "target name",
      "pluralPhrase": "target names",
      "directObjectType": "port mapping"
    },
    "target ipv4or6 address of <port mapping>": {
      "key": "target ipv4or6 address of <port mapping>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "target ipv4or6 address",
      "pluralPhrase": "target ipv4or6 addresses",
      "directObjectType": "port mapping"
    },
    "target ip address of <port mapping>": {
      "key": "target ip address of <port mapping>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "target ip address",
      "pluralPhrase": "target ip addresses",
      "directObjectType": "port mapping"
    },
    "protocol of <port mapping>": {
      "key": "protocol of <port mapping>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "protocol",
      "pluralPhrase": "protocols",
      "directObjectType": "port mapping"
    },
    "options of <port mapping>": {
      "key": "options of <port mapping>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "options",
      "pluralPhrase": "optionss",
      "directObjectType": "port mapping"
    },
    "name of <port mapping>": {
      "key": "name of <port mapping>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "port mapping"
    },
    "internal port of <port mapping>": {
      "key": "internal port of <port mapping>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "internal port",
      "pluralPhrase": "internal ports",
      "directObjectType": "port mapping"
    },
    "external port of <port mapping>": {
      "key": "external port of <port mapping>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "external port",
      "pluralPhrase": "external ports",
      "directObjectType": "port mapping"
    },
    "enabled of <port mapping>": {
      "key": "enabled of <port mapping>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "port mapping"
    },
    "vendor id of <palm device>": {
      "key": "vendor id of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "vendor id",
      "pluralPhrase": "vendor ids",
      "directObjectType": "palm device"
    },
    "used memory of <palm device>": {
      "key": "used memory of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "used memory",
      "pluralPhrase": "used memories",
      "directObjectType": "palm device"
    },
    "update folder of <palm device>": {
      "key": "update folder of <palm device>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "update folder",
      "pluralPhrase": "update folders",
      "directObjectType": "palm device"
    },
    "total memory of <palm device>": {
      "key": "total memory of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total memory",
      "pluralPhrase": "total memories",
      "directObjectType": "palm device"
    },
    "sleep timeout of <palm device>": {
      "key": "sleep timeout of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "sleep timeout",
      "pluralPhrase": "sleep timeouts",
      "directObjectType": "palm device"
    },
    "serial number of <palm device>": {
      "key": "serial number of <palm device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "serial number",
      "pluralPhrase": "serial numbers",
      "directObjectType": "palm device"
    },
    "processor type of <palm device>": {
      "key": "processor type of <palm device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "processor type",
      "pluralPhrase": "processor types",
      "directObjectType": "palm device"
    },
    "os version of <palm device>": {
      "key": "os version of <palm device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "os version",
      "pluralPhrase": "os versions",
      "directObjectType": "palm device"
    },
    "oemhalid of <palm device>": {
      "key": "oemhalid of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oemhalid",
      "pluralPhrase": "oemhalids",
      "directObjectType": "palm device"
    },
    "oemdeviceid of <palm device>": {
      "key": "oemdeviceid of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oemdeviceid",
      "pluralPhrase": "oemdeviceids",
      "directObjectType": "palm device"
    },
    "oemcompanyid of <palm device>": {
      "key": "oemcompanyid of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oemcompanyid",
      "pluralPhrase": "oemcompanyids",
      "directObjectType": "palm device"
    },
    "notify version of <palm device>": {
      "key": "notify version of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "notify version",
      "pluralPhrase": "notify versions",
      "directObjectType": "palm device"
    },
    "name of <palm device>": {
      "key": "name of <palm device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "palm device"
    },
    "install folder of <palm device>": {
      "key": "install folder of <palm device>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "install folder",
      "pluralPhrase": "install folders",
      "directObjectType": "palm device"
    },
    "inspector set of <palm device>": {
      "key": "inspector set of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "inspector set",
      "pluralPhrase": "inspector sets",
      "directObjectType": "palm device"
    },
    "hotsync time of <palm device>": {
      "key": "hotsync time of <palm device>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "hotsync time",
      "pluralPhrase": "hotsync times",
      "directObjectType": "palm device"
    },
    "handspring version of <palm device>": {
      "key": "handspring version of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "handspring version",
      "pluralPhrase": "handspring versions",
      "directObjectType": "palm device"
    },
    "free memory of <palm device>": {
      "key": "free memory of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free memory",
      "pluralPhrase": "free memories",
      "directObjectType": "palm device"
    },
    "folder of <palm device>": {
      "key": "folder of <palm device>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "folder",
      "pluralPhrase": "folders",
      "directObjectType": "palm device"
    },
    "encryption feature of <palm device>": {
      "key": "encryption feature of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "encryption feature",
      "pluralPhrase": "encryption features",
      "directObjectType": "palm device"
    },
    "display depth of <palm device>": {
      "key": "display depth of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "display depth",
      "pluralPhrase": "display depths",
      "directObjectType": "palm device"
    },
    "directory of <palm device>": {
      "key": "directory of <palm device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "directory",
      "pluralPhrase": "directories",
      "directObjectType": "palm device"
    },
    "device hotsync time of <palm device>": {
      "key": "device hotsync time of <palm device>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "device hotsync time",
      "pluralPhrase": "device hotsync times",
      "directObjectType": "palm device"
    },
    "battery voltage of <palm device>": {
      "key": "battery voltage of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "battery voltage",
      "pluralPhrase": "battery voltages",
      "directObjectType": "palm device"
    },
    "battery type of <palm device>": {
      "key": "battery type of <palm device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "battery type",
      "pluralPhrase": "battery types",
      "directObjectType": "palm device"
    },
    "battery percentage of <palm device>": {
      "key": "battery percentage of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "battery percentage",
      "pluralPhrase": "battery percentages",
      "directObjectType": "palm device"
    },
    "backup folder of <palm device>": {
      "key": "backup folder of <palm device>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "backup folder",
      "pluralPhrase": "backup folders",
      "directObjectType": "palm device"
    },
    "backlight feature of <palm device>": {
      "key": "backlight feature of <palm device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "backlight feature",
      "pluralPhrase": "backlight features",
      "directObjectType": "palm device"
    },
    "application of <palm device>": {
      "key": "application of <palm device>",
      "type": "property",
      "resultType": "palm application",
      "singularPhrase": "application",
      "pluralPhrase": "applications",
      "directObjectType": "palm device"
    },
    "application <string> of <palm device>": {
      "key": "application <string> of <palm device>",
      "type": "property",
      "resultType": "palm application",
      "singularPhrase": "application",
      "pluralPhrase": "applications",
      "indexType": "string",
      "directObjectType": "palm device"
    },
    "<palm device> as string": {
      "key": "<palm device> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "palm device",
      "phrase": "string"
    },
    "version string of <palm application>": {
      "key": "version string of <palm application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version string",
      "pluralPhrase": "version strings",
      "directObjectType": "palm application"
    },
    "version of <palm application>": {
      "key": "version of <palm application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "palm application"
    },
    "stream of <palm application>": {
      "key": "stream of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "stream",
      "pluralPhrase": "streams",
      "directObjectType": "palm application"
    },
    "size of <palm application>": {
      "key": "size of <palm application>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "palm application"
    },
    "resource of <palm application>": {
      "key": "resource of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "resource",
      "pluralPhrase": "resources",
      "directObjectType": "palm application"
    },
    "resetafterinstall of <palm application>": {
      "key": "resetafterinstall of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "resetafterinstall",
      "pluralPhrase": "resetafterinstalls",
      "directObjectType": "palm application"
    },
    "readonly of <palm application>": {
      "key": "readonly of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "readonly",
      "pluralPhrase": "readonlies",
      "directObjectType": "palm application"
    },
    "open of <palm application>": {
      "key": "open of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "open",
      "pluralPhrase": "opens",
      "directObjectType": "palm application"
    },
    "oktoinstallnewer of <palm application>": {
      "key": "oktoinstallnewer of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "oktoinstallnewer",
      "pluralPhrase": "oktoinstallnewers",
      "directObjectType": "palm application"
    },
    "name of <palm application>": {
      "key": "name of <palm application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "palm application"
    },
    "launcher name of <palm application>": {
      "key": "launcher name of <palm application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "launcher name",
      "pluralPhrase": "launcher names",
      "directObjectType": "palm application"
    },
    "launchable of <palm application>": {
      "key": "launchable of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "launchable",
      "pluralPhrase": "launchables",
      "directObjectType": "palm application"
    },
    "hidden of <palm application>": {
      "key": "hidden of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "hidden",
      "pluralPhrase": "hiddens",
      "directObjectType": "palm application"
    },
    "database name of <palm application>": {
      "key": "database name of <palm application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "database name",
      "pluralPhrase": "database names",
      "directObjectType": "palm application"
    },
    "creator id of <palm application>": {
      "key": "creator id of <palm application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "creator id",
      "pluralPhrase": "creator ids",
      "directObjectType": "palm application"
    },
    "creation date of <palm application>": {
      "key": "creation date of <palm application>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "creation date",
      "pluralPhrase": "creation dates",
      "directObjectType": "palm application"
    },
    "copy prevention of <palm application>": {
      "key": "copy prevention of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "copy prevention",
      "pluralPhrase": "copy preventions",
      "directObjectType": "palm application"
    },
    "backup of <palm application>": {
      "key": "backup of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "backup",
      "pluralPhrase": "backups",
      "directObjectType": "palm application"
    },
    "appinfodirty of <palm application>": {
      "key": "appinfodirty of <palm application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "appinfodirty",
      "pluralPhrase": "appinfodirties",
      "directObjectType": "palm application"
    },
    "<palm application> as string": {
      "key": "<palm application> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "palm application",
      "phrase": "string"
    },
    "<operating system product type> = <operating system product type>": {
      "key": "<operating system product type> = <operating system product type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "operating system product type",
      "op": "=",
      "rightType": "operating system product type"
    },
    "x64 of <operating system>": {
      "key": "x64 of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "x64",
      "pluralPhrase": "x64s",
      "directObjectType": "operating system"
    },
    "suite mask of <operating system>": {
      "key": "suite mask of <operating system>",
      "type": "property",
      "resultType": "operating system suite mask",
      "singularPhrase": "suite mask",
      "pluralPhrase": "suite masks",
      "directObjectType": "operating system"
    },
    "service pack minor version of <operating system>": {
      "key": "service pack minor version of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "service pack minor version",
      "pluralPhrase": "service pack minor versions",
      "directObjectType": "operating system"
    },
    "service pack major version of <operating system>": {
      "key": "service pack major version of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "service pack major version",
      "pluralPhrase": "service pack major versions",
      "directObjectType": "operating system"
    },
    "product type of <operating system>": {
      "key": "product type of <operating system>",
      "type": "property",
      "resultType": "operating system product type",
      "singularPhrase": "product type",
      "pluralPhrase": "product types",
      "directObjectType": "operating system"
    },
    "product info string of <operating system>": {
      "key": "product info string of <operating system>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "product info string",
      "pluralPhrase": "product info strings",
      "directObjectType": "operating system"
    },
    "product info numeric of <operating system>": {
      "key": "product info numeric of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "product info numeric",
      "pluralPhrase": "product info numerics",
      "directObjectType": "operating system"
    },
    "platform id of <operating system>": {
      "key": "platform id of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "platform id",
      "pluralPhrase": "platform ids",
      "directObjectType": "operating system"
    },
    "performance counter of <operating system>": {
      "key": "performance counter of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "performance counter",
      "pluralPhrase": "performance counters",
      "directObjectType": "operating system"
    },
    "performance counter frequency of <operating system>": {
      "key": "performance counter frequency of <operating system>",
      "type": "property",
      "resultType": "hertz",
      "singularPhrase": "performance counter frequency",
      "pluralPhrase": "performance counter frequencies",
      "directObjectType": "operating system"
    },
    "minor version of <operating system>": {
      "key": "minor version of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "minor version",
      "pluralPhrase": "minor versions",
      "directObjectType": "operating system"
    },
    "metric <integer> of <operating system>": {
      "key": "metric <integer> of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "metric",
      "pluralPhrase": "metrics",
      "indexType": "integer",
      "directObjectType": "operating system"
    },
    "major version of <operating system>": {
      "key": "major version of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "major version",
      "pluralPhrase": "major versions",
      "directObjectType": "operating system"
    },
    "ia64 of <operating system>": {
      "key": "ia64 of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "ia64",
      "pluralPhrase": "ia64s",
      "directObjectType": "operating system"
    },
    "csd version of <operating system>": {
      "key": "csd version of <operating system>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "csd version",
      "pluralPhrase": "csd versions",
      "directObjectType": "operating system"
    },
    "build number low of <operating system>": {
      "key": "build number low of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "build number low",
      "pluralPhrase": "build number lows",
      "directObjectType": "operating system"
    },
    "build number high of <operating system>": {
      "key": "build number high of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "build number high",
      "pluralPhrase": "build number highs",
      "directObjectType": "operating system"
    },
    "write permission of <network share>": {
      "key": "write permission of <network share>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "write permission",
      "pluralPhrase": "write permissions",
      "directObjectType": "network share"
    },
    "use limit of <network share>": {
      "key": "use limit of <network share>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "use limit",
      "pluralPhrase": "use limits",
      "directObjectType": "network share"
    },
    "use count of <network share>": {
      "key": "use count of <network share>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "use count",
      "pluralPhrase": "use counts",
      "directObjectType": "network share"
    },
    "type of <network share>": {
      "key": "type of <network share>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "network share"
    },
    "security descriptor of <network share>": {
      "key": "security descriptor of <network share>",
      "type": "property",
      "resultType": "security descriptor",
      "singularPhrase": "security descriptor",
      "pluralPhrase": "security descriptors",
      "directObjectType": "network share"
    },
    "read permission of <network share>": {
      "key": "read permission of <network share>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "read permission",
      "pluralPhrase": "read permissions",
      "directObjectType": "network share"
    },
    "permission permission of <network share>": {
      "key": "permission permission of <network share>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "permission permission",
      "pluralPhrase": "permission permissions",
      "directObjectType": "network share"
    },
    "path of <network share>": {
      "key": "path of <network share>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "network share"
    },
    "password of <network share>": {
      "key": "password of <network share>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "password",
      "pluralPhrase": "passwords",
      "directObjectType": "network share"
    },
    "name of <network share>": {
      "key": "name of <network share>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "network share"
    },
    "execute permission of <network share>": {
      "key": "execute permission of <network share>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "execute permission",
      "pluralPhrase": "execute permissions",
      "directObjectType": "network share"
    },
    "delete permission of <network share>": {
      "key": "delete permission of <network share>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "delete permission",
      "pluralPhrase": "delete permissions",
      "directObjectType": "network share"
    },
    "create permission of <network share>": {
      "key": "create permission of <network share>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "create permission",
      "pluralPhrase": "create permissions",
      "directObjectType": "network share"
    },
    "comment of <network share>": {
      "key": "comment of <network share>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "comment",
      "pluralPhrase": "comments",
      "directObjectType": "network share"
    },
    "attribute permission of <network share>": {
      "key": "attribute permission of <network share>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "attribute permission",
      "pluralPhrase": "attribute permissions",
      "directObjectType": "network share"
    },
    "subnet mask of <network address list>": {
      "key": "subnet mask of <network address list>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "subnet mask",
      "pluralPhrase": "subnet masks",
      "directObjectType": "network address list"
    },
    "subnet address of <network address list>": {
      "key": "subnet address of <network address list>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "subnet address",
      "pluralPhrase": "subnet addresses",
      "directObjectType": "network address list"
    },
    "cidr string of <network address list>": {
      "key": "cidr string of <network address list>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cidr string",
      "pluralPhrase": "cidr strings",
      "directObjectType": "network address list"
    },
    "cidr address of <network address list>": {
      "key": "cidr address of <network address list>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cidr address",
      "pluralPhrase": "cidr addresses",
      "directObjectType": "network address list"
    },
    "address of <network address list>": {
      "key": "address of <network address list>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "address",
      "pluralPhrase": "addresses",
      "directObjectType": "network address list"
    },
    "wins enabled of <network adapter>": {
      "key": "wins enabled of <network adapter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "wins enabled",
      "pluralPhrase": "wins enableds",
      "directObjectType": "network adapter"
    },
    "wakeonlan enabled of <network adapter>": {
      "key": "wakeonlan enabled of <network adapter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "wakeonlan enabled",
      "pluralPhrase": "wakeonlan enableds",
      "directObjectType": "network adapter"
    },
    "type of <network adapter>": {
      "key": "type of <network adapter>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "network adapter"
    },
    "tunnel of <network adapter>": {
      "key": "tunnel of <network adapter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "tunnel",
      "pluralPhrase": "tunnels",
      "directObjectType": "network adapter"
    },
    "status of <network adapter>": {
      "key": "status of <network adapter>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "status",
      "pluralPhrase": "statuses",
      "directObjectType": "network adapter"
    },
    "secondary wins server of <network adapter>": {
      "key": "secondary wins server of <network adapter>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "secondary wins server",
      "pluralPhrase": "secondary wins servers",
      "directObjectType": "network adapter"
    },
    "primary wins server of <network adapter>": {
      "key": "primary wins server of <network adapter>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "primary wins server",
      "pluralPhrase": "primary wins servers",
      "directObjectType": "network adapter"
    },
    "maximum transmission unit of <network adapter>": {
      "key": "maximum transmission unit of <network adapter>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum transmission unit",
      "pluralPhrase": "maximum transmission units",
      "directObjectType": "network adapter"
    },
    "link speed of <network adapter>": {
      "key": "link speed of <network adapter>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "link speed",
      "pluralPhrase": "link speeds",
      "directObjectType": "network adapter"
    },
    "lease obtained of <network adapter>": {
      "key": "lease obtained of <network adapter>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "lease obtained",
      "pluralPhrase": "leases obtained",
      "directObjectType": "network adapter"
    },
    "lease expires of <network adapter>": {
      "key": "lease expires of <network adapter>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "lease expires",
      "pluralPhrase": "leases expire",
      "directObjectType": "network adapter"
    },
    "ipv6 dns server of <network adapter>": {
      "key": "ipv6 dns server of <network adapter>",
      "type": "property",
      "resultType": "ipv6 address",
      "singularPhrase": "ipv6 dns server",
      "pluralPhrase": "ipv6 dns servers",
      "directObjectType": "network adapter"
    },
    "ipv6 address of <network adapter>": {
      "key": "ipv6 address of <network adapter>",
      "type": "property",
      "resultType": "ipv6 address",
      "singularPhrase": "ipv6 address",
      "pluralPhrase": "ipv6 addresses",
      "directObjectType": "network adapter"
    },
    "ipv4or6 dns server of <network adapter>": {
      "key": "ipv4or6 dns server of <network adapter>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "ipv4or6 dns server",
      "pluralPhrase": "ipv4or6 dns servers",
      "directObjectType": "network adapter"
    },
    "internet connection firewall of <network adapter>": {
      "key": "internet connection firewall of <network adapter>",
      "type": "property",
      "resultType": "internet connection firewall",
      "singularPhrase": "internet connection firewall",
      "pluralPhrase": "internet connection firewalls",
      "directObjectType": "network adapter"
    },
    "gateway of <network adapter>": {
      "key": "gateway of <network adapter>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "gateway",
      "pluralPhrase": "gateways",
      "directObjectType": "network adapter"
    },
    "gateway list of <network adapter>": {
      "key": "gateway list of <network adapter>",
      "type": "property",
      "resultType": "network address list",
      "singularPhrase": "gateway list",
      "pluralPhrase": "gateway lists",
      "directObjectType": "network adapter"
    },
    "dns suffix of <network adapter>": {
      "key": "dns suffix of <network adapter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "dns suffix",
      "pluralPhrase": "dns suffixes",
      "directObjectType": "network adapter"
    },
    "dns server of <network adapter>": {
      "key": "dns server of <network adapter>",
      "type": "property",
      "resultType": "network address list",
      "singularPhrase": "dns server",
      "pluralPhrase": "dns servers",
      "directObjectType": "network adapter"
    },
    "dhcp server of <network adapter>": {
      "key": "dhcp server of <network adapter>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "dhcp server",
      "pluralPhrase": "dhcp servers",
      "directObjectType": "network adapter"
    },
    "dhcp enabled of <network adapter>": {
      "key": "dhcp enabled of <network adapter>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "dhcp enabled",
      "pluralPhrase": "dhcp enableds",
      "directObjectType": "network adapter"
    },
    "description of <network adapter>": {
      "key": "description of <network adapter>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "network adapter"
    },
    "address list of <network adapter>": {
      "key": "address list of <network adapter>",
      "type": "property",
      "resultType": "network address list",
      "singularPhrase": "address list",
      "pluralPhrase": "address lists",
      "directObjectType": "network adapter"
    },
    "winsock2 supported of <network>": {
      "key": "winsock2 supported of <network>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "winsock2 supported",
      "pluralPhrase": "winsock2 supporteds",
      "directObjectType": "network"
    },
    "dns server of <network>": {
      "key": "dns server of <network>",
      "type": "property",
      "resultType": "network address list",
      "singularPhrase": "dns server",
      "pluralPhrase": "dns servers",
      "directObjectType": "network"
    },
    "connection of <network>": {
      "key": "connection of <network>",
      "type": "property",
      "resultType": "connection",
      "singularPhrase": "connection",
      "pluralPhrase": "connections",
      "directObjectType": "network"
    },
    "run on third week in month of <monthlydow task trigger>": {
      "key": "run on third week in month of <monthlydow task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "run on third week in month",
      "pluralPhrase": "run on third week in months",
      "directObjectType": "monthlydow task trigger"
    },
    "run on second week in month of <monthlydow task trigger>": {
      "key": "run on second week in month of <monthlydow task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "run on second week in month",
      "pluralPhrase": "run on second week in months",
      "directObjectType": "monthlydow task trigger"
    },
    "run on last week in month of <monthlydow task trigger>": {
      "key": "run on last week in month of <monthlydow task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "run on last week in month",
      "pluralPhrase": "run on last week in months",
      "directObjectType": "monthlydow task trigger"
    },
    "run on fourth week in month of <monthlydow task trigger>": {
      "key": "run on fourth week in month of <monthlydow task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "run on fourth week in month",
      "pluralPhrase": "run on fourth week in months",
      "directObjectType": "monthlydow task trigger"
    },
    "run on first week in month of <monthlydow task trigger>": {
      "key": "run on first week in month of <monthlydow task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "run on first week in month",
      "pluralPhrase": "run on first week in months",
      "directObjectType": "monthlydow task trigger"
    },
    "run on fifth week in month of <monthlydow task trigger>": {
      "key": "run on fifth week in month of <monthlydow task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "run on fifth week in month",
      "pluralPhrase": "run on fifth week in months",
      "directObjectType": "monthlydow task trigger"
    },
    "random delay of <monthlydow task trigger>": {
      "key": "random delay of <monthlydow task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "random delay",
      "pluralPhrase": "random delays",
      "directObjectType": "monthlydow task trigger"
    },
    "months run of <monthlydow task trigger>": {
      "key": "months run of <monthlydow task trigger>",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "months run",
      "pluralPhrase": "months runs",
      "directObjectType": "monthlydow task trigger"
    },
    "days run of <monthlydow task trigger>": {
      "key": "days run of <monthlydow task trigger>",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "days run",
      "pluralPhrase": "days runs",
      "directObjectType": "monthlydow task trigger"
    },
    "run on last day in month of <monthly task trigger>": {
      "key": "run on last day in month of <monthly task trigger>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "run on last day in month",
      "pluralPhrase": "run on last day in months",
      "directObjectType": "monthly task trigger"
    },
    "random delay of <monthly task trigger>": {
      "key": "random delay of <monthly task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "random delay",
      "pluralPhrase": "random delays",
      "directObjectType": "monthly task trigger"
    },
    "months run of <monthly task trigger>": {
      "key": "months run of <monthly task trigger>",
      "type": "property",
      "resultType": "month",
      "singularPhrase": "months run",
      "pluralPhrase": "months runs",
      "directObjectType": "monthly task trigger"
    },
    "days run of <monthly task trigger>": {
      "key": "days run of <monthly task trigger>",
      "type": "property",
      "resultType": "day of month",
      "singularPhrase": "days run",
      "pluralPhrase": "days runs",
      "directObjectType": "monthly task trigger"
    },
    "state of <monitor power interval>": {
      "key": "state of <monitor power interval>",
      "type": "property",
      "resultType": "power state",
      "singularPhrase": "state",
      "pluralPhrase": "states",
      "directObjectType": "monitor power interval"
    },
    "range of <monitor power interval>": {
      "key": "range of <monitor power interval>",
      "type": "property",
      "resultType": "time range",
      "singularPhrase": "range",
      "pluralPhrase": "ranges",
      "directObjectType": "monitor power interval"
    },
    "count of <monitor power interval>": {
      "key": "count of <monitor power interval>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "count",
      "pluralPhrase": "counts",
      "directObjectType": "monitor power interval"
    },
    "volatile attribute of <metabase value>": {
      "key": "volatile attribute of <metabase value>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "volatile attribute",
      "pluralPhrase": "volatile attributes",
      "directObjectType": "metabase value"
    },
    "user type of <metabase value>": {
      "key": "user type of <metabase value>",
      "type": "property",
      "resultType": "metabase user type",
      "singularPhrase": "user type",
      "pluralPhrase": "user types",
      "directObjectType": "metabase value"
    },
    "type of <metabase value>": {
      "key": "type of <metabase value>",
      "type": "property",
      "resultType": "metabase type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "metabase value"
    },
    "secure attribute of <metabase value>": {
      "key": "secure attribute of <metabase value>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "secure attribute",
      "pluralPhrase": "secure attributes",
      "directObjectType": "metabase value"
    },
    "reference attribute of <metabase value>": {
      "key": "reference attribute of <metabase value>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "reference attribute",
      "pluralPhrase": "reference attributes",
      "directObjectType": "metabase value"
    },
    "insert path attribute of <metabase value>": {
      "key": "insert path attribute of <metabase value>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "insert path attribute",
      "pluralPhrase": "insert path attributes",
      "directObjectType": "metabase value"
    },
    "inherit attribute of <metabase value>": {
      "key": "inherit attribute of <metabase value>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "inherit attribute",
      "pluralPhrase": "inherit attributes",
      "directObjectType": "metabase value"
    },
    "identifier of <metabase value>": {
      "key": "identifier of <metabase value>",
      "type": "property",
      "resultType": "metabase identifier",
      "singularPhrase": "identifier",
      "pluralPhrase": "identifiers",
      "directObjectType": "metabase value"
    },
    "<metabase value> as string": {
      "key": "<metabase value> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "metabase value",
      "phrase": "string"
    },
    "<metabase value> as integer": {
      "key": "<metabase value> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "metabase value",
      "phrase": "integer"
    },
    "<metabase user type> as string": {
      "key": "<metabase user type> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "metabase user type",
      "phrase": "string"
    },
    "<metabase user type> as integer": {
      "key": "<metabase user type> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "metabase user type",
      "phrase": "integer"
    },
    "<metabase user type> = <metabase user type>": {
      "key": "<metabase user type> = <metabase user type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "metabase user type",
      "op": "=",
      "rightType": "metabase user type"
    },
    "<metabase type> as string": {
      "key": "<metabase type> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "metabase type",
      "phrase": "string"
    },
    "<metabase type> as integer": {
      "key": "<metabase type> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "metabase type",
      "phrase": "integer"
    },
    "<metabase type> = <metabase type>": {
      "key": "<metabase type> = <metabase type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "metabase type",
      "op": "=",
      "rightType": "metabase type"
    },
    "value of <metabase key>": {
      "key": "value of <metabase key>",
      "type": "property",
      "resultType": "metabase value",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "metabase key"
    },
    "name of <metabase key>": {
      "key": "name of <metabase key>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "metabase key"
    },
    "key of <metabase key>": {
      "key": "key of <metabase key>",
      "type": "property",
      "resultType": "metabase key",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "directObjectType": "metabase key"
    },
    "key <string> of <metabase key>": {
      "key": "key <string> of <metabase key>",
      "type": "property",
      "resultType": "metabase key",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "indexType": "string",
      "directObjectType": "metabase key"
    },
    "<metabase identifier> as string": {
      "key": "<metabase identifier> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "metabase identifier",
      "phrase": "string"
    },
    "<metabase identifier> as integer": {
      "key": "<metabase identifier> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "metabase identifier",
      "phrase": "integer"
    },
    "<metabase identifier> = <metabase identifier>": {
      "key": "<metabase identifier> = <metabase identifier>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "metabase identifier",
      "op": "=",
      "rightType": "metabase identifier"
    },
    "key of <metabase>": {
      "key": "key of <metabase>",
      "type": "property",
      "resultType": "metabase key",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "directObjectType": "metabase"
    },
    "key <string> of <metabase>": {
      "key": "key <string> of <metabase>",
      "type": "property",
      "resultType": "metabase key",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "indexType": "string",
      "directObjectType": "metabase"
    },
    "<media type> = <media type>": {
      "key": "<media type> = <media type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "media type",
      "op": "=",
      "rightType": "media type"
    },
    "user id of <logon task trigger>": {
      "key": "user id of <logon task trigger>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "user id",
      "pluralPhrase": "user ids",
      "directObjectType": "logon task trigger"
    },
    "delay of <logon task trigger>": {
      "key": "delay of <logon task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "delay",
      "pluralPhrase": "delays",
      "directObjectType": "logon task trigger"
    },
    "sid of <logged on user>": {
      "key": "sid of <logged on user>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "sid",
      "pluralPhrase": "sids",
      "directObjectType": "logged on user"
    },
    "name of <logged on user>": {
      "key": "name of <logged on user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "logged on user"
    },
    "activity history of <logged on user>": {
      "key": "activity history of <logged on user>",
      "type": "property",
      "resultType": "activity history",
      "singularPhrase": "activity history",
      "pluralPhrase": "activity histories",
      "directObjectType": "logged on user"
    },
    "workstation trust account flag of <local user>": {
      "key": "workstation trust account flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "workstation trust account flag",
      "pluralPhrase": "workstation trust account flags",
      "directObjectType": "local user"
    },
    "user privilege of <local user>": {
      "key": "user privilege of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "user privilege",
      "pluralPhrase": "user privileges",
      "directObjectType": "local user"
    },
    "user id of <local user>": {
      "key": "user id of <local user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "user id",
      "pluralPhrase": "user ids",
      "directObjectType": "local user"
    },
    "user comment of <local user>": {
      "key": "user comment of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "user comment",
      "pluralPhrase": "user comments",
      "directObjectType": "local user"
    },
    "temporary duplicate account flag of <local user>": {
      "key": "temporary duplicate account flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "temporary duplicate account flag",
      "pluralPhrase": "temporary duplicate account flags",
      "directObjectType": "local user"
    },
    "server trust account flag of <local user>": {
      "key": "server trust account flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "server trust account flag",
      "pluralPhrase": "server trust account flags",
      "directObjectType": "local user"
    },
    "server operator flag of <local user>": {
      "key": "server operator flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "server operator flag",
      "pluralPhrase": "server operator flags",
      "directObjectType": "local user"
    },
    "script flag of <local user>": {
      "key": "script flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "script flag",
      "pluralPhrase": "script flags",
      "directObjectType": "local user"
    },
    "profile folder of <local user>": {
      "key": "profile folder of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "profile folder",
      "pluralPhrase": "profile folders",
      "directObjectType": "local user"
    },
    "print operator flag of <local user>": {
      "key": "print operator flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "print operator flag",
      "pluralPhrase": "print operator flags",
      "directObjectType": "local user"
    },
    "primary group id of <local user>": {
      "key": "primary group id of <local user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "primary group id",
      "pluralPhrase": "primary group ids",
      "directObjectType": "local user"
    },
    "password expired of <local user>": {
      "key": "password expired of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "password expired",
      "pluralPhrase": "passwords expired",
      "directObjectType": "local user"
    },
    "password expiration disabled flag of <local user>": {
      "key": "password expiration disabled flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "password expiration disabled flag",
      "pluralPhrase": "password expiration disabled flags",
      "directObjectType": "local user"
    },
    "password change disabled flag of <local user>": {
      "key": "password change disabled flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "password change disabled flag",
      "pluralPhrase": "password change disabled flags",
      "directObjectType": "local user"
    },
    "password age of <local user>": {
      "key": "password age of <local user>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "password age",
      "pluralPhrase": "password ages",
      "directObjectType": "local user"
    },
    "normal account flag of <local user>": {
      "key": "normal account flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "normal account flag",
      "pluralPhrase": "normal account flags",
      "directObjectType": "local user"
    },
    "no password required flag of <local user>": {
      "key": "no password required flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "no password required flag",
      "pluralPhrase": "no password required flags",
      "directObjectType": "local user"
    },
    "name of <local user>": {
      "key": "name of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "local user"
    },
    "maximum storage of <local user>": {
      "key": "maximum storage of <local user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum storage",
      "pluralPhrase": "maximum storages",
      "directObjectType": "local user"
    },
    "logon server of <local user>": {
      "key": "logon server of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "logon server",
      "pluralPhrase": "logon servers",
      "directObjectType": "local user"
    },
    "logon script of <local user>": {
      "key": "logon script of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "logon script",
      "pluralPhrase": "logon scripts",
      "directObjectType": "local user"
    },
    "logon count of <local user>": {
      "key": "logon count of <local user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "logon count",
      "pluralPhrase": "logon counts",
      "directObjectType": "local user"
    },
    "locked out flag of <local user>": {
      "key": "locked out flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "locked out flag",
      "pluralPhrase": "locked out flags",
      "directObjectType": "local user"
    },
    "last logon of <local user>": {
      "key": "last logon of <local user>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last logon",
      "pluralPhrase": "last logons",
      "directObjectType": "local user"
    },
    "last logoff of <local user>": {
      "key": "last logoff of <local user>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last logoff",
      "pluralPhrase": "last logoffs",
      "directObjectType": "local user"
    },
    "interdomain trust account flag of <local user>": {
      "key": "interdomain trust account flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "interdomain trust account flag",
      "pluralPhrase": "interdomain trust account flags",
      "directObjectType": "local user"
    },
    "home directory required flag of <local user>": {
      "key": "home directory required flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "home directory required flag",
      "pluralPhrase": "home directory required flags",
      "directObjectType": "local user"
    },
    "home directory of <local user>": {
      "key": "home directory of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "home directory",
      "pluralPhrase": "home directories",
      "directObjectType": "local user"
    },
    "home directory drive of <local user>": {
      "key": "home directory drive of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "home directory drive",
      "pluralPhrase": "home directory drives",
      "directObjectType": "local user"
    },
    "guest privilege of <local user>": {
      "key": "guest privilege of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "guest privilege",
      "pluralPhrase": "guest privileges",
      "directObjectType": "local user"
    },
    "full name of <local user>": {
      "key": "full name of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "full name",
      "pluralPhrase": "full names",
      "directObjectType": "local user"
    },
    "country code of <local user>": {
      "key": "country code of <local user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "country code",
      "pluralPhrase": "country codes",
      "directObjectType": "local user"
    },
    "communications operator flag of <local user>": {
      "key": "communications operator flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "communications operator flag",
      "pluralPhrase": "communications operator flags",
      "directObjectType": "local user"
    },
    "comment of <local user>": {
      "key": "comment of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "comment",
      "pluralPhrase": "comments",
      "directObjectType": "local user"
    },
    "code page of <local user>": {
      "key": "code page of <local user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "code page",
      "pluralPhrase": "code pages",
      "directObjectType": "local user"
    },
    "bad password count of <local user>": {
      "key": "bad password count of <local user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bad password count",
      "pluralPhrase": "bad password counts",
      "directObjectType": "local user"
    },
    "application parameter string of <local user>": {
      "key": "application parameter string of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "application parameter string",
      "pluralPhrase": "application parameter strings",
      "directObjectType": "local user"
    },
    "allowed workstations string of <local user>": {
      "key": "allowed workstations string of <local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "allowed workstations string",
      "pluralPhrase": "allowed workstations strings",
      "directObjectType": "local user"
    },
    "admin privilege of <local user>": {
      "key": "admin privilege of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "admin privilege",
      "pluralPhrase": "admin privileges",
      "directObjectType": "local user"
    },
    "accounts operator flag of <local user>": {
      "key": "accounts operator flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "accounts operator flag",
      "pluralPhrase": "accounts operator flags",
      "directObjectType": "local user"
    },
    "account expiration of <local user>": {
      "key": "account expiration of <local user>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "account expiration",
      "pluralPhrase": "account expirations",
      "directObjectType": "local user"
    },
    "account disabled flag of <local user>": {
      "key": "account disabled flag of <local user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "account disabled flag",
      "pluralPhrase": "account disabled flags",
      "directObjectType": "local user"
    },
    "running of <local mssql database>": {
      "key": "running of <local mssql database>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "running",
      "pluralPhrase": "runnings",
      "directObjectType": "local mssql database"
    },
    "login mode of <local mssql database>": {
      "key": "login mode of <local mssql database>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "login mode",
      "pluralPhrase": "login modes",
      "directObjectType": "local mssql database"
    },
    "instance name of <local mssql database>": {
      "key": "instance name of <local mssql database>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "instance name",
      "pluralPhrase": "instance names",
      "directObjectType": "local mssql database"
    },
    "has blank sa password of <local mssql database>": {
      "key": "has blank sa password of <local mssql database>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "has blank sa password",
      "pluralPhrase": "has blank sa passwords",
      "directObjectType": "local mssql database"
    },
    "audit level of <local mssql database>": {
      "key": "audit level of <local mssql database>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "audit level",
      "pluralPhrase": "audit levels",
      "directObjectType": "local mssql database"
    },
    "<local group member> as string": {
      "key": "<local group member> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "local group member",
      "phrase": "string"
    },
    "name of <local group>": {
      "key": "name of <local group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "local group"
    },
    "member of <local group>": {
      "key": "member of <local group>",
      "type": "property",
      "resultType": "local group member",
      "singularPhrase": "member",
      "pluralPhrase": "members",
      "directObjectType": "local group"
    },
    "comment of <local group>": {
      "key": "comment of <local group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "comment",
      "pluralPhrase": "comments",
      "directObjectType": "local group"
    },
    "<internet protocol> = <internet protocol>": {
      "key": "<internet protocol> = <internet protocol>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "internet protocol",
      "op": "=",
      "rightType": "internet protocol"
    },
    "port mapping of <internet connection firewall>": {
      "key": "port mapping of <internet connection firewall>",
      "type": "property",
      "resultType": "port mapping",
      "singularPhrase": "port mapping",
      "pluralPhrase": "port mappings",
      "directObjectType": "internet connection firewall"
    },
    "enabled of <internet connection firewall>": {
      "key": "enabled of <internet connection firewall>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "internet connection firewall"
    },
    "<registry key value> = <integer>": {
      "key": "<registry key value> = <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value",
      "op": "=",
      "rightType": "integer"
    },
    "<registry key value> <= <integer>": {
      "key": "<registry key value> <= <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value",
      "op": "<=",
      "rightType": "integer"
    },
    "<registry key value> < <integer>": {
      "key": "<registry key value> < <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value",
      "op": "<",
      "rightType": "integer"
    },
    "<registry key value type> = <integer>": {
      "key": "<registry key value type> = <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value type",
      "op": "=",
      "rightType": "integer"
    },
    "<registry key value type> <= <integer>": {
      "key": "<registry key value type> <= <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value type",
      "op": "<=",
      "rightType": "integer"
    },
    "<registry key value type> < <integer>": {
      "key": "<registry key value type> < <integer>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "registry key value type",
      "op": "<",
      "rightType": "integer"
    },
    "<integer> = <registry key value>": {
      "key": "<integer> = <registry key value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "=",
      "rightType": "registry key value"
    },
    "<integer> = <registry key value type>": {
      "key": "<integer> = <registry key value type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "=",
      "rightType": "registry key value type"
    },
    "<integer> <= <registry key value>": {
      "key": "<integer> <= <registry key value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "<=",
      "rightType": "registry key value"
    },
    "<integer> <= <registry key value type>": {
      "key": "<integer> <= <registry key value type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "<=",
      "rightType": "registry key value type"
    },
    "<integer> < <registry key value>": {
      "key": "<integer> < <registry key value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "<",
      "rightType": "registry key value"
    },
    "<integer> < <registry key value type>": {
      "key": "<integer> < <registry key value type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "integer",
      "op": "<",
      "rightType": "registry key value type"
    },
    "palm device of <hotsync user>": {
      "key": "palm device of <hotsync user>",
      "type": "property",
      "resultType": "palm device",
      "singularPhrase": "palm device",
      "pluralPhrase": "palm devices",
      "directObjectType": "hotsync user"
    },
    "name of <hotsync user>": {
      "key": "name of <hotsync user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "hotsync user"
    },
    "folder of <hotsync user>": {
      "key": "folder of <hotsync user>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "folder",
      "pluralPhrase": "folders",
      "directObjectType": "hotsync user"
    },
    "user of <hotsync manager>": {
      "key": "user of <hotsync manager>",
      "type": "property",
      "resultType": "hotsync user",
      "singularPhrase": "user",
      "pluralPhrase": "users",
      "directObjectType": "hotsync manager"
    },
    "user <string> of <hotsync manager>": {
      "key": "user <string> of <hotsync manager>",
      "type": "property",
      "resultType": "hotsync user",
      "singularPhrase": "user",
      "pluralPhrase": "users",
      "indexType": "string",
      "directObjectType": "hotsync manager"
    },
    "user <integer> of <hotsync manager>": {
      "key": "user <integer> of <hotsync manager>",
      "type": "property",
      "resultType": "hotsync user",
      "singularPhrase": "user",
      "pluralPhrase": "users",
      "indexType": "integer",
      "directObjectType": "hotsync manager"
    },
    "hotsync in progress of <hotsync manager>": {
      "key": "hotsync in progress of <hotsync manager>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "hotsync in progress",
      "pluralPhrase": "hotsyncs in progress",
      "directObjectType": "hotsync manager"
    },
    "security descriptor of <folder>": {
      "key": "security descriptor of <folder>",
      "type": "property",
      "resultType": "security descriptor",
      "singularPhrase": "security descriptor",
      "pluralPhrase": "security descriptors",
      "directObjectType": "folder"
    },
    "<firewall service type> = <firewall service type>": {
      "key": "<firewall service type> = <firewall service type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "firewall service type",
      "op": "=",
      "rightType": "firewall service type"
    },
    "service restricted <( string, string )> of <firewall service restriction>": {
      "key": "service restricted <( string, string )> of <firewall service restriction>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "service restricted",
      "pluralPhrase": "service restricteds",
      "indexType": "( string, string )",
      "directObjectType": "firewall service restriction"
    },
    "rule of <firewall service restriction>": {
      "key": "rule of <firewall service restriction>",
      "type": "property",
      "resultType": "firewall rule",
      "singularPhrase": "rule",
      "pluralPhrase": "rules",
      "directObjectType": "firewall service restriction"
    },
    "type of <firewall service>": {
      "key": "type of <firewall service>",
      "type": "property",
      "resultType": "firewall service type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "firewall service"
    },
    "scope of <firewall service>": {
      "key": "scope of <firewall service>",
      "type": "property",
      "resultType": "firewall scope",
      "singularPhrase": "scope",
      "pluralPhrase": "scopes",
      "directObjectType": "firewall service"
    },
    "remote addresses of <firewall service>": {
      "key": "remote addresses of <firewall service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "remote addresses",
      "pluralPhrase": "remote addresseses",
      "directObjectType": "firewall service"
    },
    "name of <firewall service>": {
      "key": "name of <firewall service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "firewall service"
    },
    "ip version of <firewall service>": {
      "key": "ip version of <firewall service>",
      "type": "property",
      "resultType": "ip version",
      "singularPhrase": "ip version",
      "pluralPhrase": "ip versions",
      "directObjectType": "firewall service"
    },
    "globally open port of <firewall service>": {
      "key": "globally open port of <firewall service>",
      "type": "property",
      "resultType": "firewall open port",
      "singularPhrase": "globally open port",
      "pluralPhrase": "globally open ports",
      "directObjectType": "firewall service"
    },
    "enabled of <firewall service>": {
      "key": "enabled of <firewall service>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "firewall service"
    },
    "customized of <firewall service>": {
      "key": "customized of <firewall service>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "customized",
      "pluralPhrase": "customizeds",
      "directObjectType": "firewall service"
    },
    "<firewall scope> = <firewall scope>": {
      "key": "<firewall scope> = <firewall scope>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "firewall scope",
      "op": "=",
      "rightType": "firewall scope"
    },
    "service name of <firewall rule>": {
      "key": "service name of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "service name",
      "pluralPhrase": "service names",
      "directObjectType": "firewall rule"
    },
    "remote ports string of <firewall rule>": {
      "key": "remote ports string of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "remote ports string",
      "pluralPhrase": "remote ports strings",
      "directObjectType": "firewall rule"
    },
    "remote addresses string of <firewall rule>": {
      "key": "remote addresses string of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "remote addresses string",
      "pluralPhrase": "remote addresses strings",
      "directObjectType": "firewall rule"
    },
    "protocol of <firewall rule>": {
      "key": "protocol of <firewall rule>",
      "type": "property",
      "resultType": "internet protocol",
      "singularPhrase": "protocol",
      "pluralPhrase": "protocols",
      "directObjectType": "firewall rule"
    },
    "profile <firewall profile type> of <firewall rule>": {
      "key": "profile <firewall profile type> of <firewall rule>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "profile",
      "pluralPhrase": "profiles",
      "indexType": "firewall profile type",
      "directObjectType": "firewall rule"
    },
    "outbound of <firewall rule>": {
      "key": "outbound of <firewall rule>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "outbound",
      "pluralPhrase": "outbounds",
      "directObjectType": "firewall rule"
    },
    "name of <firewall rule>": {
      "key": "name of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "firewall rule"
    },
    "local ports string of <firewall rule>": {
      "key": "local ports string of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "local ports string",
      "pluralPhrase": "local ports strings",
      "directObjectType": "firewall rule"
    },
    "local addresses string of <firewall rule>": {
      "key": "local addresses string of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "local addresses string",
      "pluralPhrase": "local addresses strings",
      "directObjectType": "firewall rule"
    },
    "interface types string of <firewall rule>": {
      "key": "interface types string of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "interface types string",
      "pluralPhrase": "interface types strings",
      "directObjectType": "firewall rule"
    },
    "interface of <firewall rule>": {
      "key": "interface of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "interface",
      "pluralPhrase": "interfaces",
      "directObjectType": "firewall rule"
    },
    "inbound of <firewall rule>": {
      "key": "inbound of <firewall rule>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "inbound",
      "pluralPhrase": "inbounds",
      "directObjectType": "firewall rule"
    },
    "icmp types_and_codes string of <firewall rule>": {
      "key": "icmp types_and_codes string of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "icmp types_and_codes string",
      "pluralPhrase": "icmp types_and_codes strings",
      "directObjectType": "firewall rule"
    },
    "grouping of <firewall rule>": {
      "key": "grouping of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "grouping",
      "pluralPhrase": "groupings",
      "directObjectType": "firewall rule"
    },
    "enabled of <firewall rule>": {
      "key": "enabled of <firewall rule>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "firewall rule"
    },
    "edge traversal allowed of <firewall rule>": {
      "key": "edge traversal allowed of <firewall rule>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "edge traversal allowed",
      "pluralPhrase": "edge traversal alloweds",
      "directObjectType": "firewall rule"
    },
    "description of <firewall rule>": {
      "key": "description of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "firewall rule"
    },
    "currently active of <firewall rule>": {
      "key": "currently active of <firewall rule>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "currently active",
      "pluralPhrase": "currently actives",
      "directObjectType": "firewall rule"
    },
    "application name of <firewall rule>": {
      "key": "application name of <firewall rule>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "application name",
      "pluralPhrase": "application names",
      "directObjectType": "firewall rule"
    },
    "action of <firewall rule>": {
      "key": "action of <firewall rule>",
      "type": "property",
      "resultType": "firewall action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "directObjectType": "firewall rule"
    },
    "<firewall profile type> = <firewall profile type>": {
      "key": "<firewall profile type> = <firewall profile type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "firewall profile type",
      "op": "=",
      "rightType": "firewall profile type"
    },
    "unicast responses to multicast broadcast disabled of <firewall profile>": {
      "key": "unicast responses to multicast broadcast disabled of <firewall profile>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unicast responses to multicast broadcast disabled",
      "pluralPhrase": "unicast responses to multicast broadcast disableds",
      "directObjectType": "firewall profile"
    },
    "type of <firewall profile>": {
      "key": "type of <firewall profile>",
      "type": "property",
      "resultType": "firewall profile type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "firewall profile"
    },
    "service of <firewall profile>": {
      "key": "service of <firewall profile>",
      "type": "property",
      "resultType": "firewall service",
      "singularPhrase": "service",
      "pluralPhrase": "services",
      "directObjectType": "firewall profile"
    },
    "rule group enabled <string> of <firewall profile>": {
      "key": "rule group enabled <string> of <firewall profile>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "rule group enabled",
      "pluralPhrase": "rule group enableds",
      "indexType": "string",
      "directObjectType": "firewall profile"
    },
    "remote admin settings of <firewall profile>": {
      "key": "remote admin settings of <firewall profile>",
      "type": "property",
      "resultType": "firewall remote admin settings",
      "singularPhrase": "remote admin settings",
      "pluralPhrase": "remote admin settingses",
      "directObjectType": "firewall profile"
    },
    "outbound connections allowed of <firewall profile>": {
      "key": "outbound connections allowed of <firewall profile>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "outbound connections allowed",
      "pluralPhrase": "outbound connections alloweds",
      "directObjectType": "firewall profile"
    },
    "notifications disabled of <firewall profile>": {
      "key": "notifications disabled of <firewall profile>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "notifications disabled",
      "pluralPhrase": "notifications disableds",
      "directObjectType": "firewall profile"
    },
    "inbound connections allowed of <firewall profile>": {
      "key": "inbound connections allowed of <firewall profile>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "inbound connections allowed",
      "pluralPhrase": "inbound connections alloweds",
      "directObjectType": "firewall profile"
    },
    "icmp settings of <firewall profile>": {
      "key": "icmp settings of <firewall profile>",
      "type": "property",
      "resultType": "firewall icmp settings",
      "singularPhrase": "icmp settings",
      "pluralPhrase": "icmp settingses",
      "directObjectType": "firewall profile"
    },
    "globally open port of <firewall profile>": {
      "key": "globally open port of <firewall profile>",
      "type": "property",
      "resultType": "firewall open port",
      "singularPhrase": "globally open port",
      "pluralPhrase": "globally open ports",
      "directObjectType": "firewall profile"
    },
    "firewall enabled of <firewall profile>": {
      "key": "firewall enabled of <firewall profile>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "firewall enabled",
      "pluralPhrase": "firewalls enabled",
      "directObjectType": "firewall profile"
    },
    "excluded interface of <firewall profile>": {
      "key": "excluded interface of <firewall profile>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "excluded interface",
      "pluralPhrase": "excluded interfaces",
      "directObjectType": "firewall profile"
    },
    "exceptions allowed of <firewall profile>": {
      "key": "exceptions allowed of <firewall profile>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "exceptions allowed",
      "pluralPhrase": "exceptions alloweds",
      "directObjectType": "firewall profile"
    },
    "authorized application of <firewall profile>": {
      "key": "authorized application of <firewall profile>",
      "type": "property",
      "resultType": "firewall authorized application",
      "singularPhrase": "authorized application",
      "pluralPhrase": "authorized applications",
      "directObjectType": "firewall profile"
    },
    "standard profile of <firewall policy>": {
      "key": "standard profile of <firewall policy>",
      "type": "property",
      "resultType": "firewall profile",
      "singularPhrase": "standard profile",
      "pluralPhrase": "standard profiles",
      "directObjectType": "firewall policy"
    },
    "public profile of <firewall policy>": {
      "key": "public profile of <firewall policy>",
      "type": "property",
      "resultType": "firewall profile",
      "singularPhrase": "public profile",
      "pluralPhrase": "public profiles",
      "directObjectType": "firewall policy"
    },
    "private profile of <firewall policy>": {
      "key": "private profile of <firewall policy>",
      "type": "property",
      "resultType": "firewall profile",
      "singularPhrase": "private profile",
      "pluralPhrase": "private profiles",
      "directObjectType": "firewall policy"
    },
    "domain profile of <firewall policy>": {
      "key": "domain profile of <firewall policy>",
      "type": "property",
      "resultType": "firewall profile",
      "singularPhrase": "domain profile",
      "pluralPhrase": "domain profiles",
      "directObjectType": "firewall policy"
    },
    "current profile of <firewall policy>": {
      "key": "current profile of <firewall policy>",
      "type": "property",
      "resultType": "firewall profile",
      "singularPhrase": "current profile",
      "pluralPhrase": "current profiles",
      "directObjectType": "firewall policy"
    },
    "scope of <firewall open port>": {
      "key": "scope of <firewall open port>",
      "type": "property",
      "resultType": "firewall scope",
      "singularPhrase": "scope",
      "pluralPhrase": "scopes",
      "directObjectType": "firewall open port"
    },
    "remote addresses of <firewall open port>": {
      "key": "remote addresses of <firewall open port>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "remote addresses",
      "pluralPhrase": "remote addresseses",
      "directObjectType": "firewall open port"
    },
    "protocol of <firewall open port>": {
      "key": "protocol of <firewall open port>",
      "type": "property",
      "resultType": "internet protocol",
      "singularPhrase": "protocol",
      "pluralPhrase": "protocols",
      "directObjectType": "firewall open port"
    },
    "port of <firewall open port>": {
      "key": "port of <firewall open port>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "port",
      "pluralPhrase": "ports",
      "directObjectType": "firewall open port"
    },
    "name of <firewall open port>": {
      "key": "name of <firewall open port>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "firewall open port"
    },
    "ip version of <firewall open port>": {
      "key": "ip version of <firewall open port>",
      "type": "property",
      "resultType": "ip version",
      "singularPhrase": "ip version",
      "pluralPhrase": "ip versions",
      "directObjectType": "firewall open port"
    },
    "enabled of <firewall open port>": {
      "key": "enabled of <firewall open port>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "firewall open port"
    },
    "built in of <firewall open port>": {
      "key": "built in of <firewall open port>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "built in",
      "pluralPhrase": "built ins",
      "directObjectType": "firewall open port"
    },
    "<firewall local policy modify state> = <firewall local policy modify state>": {
      "key": "<firewall local policy modify state> = <firewall local policy modify state>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "firewall local policy modify state",
      "op": "=",
      "rightType": "firewall local policy modify state"
    },
    "allow redirect of <firewall icmp settings>": {
      "key": "allow redirect of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow redirect",
      "pluralPhrase": "allow redirects",
      "directObjectType": "firewall icmp settings"
    },
    "allow outbound time exceeded of <firewall icmp settings>": {
      "key": "allow outbound time exceeded of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow outbound time exceeded",
      "pluralPhrase": "allow outbound time exceededs",
      "directObjectType": "firewall icmp settings"
    },
    "allow outbound source quench of <firewall icmp settings>": {
      "key": "allow outbound source quench of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow outbound source quench",
      "pluralPhrase": "allow outbound source quenches",
      "directObjectType": "firewall icmp settings"
    },
    "allow outbound parameter problem of <firewall icmp settings>": {
      "key": "allow outbound parameter problem of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow outbound parameter problem",
      "pluralPhrase": "allow outbound parameter problems",
      "directObjectType": "firewall icmp settings"
    },
    "allow outbound packet too big of <firewall icmp settings>": {
      "key": "allow outbound packet too big of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow outbound packet too big",
      "pluralPhrase": "allow outbound packet too bigs",
      "directObjectType": "firewall icmp settings"
    },
    "allow outbound destination unreachable of <firewall icmp settings>": {
      "key": "allow outbound destination unreachable of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow outbound destination unreachable",
      "pluralPhrase": "allow outbound destination unreachables",
      "directObjectType": "firewall icmp settings"
    },
    "allow inbound timestamp request of <firewall icmp settings>": {
      "key": "allow inbound timestamp request of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow inbound timestamp request",
      "pluralPhrase": "allow inbound timestamp requests",
      "directObjectType": "firewall icmp settings"
    },
    "allow inbound router request of <firewall icmp settings>": {
      "key": "allow inbound router request of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow inbound router request",
      "pluralPhrase": "allow inbound router requests",
      "directObjectType": "firewall icmp settings"
    },
    "allow inbound mask request of <firewall icmp settings>": {
      "key": "allow inbound mask request of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow inbound mask request",
      "pluralPhrase": "allow inbound mask requests",
      "directObjectType": "firewall icmp settings"
    },
    "allow inbound echo request of <firewall icmp settings>": {
      "key": "allow inbound echo request of <firewall icmp settings>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "allow inbound echo request",
      "pluralPhrase": "allow inbound echo requests",
      "directObjectType": "firewall icmp settings"
    },
    "scope of <firewall authorized application>": {
      "key": "scope of <firewall authorized application>",
      "type": "property",
      "resultType": "firewall scope",
      "singularPhrase": "scope",
      "pluralPhrase": "scopes",
      "directObjectType": "firewall authorized application"
    },
    "remote addresses of <firewall authorized application>": {
      "key": "remote addresses of <firewall authorized application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "remote addresses",
      "pluralPhrase": "remote addresseses",
      "directObjectType": "firewall authorized application"
    },
    "process image file name of <firewall authorized application>": {
      "key": "process image file name of <firewall authorized application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "process image file name",
      "pluralPhrase": "process image file names",
      "directObjectType": "firewall authorized application"
    },
    "name of <firewall authorized application>": {
      "key": "name of <firewall authorized application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "firewall authorized application"
    },
    "ip version of <firewall authorized application>": {
      "key": "ip version of <firewall authorized application>",
      "type": "property",
      "resultType": "ip version",
      "singularPhrase": "ip version",
      "pluralPhrase": "ip versions",
      "directObjectType": "firewall authorized application"
    },
    "enabled of <firewall authorized application>": {
      "key": "enabled of <firewall authorized application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enabled",
      "pluralPhrase": "enableds",
      "directObjectType": "firewall authorized application"
    },
    "<firewall action> = <firewall action>": {
      "key": "<firewall action> = <firewall action>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "firewall action",
      "op": "=",
      "rightType": "firewall action"
    },
    "service restriction of <firewall>": {
      "key": "service restriction of <firewall>",
      "type": "property",
      "resultType": "firewall service restriction",
      "singularPhrase": "service restriction",
      "pluralPhrase": "service restrictions",
      "directObjectType": "firewall"
    },
    "rule of <firewall>": {
      "key": "rule of <firewall>",
      "type": "property",
      "resultType": "firewall rule",
      "singularPhrase": "rule",
      "pluralPhrase": "rules",
      "directObjectType": "firewall"
    },
    "rule group currently enabled <string> of <firewall>": {
      "key": "rule group currently enabled <string> of <firewall>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "rule group currently enabled",
      "pluralPhrase": "rule group currently enableds",
      "indexType": "string",
      "directObjectType": "firewall"
    },
    "local policy of <firewall>": {
      "key": "local policy of <firewall>",
      "type": "property",
      "resultType": "firewall policy",
      "singularPhrase": "local policy",
      "pluralPhrase": "local policies",
      "directObjectType": "firewall"
    },
    "local policy modify state of <firewall>": {
      "key": "local policy modify state of <firewall>",
      "type": "property",
      "resultType": "firewall local policy modify state",
      "singularPhrase": "local policy modify state",
      "pluralPhrase": "local policy modify states",
      "directObjectType": "firewall"
    },
    "current profile type of <firewall>": {
      "key": "current profile type of <firewall>",
      "type": "property",
      "resultType": "firewall profile type",
      "singularPhrase": "current profile type",
      "pluralPhrase": "current profile types",
      "directObjectType": "firewall"
    },
    "temporary of <filesystem object>": {
      "key": "temporary of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "temporary",
      "pluralPhrase": "temporarys",
      "directObjectType": "filesystem object"
    },
    "system of <filesystem object>": {
      "key": "system of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "system",
      "pluralPhrase": "systems",
      "directObjectType": "filesystem object"
    },
    "readonly of <filesystem object>": {
      "key": "readonly of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "readonly",
      "pluralPhrase": "readonlys",
      "directObjectType": "filesystem object"
    },
    "offline of <filesystem object>": {
      "key": "offline of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "offline",
      "pluralPhrase": "offlines",
      "directObjectType": "filesystem object"
    },
    "normal of <filesystem object>": {
      "key": "normal of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "normal",
      "pluralPhrase": "normals",
      "directObjectType": "filesystem object"
    },
    "hidden of <filesystem object>": {
      "key": "hidden of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "hidden",
      "pluralPhrase": "hiddens",
      "directObjectType": "filesystem object"
    },
    "drive of <filesystem object>": {
      "key": "drive of <filesystem object>",
      "type": "property",
      "resultType": "drive",
      "singularPhrase": "drive",
      "pluralPhrase": "drives",
      "directObjectType": "filesystem object"
    },
    "compressed of <filesystem object>": {
      "key": "compressed of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "compressed",
      "pluralPhrase": "compresseds",
      "directObjectType": "filesystem object"
    },
    "archive of <filesystem object>": {
      "key": "archive of <filesystem object>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "archive",
      "pluralPhrase": "archives",
      "directObjectType": "filesystem object"
    },
    "value <string> of <file version block>": {
      "key": "value <string> of <file version block>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "indexType": "string",
      "directObjectType": "file version block"
    },
    "language of <file version block>": {
      "key": "language of <file version block>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "language",
      "pluralPhrase": "languages",
      "directObjectType": "file version block"
    },
    "id of <file version block>": {
      "key": "id of <file version block>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "file version block"
    },
    "codepage of <file version block>": {
      "key": "codepage of <file version block>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "codepage",
      "pluralPhrase": "codepages",
      "directObjectType": "file version block"
    },
    "start in pathname of <file shortcut>": {
      "key": "start in pathname of <file shortcut>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "start in pathname",
      "pluralPhrase": "start in pathnames",
      "directObjectType": "file shortcut"
    },
    "pathname of <file shortcut>": {
      "key": "pathname of <file shortcut>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "pathname",
      "pluralPhrase": "pathnames",
      "directObjectType": "file shortcut"
    },
    "icon pathname of <file shortcut>": {
      "key": "icon pathname of <file shortcut>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "icon pathname",
      "pluralPhrase": "icon pathnames",
      "directObjectType": "file shortcut"
    },
    "icon index of <file shortcut>": {
      "key": "icon index of <file shortcut>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "icon index",
      "pluralPhrase": "icon indexes",
      "directObjectType": "file shortcut"
    },
    "argument string of <file shortcut>": {
      "key": "argument string of <file shortcut>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "argument string",
      "pluralPhrase": "argument strings",
      "directObjectType": "file shortcut"
    },
    "xml document of <file>": {
      "key": "xml document of <file>",
      "type": "property",
      "resultType": "xml dom document",
      "singularPhrase": "xml document",
      "pluralPhrase": "xml documents",
      "directObjectType": "file"
    },
    "version of <file>": {
      "key": "version of <file>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "file"
    },
    "version block of <file>": {
      "key": "version block of <file>",
      "type": "property",
      "resultType": "file version block",
      "singularPhrase": "version block",
      "pluralPhrase": "version blocks",
      "directObjectType": "file"
    },
    "version block <string> of <file>": {
      "key": "version block <string> of <file>",
      "type": "property",
      "resultType": "file version block",
      "singularPhrase": "version block",
      "pluralPhrase": "version blocks",
      "indexType": "string",
      "directObjectType": "file"
    },
    "version block <integer> of <file>": {
      "key": "version block <integer> of <file>",
      "type": "property",
      "resultType": "file version block",
      "singularPhrase": "version block",
      "pluralPhrase": "version blocks",
      "indexType": "integer",
      "directObjectType": "file"
    },
    "shortcut of <file>": {
      "key": "shortcut of <file>",
      "type": "property",
      "resultType": "file shortcut",
      "singularPhrase": "shortcut",
      "pluralPhrase": "shortcuts",
      "directObjectType": "file"
    },
    "security descriptor of <file>": {
      "key": "security descriptor of <file>",
      "type": "property",
      "resultType": "security descriptor",
      "singularPhrase": "security descriptor",
      "pluralPhrase": "security descriptors",
      "directObjectType": "file"
    },
    "raw version of <file>": {
      "key": "raw version of <file>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "raw version",
      "pluralPhrase": "raw versions",
      "directObjectType": "file"
    },
    "raw version block of <file>": {
      "key": "raw version block of <file>",
      "type": "property",
      "resultType": "file version block",
      "singularPhrase": "raw version block",
      "pluralPhrase": "raw version blocks",
      "directObjectType": "file"
    },
    "raw version block <string> of <file>": {
      "key": "raw version block <string> of <file>",
      "type": "property",
      "resultType": "file version block",
      "singularPhrase": "raw version block",
      "pluralPhrase": "raw version blocks",
      "indexType": "string",
      "directObjectType": "file"
    },
    "raw version block <integer> of <file>": {
      "key": "raw version block <integer> of <file>",
      "type": "property",
      "resultType": "file version block",
      "singularPhrase": "raw version block",
      "pluralPhrase": "raw version blocks",
      "indexType": "integer",
      "directObjectType": "file"
    },
    "raw product version of <file>": {
      "key": "raw product version of <file>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "raw product version",
      "pluralPhrase": "raw product versions",
      "directObjectType": "file"
    },
    "raw file version of <file>": {
      "key": "raw file version of <file>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "raw file version",
      "pluralPhrase": "raw file versions",
      "directObjectType": "file"
    },
    "product version of <file>": {
      "key": "product version of <file>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "product version",
      "pluralPhrase": "product versions",
      "directObjectType": "file"
    },
    "pem encoded certificate of <file>": {
      "key": "pem encoded certificate of <file>",
      "type": "property",
      "resultType": "x509 certificate",
      "singularPhrase": "pem encoded certificate",
      "pluralPhrase": "pem encoded certificates",
      "directObjectType": "file"
    },
    "only version block of <file>": {
      "key": "only version block of <file>",
      "type": "property",
      "resultType": "file version block",
      "singularPhrase": "only version block",
      "pluralPhrase": "only version blocks",
      "directObjectType": "file"
    },
    "only raw version block of <file>": {
      "key": "only raw version block of <file>",
      "type": "property",
      "resultType": "file version block",
      "singularPhrase": "only raw version block",
      "pluralPhrase": "only raw version blocks",
      "directObjectType": "file"
    },
    "first raw version block of <file>": {
      "key": "first raw version block of <file>",
      "type": "property",
      "resultType": "file version block",
      "singularPhrase": "first raw version block",
      "pluralPhrase": "first raw version blocks",
      "directObjectType": "file"
    },
    "file version of <file>": {
      "key": "file version of <file>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "file version",
      "pluralPhrase": "file versions",
      "directObjectType": "file"
    },
    "executable file format of <file>": {
      "key": "executable file format of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "executable file format",
      "pluralPhrase": "executable file formats",
      "directObjectType": "file"
    },
    "aol error time of <file>": {
      "key": "aol error time of <file>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "aol error time",
      "pluralPhrase": "aol error times",
      "directObjectType": "file"
    },
    "aol error of <file>": {
      "key": "aol error of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "aol error",
      "pluralPhrase": "aol errors",
      "directObjectType": "file"
    },
    "<file> as string": {
      "key": "<file> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "file",
      "phrase": "string"
    },
    "working directory of <exec task action>": {
      "key": "working directory of <exec task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "working directory",
      "pluralPhrase": "working directories",
      "directObjectType": "exec task action"
    },
    "path of <exec task action>": {
      "key": "path of <exec task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "exec task action"
    },
    "argument string of <exec task action>": {
      "key": "argument string of <exec task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "argument string",
      "pluralPhrase": "argument strings",
      "directObjectType": "exec task action"
    },
    "value query of <event task trigger>": {
      "key": "value query of <event task trigger>",
      "type": "property",
      "resultType": "task named value pair",
      "singularPhrase": "value query",
      "pluralPhrase": "value queries",
      "directObjectType": "event task trigger"
    },
    "subscription of <event task trigger>": {
      "key": "subscription of <event task trigger>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "subscription",
      "pluralPhrase": "subscriptions",
      "directObjectType": "event task trigger"
    },
    "delay of <event task trigger>": {
      "key": "delay of <event task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "delay",
      "pluralPhrase": "delays",
      "directObjectType": "event task trigger"
    },
    "user sid of <event log record>": {
      "key": "user sid of <event log record>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "user sid",
      "pluralPhrase": "user sids",
      "directObjectType": "event log record"
    },
    "time written of <event log record>": {
      "key": "time written of <event log record>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time written",
      "pluralPhrase": "times written",
      "directObjectType": "event log record"
    },
    "time generated of <event log record>": {
      "key": "time generated of <event log record>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "time generated",
      "pluralPhrase": "times generated",
      "directObjectType": "event log record"
    },
    "source of <event log record>": {
      "key": "source of <event log record>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "source",
      "pluralPhrase": "sources",
      "directObjectType": "event log record"
    },
    "record number of <event log record>": {
      "key": "record number of <event log record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "record number",
      "pluralPhrase": "record numbers",
      "directObjectType": "event log record"
    },
    "length of <event log record>": {
      "key": "length of <event log record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "length",
      "pluralPhrase": "lengths",
      "directObjectType": "event log record"
    },
    "event type of <event log record>": {
      "key": "event type of <event log record>",
      "type": "property",
      "resultType": "event log event type",
      "singularPhrase": "event type",
      "pluralPhrase": "event types",
      "directObjectType": "event log record"
    },
    "event id of <event log record>": {
      "key": "event id of <event log record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "event id",
      "pluralPhrase": "event ids",
      "directObjectType": "event log record"
    },
    "description of <event log record>": {
      "key": "description of <event log record>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "event log record"
    },
    "computer of <event log record>": {
      "key": "computer of <event log record>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "computer",
      "pluralPhrase": "computers",
      "directObjectType": "event log record"
    },
    "category of <event log record>": {
      "key": "category of <event log record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "category",
      "pluralPhrase": "categories",
      "directObjectType": "event log record"
    },
    "<event log event type> = <event log event type>": {
      "key": "<event log event type> = <event log event type>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "event log event type",
      "op": "=",
      "rightType": "event log event type"
    },
    "record of <event log>": {
      "key": "record of <event log>",
      "type": "property",
      "resultType": "event log record",
      "singularPhrase": "record",
      "pluralPhrase": "records",
      "directObjectType": "event log"
    },
    "record count of <event log>": {
      "key": "record count of <event log>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "record count",
      "pluralPhrase": "record counts",
      "directObjectType": "event log"
    },
    "record <integer> of <event log>": {
      "key": "record <integer> of <event log>",
      "type": "property",
      "resultType": "event log record",
      "singularPhrase": "record",
      "pluralPhrase": "records",
      "indexType": "integer",
      "directObjectType": "event log"
    },
    "oldest record number of <event log>": {
      "key": "oldest record number of <event log>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "oldest record number",
      "pluralPhrase": "oldest record numbers",
      "directObjectType": "event log"
    },
    "to of <email task action>": {
      "key": "to of <email task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "to",
      "pluralPhrase": "tos",
      "directObjectType": "email task action"
    },
    "subject of <email task action>": {
      "key": "subject of <email task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "subject",
      "pluralPhrase": "subjects",
      "directObjectType": "email task action"
    },
    "server of <email task action>": {
      "key": "server of <email task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "server",
      "pluralPhrase": "servers",
      "directObjectType": "email task action"
    },
    "replyto of <email task action>": {
      "key": "replyto of <email task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "replyto",
      "pluralPhrase": "replytos",
      "directObjectType": "email task action"
    },
    "header field of <email task action>": {
      "key": "header field of <email task action>",
      "type": "property",
      "resultType": "task named value pair",
      "singularPhrase": "header field",
      "pluralPhrase": "header fields",
      "directObjectType": "email task action"
    },
    "from of <email task action>": {
      "key": "from of <email task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "from",
      "pluralPhrase": "froms",
      "directObjectType": "email task action"
    },
    "cc of <email task action>": {
      "key": "cc of <email task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "cc",
      "pluralPhrase": "ccs",
      "directObjectType": "email task action"
    },
    "body of <email task action>": {
      "key": "body of <email task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "body",
      "pluralPhrase": "bodies",
      "directObjectType": "email task action"
    },
    "bcc of <email task action>": {
      "key": "bcc of <email task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "bcc",
      "pluralPhrase": "bccs",
      "directObjectType": "email task action"
    },
    "attachment of <email task action>": {
      "key": "attachment of <email task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "attachment",
      "pluralPhrase": "attachments",
      "directObjectType": "email task action"
    },
    "type of <drive>": {
      "key": "type of <drive>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "drive"
    },
    "total space of <drive>": {
      "key": "total space of <drive>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "total space",
      "pluralPhrase": "total spaces",
      "directObjectType": "drive"
    },
    "root folder of <drive>": {
      "key": "root folder of <drive>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "root folder",
      "pluralPhrase": "root folders",
      "directObjectType": "drive"
    },
    "numeric type of <drive>": {
      "key": "numeric type of <drive>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "numeric type",
      "pluralPhrase": "numeric types",
      "directObjectType": "drive"
    },
    "name of <drive>": {
      "key": "name of <drive>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "drive"
    },
    "fs_vol_is_compressed of <drive>": {
      "key": "fs_vol_is_compressed of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fs_vol_is_compressed",
      "pluralPhrase": "fs_vol_is_compresseds",
      "directObjectType": "drive"
    },
    "fs_unicode_stored_on_disk of <drive>": {
      "key": "fs_unicode_stored_on_disk of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fs_unicode_stored_on_disk",
      "pluralPhrase": "fs_unicode_stored_on_disks",
      "directObjectType": "drive"
    },
    "fs_persistent_acls of <drive>": {
      "key": "fs_persistent_acls of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fs_persistent_acls",
      "pluralPhrase": "fs_persistent_aclss",
      "directObjectType": "drive"
    },
    "fs_file_compression of <drive>": {
      "key": "fs_file_compression of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fs_file_compression",
      "pluralPhrase": "fs_file_compressions",
      "directObjectType": "drive"
    },
    "fs_case_sensitive of <drive>": {
      "key": "fs_case_sensitive of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fs_case_sensitive",
      "pluralPhrase": "fs_case_sensitives",
      "directObjectType": "drive"
    },
    "fs_case_is_preserved of <drive>": {
      "key": "fs_case_is_preserved of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fs_case_is_preserved",
      "pluralPhrase": "fs_case_is_preserveds",
      "directObjectType": "drive"
    },
    "free space of <drive>": {
      "key": "free space of <drive>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "free space",
      "pluralPhrase": "free spaces",
      "directObjectType": "drive"
    },
    "folder <string> of <drive>": {
      "key": "folder <string> of <drive>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "folder",
      "pluralPhrase": "folders",
      "indexType": "string",
      "directObjectType": "drive"
    },
    "file_volume_quotas of <drive>": {
      "key": "file_volume_quotas of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "file_volume_quotas",
      "pluralPhrase": "file_volume_quotass",
      "directObjectType": "drive"
    },
    "file_supports_sparse_files of <drive>": {
      "key": "file_supports_sparse_files of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "file_supports_sparse_files",
      "pluralPhrase": "file_supports_sparse_filess",
      "directObjectType": "drive"
    },
    "file_supports_reparse_points of <drive>": {
      "key": "file_supports_reparse_points of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "file_supports_reparse_points",
      "pluralPhrase": "file_supports_reparse_pointss",
      "directObjectType": "drive"
    },
    "file_supports_object_ids of <drive>": {
      "key": "file_supports_object_ids of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "file_supports_object_ids",
      "pluralPhrase": "file_supports_object_idss",
      "directObjectType": "drive"
    },
    "file_supports_encryption of <drive>": {
      "key": "file_supports_encryption of <drive>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "file_supports_encryption",
      "pluralPhrase": "file_supports_encryptions",
      "directObjectType": "drive"
    },
    "file system type of <drive>": {
      "key": "file system type of <drive>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "file system type",
      "pluralPhrase": "file system types",
      "directObjectType": "drive"
    },
    "<discretionary access control list> as string": {
      "key": "<discretionary access control list> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "discretionary access control list",
      "phrase": "string"
    },
    "random delay of <daily task trigger>": {
      "key": "random delay of <daily task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "random delay",
      "pluralPhrase": "random delays",
      "directObjectType": "daily task trigger"
    },
    "days interval of <daily task trigger>": {
      "key": "days interval of <daily task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "days interval",
      "pluralPhrase": "days intervals",
      "directObjectType": "daily task trigger"
    },
    "<connection status> = <connection status>": {
      "key": "<connection status> = <connection status>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "connection status",
      "op": "=",
      "rightType": "connection status"
    },
    "status of <connection>": {
      "key": "status of <connection>",
      "type": "property",
      "resultType": "connection status",
      "singularPhrase": "status",
      "pluralPhrase": "statuses",
      "directObjectType": "connection"
    },
    "name of <connection>": {
      "key": "name of <connection>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "connection"
    },
    "media type of <connection>": {
      "key": "media type of <connection>",
      "type": "property",
      "resultType": "media type",
      "singularPhrase": "media type",
      "pluralPhrase": "media types",
      "directObjectType": "connection"
    },
    "guid of <connection>": {
      "key": "guid of <connection>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "guid",
      "pluralPhrase": "guids",
      "directObjectType": "connection"
    },
    "firewall of <connection>": {
      "key": "firewall of <connection>",
      "type": "property",
      "resultType": "internet connection firewall",
      "singularPhrase": "firewall",
      "pluralPhrase": "firewalls",
      "directObjectType": "connection"
    },
    "device name of <connection>": {
      "key": "device name of <connection>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device name",
      "pluralPhrase": "device names",
      "directObjectType": "connection"
    },
    "data of <com handler task action>": {
      "key": "data of <com handler task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "data",
      "pluralPhrase": "datas",
      "directObjectType": "com handler task action"
    },
    "class id of <com handler task action>": {
      "key": "class id of <com handler task action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "class id",
      "pluralPhrase": "class ids",
      "directObjectType": "com handler task action"
    },
    "delay of <boot task trigger>": {
      "key": "delay of <boot task trigger>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "delay",
      "pluralPhrase": "delays",
      "directObjectType": "boot task trigger"
    },
    "system policy of <audit policy subcategory>": {
      "key": "system policy of <audit policy subcategory>",
      "type": "property",
      "resultType": "audit policy information",
      "singularPhrase": "system policy",
      "pluralPhrase": "system policies",
      "directObjectType": "audit policy subcategory"
    },
    "per user policy <security account> of <audit policy subcategory>": {
      "key": "per user policy <security account> of <audit policy subcategory>",
      "type": "property",
      "resultType": "audit policy information",
      "singularPhrase": "per user policy",
      "pluralPhrase": "per user policies",
      "indexType": "security account",
      "directObjectType": "audit policy subcategory"
    },
    "name of <audit policy subcategory>": {
      "key": "name of <audit policy subcategory>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "audit policy subcategory"
    },
    "effective policy <security account> of <audit policy subcategory>": {
      "key": "effective policy <security account> of <audit policy subcategory>",
      "type": "property",
      "resultType": "audit policy information",
      "singularPhrase": "effective policy",
      "pluralPhrase": "effective policies",
      "indexType": "security account",
      "directObjectType": "audit policy subcategory"
    },
    "audit success of <audit policy information>": {
      "key": "audit success of <audit policy information>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "audit success",
      "pluralPhrase": "audit successes",
      "directObjectType": "audit policy information"
    },
    "audit failure of <audit policy information>": {
      "key": "audit failure of <audit policy information>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "audit failure",
      "pluralPhrase": "audit failures",
      "directObjectType": "audit policy information"
    },
    "subcategory of <audit policy category>": {
      "key": "subcategory of <audit policy category>",
      "type": "property",
      "resultType": "audit policy subcategory",
      "singularPhrase": "subcategory",
      "pluralPhrase": "subcategories",
      "directObjectType": "audit policy category"
    },
    "name of <audit policy category>": {
      "key": "name of <audit policy category>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "audit policy category"
    },
    "system category of <audit policy>": {
      "key": "system category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "system category",
      "pluralPhrase": "system categories",
      "directObjectType": "audit policy"
    },
    "privilege use category of <audit policy>": {
      "key": "privilege use category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "privilege use category",
      "pluralPhrase": "privilege use categories",
      "directObjectType": "audit policy"
    },
    "policy change category of <audit policy>": {
      "key": "policy change category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "policy change category",
      "pluralPhrase": "policy change categories",
      "directObjectType": "audit policy"
    },
    "object access category of <audit policy>": {
      "key": "object access category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "object access category",
      "pluralPhrase": "object access categories",
      "directObjectType": "audit policy"
    },
    "logon logoff category of <audit policy>": {
      "key": "logon logoff category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "logon logoff category",
      "pluralPhrase": "logon logoff categories",
      "directObjectType": "audit policy"
    },
    "ds access category of <audit policy>": {
      "key": "ds access category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "ds access category",
      "pluralPhrase": "ds access categories",
      "directObjectType": "audit policy"
    },
    "detailed tracking category of <audit policy>": {
      "key": "detailed tracking category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "detailed tracking category",
      "pluralPhrase": "detailed tracking categories",
      "directObjectType": "audit policy"
    },
    "category of <audit policy>": {
      "key": "category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "category",
      "pluralPhrase": "categories",
      "directObjectType": "audit policy"
    },
    "account management category of <audit policy>": {
      "key": "account management category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "account management category",
      "pluralPhrase": "account management categories",
      "directObjectType": "audit policy"
    },
    "account logon category of <audit policy>": {
      "key": "account logon category of <audit policy>",
      "type": "property",
      "resultType": "audit policy category",
      "singularPhrase": "account logon category",
      "pluralPhrase": "account logon categories",
      "directObjectType": "audit policy"
    },
    "user interval of <activity history>": {
      "key": "user interval of <activity history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "user interval",
      "pluralPhrase": "user intervals",
      "directObjectType": "activity history"
    },
    "status of <active device>": {
      "key": "status of <active device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "status",
      "pluralPhrase": "statuss",
      "directObjectType": "active device"
    },
    "service key value name of <active device>": {
      "key": "service key value name of <active device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "service key value name",
      "pluralPhrase": "service key value names",
      "directObjectType": "active device"
    },
    "problem id of <active device>": {
      "key": "problem id of <active device>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "problem id",
      "pluralPhrase": "problem ids",
      "directObjectType": "active device"
    },
    "manufacturer of <active device>": {
      "key": "manufacturer of <active device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "manufacturer",
      "pluralPhrase": "manufacturers",
      "directObjectType": "active device"
    },
    "location information of <active device>": {
      "key": "location information of <active device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "location information",
      "pluralPhrase": "location informations",
      "directObjectType": "active device"
    },
    "hardware id of <active device>": {
      "key": "hardware id of <active device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "hardware id",
      "pluralPhrase": "hardware ids",
      "directObjectType": "active device"
    },
    "friendly name of <active device>": {
      "key": "friendly name of <active device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "friendly name",
      "pluralPhrase": "friendly names",
      "directObjectType": "active device"
    },
    "driver key value name of <active device>": {
      "key": "driver key value name of <active device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "driver key value name",
      "pluralPhrase": "driver key value names",
      "directObjectType": "active device"
    },
    "driver key of <active device>": {
      "key": "driver key of <active device>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "driver key",
      "pluralPhrase": "driver keys",
      "directObjectType": "active device"
    },
    "description of <active device>": {
      "key": "description of <active device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "active device"
    },
    "class of <active device>": {
      "key": "class of <active device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "class",
      "pluralPhrase": "classes",
      "directObjectType": "active device"
    },
    "entry of <access control list>": {
      "key": "entry of <access control list>",
      "type": "property",
      "resultType": "access control entry",
      "singularPhrase": "entry",
      "pluralPhrase": "entries",
      "directObjectType": "access control list"
    },
    "effective write permission for <string> of <access control list>": {
      "key": "effective write permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write permission for",
      "pluralPhrase": "effective write permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective write permission for <security account> of <access control list>": {
      "key": "effective write permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write permission for",
      "pluralPhrase": "effective write permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective write owner permission for <string> of <access control list>": {
      "key": "effective write owner permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write owner permission for",
      "pluralPhrase": "effective write owner permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective write owner permission for <security account> of <access control list>": {
      "key": "effective write owner permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write owner permission for",
      "pluralPhrase": "effective write owner permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective write extended attributes permission for <string> of <access control list>": {
      "key": "effective write extended attributes permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write extended attributes permission for",
      "pluralPhrase": "effective write extended attributes permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective write extended attributes permission for <security account> of <access control list>": {
      "key": "effective write extended attributes permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write extended attributes permission for",
      "pluralPhrase": "effective write extended attributes permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective write dac permission for <string> of <access control list>": {
      "key": "effective write dac permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write dac permission for",
      "pluralPhrase": "effective write dac permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective write dac permission for <security account> of <access control list>": {
      "key": "effective write dac permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write dac permission for",
      "pluralPhrase": "effective write dac permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective write attributes permission for <string> of <access control list>": {
      "key": "effective write attributes permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write attributes permission for",
      "pluralPhrase": "effective write attributes permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective write attributes permission for <security account> of <access control list>": {
      "key": "effective write attributes permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective write attributes permission for",
      "pluralPhrase": "effective write attributes permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective traverse permission for <string> of <access control list>": {
      "key": "effective traverse permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective traverse permission for",
      "pluralPhrase": "effective traverse permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective traverse permission for <security account> of <access control list>": {
      "key": "effective traverse permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective traverse permission for",
      "pluralPhrase": "effective traverse permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective synchronize permission for <string> of <access control list>": {
      "key": "effective synchronize permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective synchronize permission for",
      "pluralPhrase": "effective synchronize permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective synchronize permission for <security account> of <access control list>": {
      "key": "effective synchronize permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective synchronize permission for",
      "pluralPhrase": "effective synchronize permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective set value permission for <string> of <access control list>": {
      "key": "effective set value permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective set value permission for",
      "pluralPhrase": "effective set value permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective set value permission for <security account> of <access control list>": {
      "key": "effective set value permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective set value permission for",
      "pluralPhrase": "effective set value permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective read permission for <string> of <access control list>": {
      "key": "effective read permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective read permission for",
      "pluralPhrase": "effective read permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective read permission for <security account> of <access control list>": {
      "key": "effective read permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective read permission for",
      "pluralPhrase": "effective read permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective read extended attributes permission for <string> of <access control list>": {
      "key": "effective read extended attributes permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective read extended attributes permission for",
      "pluralPhrase": "effective read extended attributes permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective read extended attributes permission for <security account> of <access control list>": {
      "key": "effective read extended attributes permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective read extended attributes permission for",
      "pluralPhrase": "effective read extended attributes permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective read control permission for <string> of <access control list>": {
      "key": "effective read control permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective read control permission for",
      "pluralPhrase": "effective read control permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective read control permission for <security account> of <access control list>": {
      "key": "effective read control permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective read control permission for",
      "pluralPhrase": "effective read control permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective read attributes permission for <string> of <access control list>": {
      "key": "effective read attributes permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective read attributes permission for",
      "pluralPhrase": "effective read attributes permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective read attributes permission for <security account> of <access control list>": {
      "key": "effective read attributes permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective read attributes permission for",
      "pluralPhrase": "effective read attributes permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective query value permission for <string> of <access control list>": {
      "key": "effective query value permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective query value permission for",
      "pluralPhrase": "effective query value permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective query value permission for <security account> of <access control list>": {
      "key": "effective query value permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective query value permission for",
      "pluralPhrase": "effective query value permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective maximum allowed permission for <string> of <access control list>": {
      "key": "effective maximum allowed permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective maximum allowed permission for",
      "pluralPhrase": "effective maximum allowed permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective maximum allowed permission for <security account> of <access control list>": {
      "key": "effective maximum allowed permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective maximum allowed permission for",
      "pluralPhrase": "effective maximum allowed permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective list permission for <string> of <access control list>": {
      "key": "effective list permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective list permission for",
      "pluralPhrase": "effective list permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective list permission for <security account> of <access control list>": {
      "key": "effective list permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective list permission for",
      "pluralPhrase": "effective list permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective generic write permission for <string> of <access control list>": {
      "key": "effective generic write permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective generic write permission for",
      "pluralPhrase": "effective generic write permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective generic write permission for <security account> of <access control list>": {
      "key": "effective generic write permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective generic write permission for",
      "pluralPhrase": "effective generic write permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective generic read permission for <string> of <access control list>": {
      "key": "effective generic read permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective generic read permission for",
      "pluralPhrase": "effective generic read permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective generic read permission for <security account> of <access control list>": {
      "key": "effective generic read permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective generic read permission for",
      "pluralPhrase": "effective generic read permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective generic execute permission for <string> of <access control list>": {
      "key": "effective generic execute permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective generic execute permission for",
      "pluralPhrase": "effective generic execute permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective generic execute permission for <security account> of <access control list>": {
      "key": "effective generic execute permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective generic execute permission for",
      "pluralPhrase": "effective generic execute permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective generic all permission for <string> of <access control list>": {
      "key": "effective generic all permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective generic all permission for",
      "pluralPhrase": "effective generic all permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective generic all permission for <security account> of <access control list>": {
      "key": "effective generic all permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective generic all permission for",
      "pluralPhrase": "effective generic all permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective execute permission for <string> of <access control list>": {
      "key": "effective execute permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective execute permission for",
      "pluralPhrase": "effective execute permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective execute permission for <security account> of <access control list>": {
      "key": "effective execute permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective execute permission for",
      "pluralPhrase": "effective execute permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective enumerate subkeys permission for <string> of <access control list>": {
      "key": "effective enumerate subkeys permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective enumerate subkeys permission for",
      "pluralPhrase": "effective enumerate subkeys permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective enumerate subkeys permission for <security account> of <access control list>": {
      "key": "effective enumerate subkeys permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective enumerate subkeys permission for",
      "pluralPhrase": "effective enumerate subkeys permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective delete permission for <string> of <access control list>": {
      "key": "effective delete permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective delete permission for",
      "pluralPhrase": "effective delete permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective delete permission for <security account> of <access control list>": {
      "key": "effective delete permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective delete permission for",
      "pluralPhrase": "effective delete permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective delete child permission for <string> of <access control list>": {
      "key": "effective delete child permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective delete child permission for",
      "pluralPhrase": "effective delete child permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective delete child permission for <security account> of <access control list>": {
      "key": "effective delete child permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective delete child permission for",
      "pluralPhrase": "effective delete child permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective create subkey permission for <string> of <access control list>": {
      "key": "effective create subkey permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective create subkey permission for",
      "pluralPhrase": "effective create subkey permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective create subkey permission for <security account> of <access control list>": {
      "key": "effective create subkey permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective create subkey permission for",
      "pluralPhrase": "effective create subkey permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective create link permission for <string> of <access control list>": {
      "key": "effective create link permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective create link permission for",
      "pluralPhrase": "effective create link permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective create link permission for <security account> of <access control list>": {
      "key": "effective create link permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective create link permission for",
      "pluralPhrase": "effective create link permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective create folder permission for <string> of <access control list>": {
      "key": "effective create folder permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective create folder permission for",
      "pluralPhrase": "effective create folder permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective create folder permission for <security account> of <access control list>": {
      "key": "effective create folder permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective create folder permission for",
      "pluralPhrase": "effective create folder permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective create file permission for <string> of <access control list>": {
      "key": "effective create file permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective create file permission for",
      "pluralPhrase": "effective create file permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective create file permission for <security account> of <access control list>": {
      "key": "effective create file permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective create file permission for",
      "pluralPhrase": "effective create file permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective change notification permission for <string> of <access control list>": {
      "key": "effective change notification permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective change notification permission for",
      "pluralPhrase": "effective change notification permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective change notification permission for <security account> of <access control list>": {
      "key": "effective change notification permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective change notification permission for",
      "pluralPhrase": "effective change notification permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective append permission for <string> of <access control list>": {
      "key": "effective append permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective append permission for",
      "pluralPhrase": "effective append permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective append permission for <security account> of <access control list>": {
      "key": "effective append permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective append permission for",
      "pluralPhrase": "effective append permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective access system security permission for <string> of <access control list>": {
      "key": "effective access system security permission for <string> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective access system security permission for",
      "pluralPhrase": "effective access system security permissions for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective access system security permission for <security account> of <access control list>": {
      "key": "effective access system security permission for <security account> of <access control list>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "effective access system security permission for",
      "pluralPhrase": "effective access system security permissions for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "effective access mode for <string> of <access control list>": {
      "key": "effective access mode for <string> of <access control list>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "effective access mode for",
      "pluralPhrase": "effective access modes for",
      "indexType": "string",
      "directObjectType": "access control list"
    },
    "effective access mode for <security account> of <access control list>": {
      "key": "effective access mode for <security account> of <access control list>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "effective access mode for",
      "pluralPhrase": "effective access modes for",
      "indexType": "security account",
      "directObjectType": "access control list"
    },
    "write permission of <access control entry>": {
      "key": "write permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "write permission",
      "pluralPhrase": "write permissions",
      "directObjectType": "access control entry"
    },
    "write owner permission of <access control entry>": {
      "key": "write owner permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "write owner permission",
      "pluralPhrase": "write owner permissions",
      "directObjectType": "access control entry"
    },
    "write extended attributes permission of <access control entry>": {
      "key": "write extended attributes permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "write extended attributes permission",
      "pluralPhrase": "write extended attributes permissions",
      "directObjectType": "access control entry"
    },
    "write dac permission of <access control entry>": {
      "key": "write dac permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "write dac permission",
      "pluralPhrase": "write dac permissions",
      "directObjectType": "access control entry"
    },
    "write attributes permission of <access control entry>": {
      "key": "write attributes permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "write attributes permission",
      "pluralPhrase": "write attributes permissions",
      "directObjectType": "access control entry"
    },
    "trustee type of <access control entry>": {
      "key": "trustee type of <access control entry>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "trustee type",
      "pluralPhrase": "trustee types",
      "directObjectType": "access control entry"
    },
    "trustee of <access control entry>": {
      "key": "trustee of <access control entry>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "trustee",
      "pluralPhrase": "trustees",
      "directObjectType": "access control entry"
    },
    "traverse permission of <access control entry>": {
      "key": "traverse permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "traverse permission",
      "pluralPhrase": "traverse permissions",
      "directObjectType": "access control entry"
    },
    "synchronize permission of <access control entry>": {
      "key": "synchronize permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "synchronize permission",
      "pluralPhrase": "synchronize permissions",
      "directObjectType": "access control entry"
    },
    "set value permission of <access control entry>": {
      "key": "set value permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "set value permission",
      "pluralPhrase": "set value permissions",
      "directObjectType": "access control entry"
    },
    "read permission of <access control entry>": {
      "key": "read permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "read permission",
      "pluralPhrase": "read permissions",
      "directObjectType": "access control entry"
    },
    "read extended attributes permission of <access control entry>": {
      "key": "read extended attributes permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "read extended attributes permission",
      "pluralPhrase": "read extended attributes permissions",
      "directObjectType": "access control entry"
    },
    "read control permission of <access control entry>": {
      "key": "read control permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "read control permission",
      "pluralPhrase": "read control permissions",
      "directObjectType": "access control entry"
    },
    "read attributes permission of <access control entry>": {
      "key": "read attributes permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "read attributes permission",
      "pluralPhrase": "read attributes permissions",
      "directObjectType": "access control entry"
    },
    "query value permission of <access control entry>": {
      "key": "query value permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "query value permission",
      "pluralPhrase": "query value permissions",
      "directObjectType": "access control entry"
    },
    "maximum allowed permission of <access control entry>": {
      "key": "maximum allowed permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "maximum allowed permission",
      "pluralPhrase": "maximum allowed permissions",
      "directObjectType": "access control entry"
    },
    "list permission of <access control entry>": {
      "key": "list permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "list permission",
      "pluralPhrase": "list permissions",
      "directObjectType": "access control entry"
    },
    "inheritance of <access control entry>": {
      "key": "inheritance of <access control entry>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "inheritance",
      "pluralPhrase": "inheritances",
      "directObjectType": "access control entry"
    },
    "generic write permission of <access control entry>": {
      "key": "generic write permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "generic write permission",
      "pluralPhrase": "generic write permissions",
      "directObjectType": "access control entry"
    },
    "generic read permission of <access control entry>": {
      "key": "generic read permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "generic read permission",
      "pluralPhrase": "generic read permissions",
      "directObjectType": "access control entry"
    },
    "generic execute permission of <access control entry>": {
      "key": "generic execute permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "generic execute permission",
      "pluralPhrase": "generic execute permissions",
      "directObjectType": "access control entry"
    },
    "generic all permission of <access control entry>": {
      "key": "generic all permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "generic all permission",
      "pluralPhrase": "generic all permissions",
      "directObjectType": "access control entry"
    },
    "execute permission of <access control entry>": {
      "key": "execute permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "execute permission",
      "pluralPhrase": "execute permissions",
      "directObjectType": "access control entry"
    },
    "enumerate subkeys permission of <access control entry>": {
      "key": "enumerate subkeys permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enumerate subkeys permission",
      "pluralPhrase": "enumerate subkeys permissions",
      "directObjectType": "access control entry"
    },
    "delete permission of <access control entry>": {
      "key": "delete permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "delete permission",
      "pluralPhrase": "delete permissions",
      "directObjectType": "access control entry"
    },
    "delete child permission of <access control entry>": {
      "key": "delete child permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "delete child permission",
      "pluralPhrase": "delete child permissions",
      "directObjectType": "access control entry"
    },
    "create subkey permission of <access control entry>": {
      "key": "create subkey permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "create subkey permission",
      "pluralPhrase": "create subkey permissions",
      "directObjectType": "access control entry"
    },
    "create link permission of <access control entry>": {
      "key": "create link permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "create link permission",
      "pluralPhrase": "create link permissions",
      "directObjectType": "access control entry"
    },
    "create folder permission of <access control entry>": {
      "key": "create folder permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "create folder permission",
      "pluralPhrase": "create folder permissions",
      "directObjectType": "access control entry"
    },
    "create file permission of <access control entry>": {
      "key": "create file permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "create file permission",
      "pluralPhrase": "create file permissions",
      "directObjectType": "access control entry"
    },
    "change notification permission of <access control entry>": {
      "key": "change notification permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "change notification permission",
      "pluralPhrase": "change notification permissions",
      "directObjectType": "access control entry"
    },
    "append permission of <access control entry>": {
      "key": "append permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "append permission",
      "pluralPhrase": "append permissions",
      "directObjectType": "access control entry"
    },
    "access mode of <access control entry>": {
      "key": "access mode of <access control entry>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "access mode",
      "pluralPhrase": "access modes",
      "directObjectType": "access control entry"
    },
    "preferred bes language": {
      "key": "preferred bes language",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "preferred bes language",
      "pluralPhrase": "preferred bes languages"
    },
    "bes language": {
      "key": "bes language",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "bes language",
      "pluralPhrase": "bes languages"
    },
    "debianpackage": {
      "key": "debianpackage",
      "type": "property",
      "resultType": "debianpackagecache",
      "singularPhrase": "debianpackage",
      "pluralPhrase": "debianpackages"
    },
    "debian package version upstream <string>": {
      "key": "debian package version upstream <string>",
      "type": "property",
      "resultType": "debian package upstream version",
      "singularPhrase": "debian package version upstream",
      "pluralPhrase": "debian package version upstreams",
      "indexType": "string"
    },
    "debian package version upstream <debian package upstream version>": {
      "key": "debian package version upstream <debian package upstream version>",
      "type": "property",
      "resultType": "debian package upstream version",
      "singularPhrase": "debian package version upstream",
      "pluralPhrase": "debian package version upstreams",
      "indexType": "debian package upstream version"
    },
    "debian package version revision <string>": {
      "key": "debian package version revision <string>",
      "type": "property",
      "resultType": "debian package version revision",
      "singularPhrase": "debian package version revision",
      "pluralPhrase": "debian package version revisions",
      "indexType": "string"
    },
    "debian package version revision <debian package version revision>": {
      "key": "debian package version revision <debian package version revision>",
      "type": "property",
      "resultType": "debian package version revision",
      "singularPhrase": "debian package version revision",
      "pluralPhrase": "debian package version revisions",
      "indexType": "debian package version revision"
    },
    "debian package version epoch <string>": {
      "key": "debian package version epoch <string>",
      "type": "property",
      "resultType": "debian package version epoch",
      "singularPhrase": "debian package version epoch",
      "pluralPhrase": "debian package version epochs",
      "indexType": "string"
    },
    "debian package version epoch <debian package version epoch>": {
      "key": "debian package version epoch <debian package version epoch>",
      "type": "property",
      "resultType": "debian package version epoch",
      "singularPhrase": "debian package version epoch",
      "pluralPhrase": "debian package version epochs",
      "indexType": "debian package version epoch"
    },
    "debian package version <string>": {
      "key": "debian package version <string>",
      "type": "property",
      "resultType": "debian package version",
      "singularPhrase": "debian package version",
      "pluralPhrase": "debian package versions",
      "indexType": "string"
    },
    "debian package version <debian package version>": {
      "key": "debian package version <debian package version>",
      "type": "property",
      "resultType": "debian package version",
      "singularPhrase": "debian package version",
      "pluralPhrase": "debian package versions",
      "indexType": "debian package version"
    },
    "codename of <operating system>": {
      "key": "codename of <operating system>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "codename",
      "pluralPhrase": "codenames",
      "directObjectType": "operating system"
    },
    "site of <fixlet>": {
      "key": "site of <fixlet>",
      "type": "property",
      "resultType": "site",
      "singularPhrase": "site",
      "pluralPhrase": "sites",
      "directObjectType": "fixlet"
    },
    "section of <debianpkg version>": {
      "key": "section of <debianpkg version>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "section",
      "pluralPhrase": "sections",
      "directObjectType": "debianpkg version"
    },
    "base package of <debianpkg version>": {
      "key": "base package of <debianpkg version>",
      "type": "property",
      "resultType": "debian base package",
      "singularPhrase": "base package",
      "pluralPhrase": "base packages",
      "directObjectType": "debianpkg version"
    },
    "architecture of <debianpkg version>": {
      "key": "architecture of <debianpkg version>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "architecture",
      "pluralPhrase": "architectures",
      "directObjectType": "debianpkg version"
    },
    "<debianpkg version> as debian package version": {
      "key": "<debianpkg version> as debian package version",
      "type": "cast",
      "resultType": "debian package version",
      "argType": "debianpkg version",
      "phrase": "debian package version"
    },
    "<debianpkg verfile> as string": {
      "key": "<debianpkg verfile> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debianpkg verfile",
      "phrase": "string"
    },
    "version of <debianpkg reverse dependencies>": {
      "key": "version of <debianpkg reverse dependencies>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "debianpkg reverse dependencies"
    },
    "<debianpkg reverse dependencies> as string": {
      "key": "<debianpkg reverse dependencies> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debianpkg reverse dependencies",
      "phrase": "string"
    },
    "version of <debianpkg dependency>": {
      "key": "version of <debianpkg dependency>",
      "type": "property",
      "resultType": "debian package version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "debianpkg dependency"
    },
    "type of <debianpkg dependency>": {
      "key": "type of <debianpkg dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "debianpkg dependency"
    },
    "critical of <debianpkg dependency>": {
      "key": "critical of <debianpkg dependency>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "critical",
      "pluralPhrase": "criticals",
      "directObjectType": "debianpkg dependency"
    },
    "compare_op of <debianpkg dependency>": {
      "key": "compare_op of <debianpkg dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "compare_op",
      "pluralPhrase": "compare_ops",
      "directObjectType": "debianpkg dependency"
    },
    "<debianpkg dependency> as string": {
      "key": "<debianpkg dependency> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debianpkg dependency",
      "phrase": "string"
    },
    "package of <debianpackagecache>": {
      "key": "package of <debianpackagecache>",
      "type": "property",
      "resultType": "debian versioned package",
      "singularPhrase": "package",
      "pluralPhrase": "packages",
      "directObjectType": "debianpackagecache"
    },
    "package <string> of <debianpackagecache>": {
      "key": "package <string> of <debianpackagecache>",
      "type": "property",
      "resultType": "debian versioned package",
      "singularPhrase": "package",
      "pluralPhrase": "packages",
      "indexType": "string",
      "directObjectType": "debianpackagecache"
    },
    "base package of <debianpackagecache>": {
      "key": "base package of <debianpackagecache>",
      "type": "property",
      "resultType": "debian base package",
      "singularPhrase": "base package",
      "pluralPhrase": "base packages",
      "directObjectType": "debianpackagecache"
    },
    "base package <string> of <debianpackagecache>": {
      "key": "base package <string> of <debianpackagecache>",
      "type": "property",
      "resultType": "debian base package",
      "singularPhrase": "base package",
      "pluralPhrase": "base packages",
      "indexType": "string",
      "directObjectType": "debianpackagecache"
    },
    "version of <debian versioned package>": {
      "key": "version of <debian versioned package>",
      "type": "property",
      "resultType": "debian package version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "debian versioned package"
    },
    "verfile of <debian versioned package>": {
      "key": "verfile of <debian versioned package>",
      "type": "property",
      "resultType": "debianpkg verfile",
      "singularPhrase": "verfile",
      "pluralPhrase": "verfiles",
      "directObjectType": "debian versioned package"
    },
    "section of <debian versioned package>": {
      "key": "section of <debian versioned package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "section",
      "pluralPhrase": "sections",
      "directObjectType": "debian versioned package"
    },
    "reverse dependency of <debian versioned package>": {
      "key": "reverse dependency of <debian versioned package>",
      "type": "property",
      "resultType": "debianpkg reverse dependencies",
      "singularPhrase": "reverse dependency",
      "pluralPhrase": "reverse dependencies",
      "directObjectType": "debian versioned package"
    },
    "release of <debian versioned package>": {
      "key": "release of <debian versioned package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "release",
      "pluralPhrase": "releases",
      "directObjectType": "debian versioned package"
    },
    "name of <debian versioned package>": {
      "key": "name of <debian versioned package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "debian versioned package"
    },
    "dependency of <debian versioned package>": {
      "key": "dependency of <debian versioned package>",
      "type": "property",
      "resultType": "debianpkg dependency",
      "singularPhrase": "dependency",
      "pluralPhrase": "dependencies",
      "directObjectType": "debian versioned package"
    },
    "currently installed of <debian versioned package>": {
      "key": "currently installed of <debian versioned package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "currently installed",
      "pluralPhrase": "currently installeds",
      "directObjectType": "debian versioned package"
    },
    "architecture of <debian versioned package>": {
      "key": "architecture of <debian versioned package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "architecture",
      "pluralPhrase": "architectures",
      "directObjectType": "debian versioned package"
    },
    "<debian versioned package> as string": {
      "key": "<debian versioned package> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debian versioned package",
      "phrase": "string"
    },
    "multiplicity of <debian package version with multiplicity>": {
      "key": "multiplicity of <debian package version with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "debian package version with multiplicity"
    },
    "multiplicity of <debian package version revision with multiplicity>": {
      "key": "multiplicity of <debian package version revision with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "debian package version revision with multiplicity"
    },
    "unique value of <debian package version revision>": {
      "key": "unique value of <debian package version revision>",
      "type": "property",
      "resultType": "debian package version revision with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "debian package version revision"
    },
    "minimum of <debian package version revision>": {
      "key": "minimum of <debian package version revision>",
      "type": "property",
      "resultType": "debian package version revision",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "debian package version revision"
    },
    "maximum of <debian package version revision>": {
      "key": "maximum of <debian package version revision>",
      "type": "property",
      "resultType": "debian package version revision",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "debian package version revision"
    },
    "extrema of <debian package version revision>": {
      "key": "extrema of <debian package version revision>",
      "type": "property",
      "resultType": "( debian package version revision, debian package version revision )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "debian package version revision"
    },
    "<string> = <debian package version revision>": {
      "key": "<string> = <debian package version revision>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "debian package version revision"
    },
    "<string> <= <debian package version revision>": {
      "key": "<string> <= <debian package version revision>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "debian package version revision"
    },
    "<string> < <debian package version revision>": {
      "key": "<string> < <debian package version revision>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "debian package version revision"
    },
    "<debian package version revision> as string": {
      "key": "<debian package version revision> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debian package version revision",
      "phrase": "string"
    },
    "<debian package version revision> as debian package version revision": {
      "key": "<debian package version revision> as debian package version revision",
      "type": "cast",
      "resultType": "debian package version revision",
      "argType": "debian package version revision",
      "phrase": "debian package version revision"
    },
    "<debian package version revision> = <string>": {
      "key": "<debian package version revision> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version revision",
      "op": "=",
      "rightType": "string"
    },
    "<debian package version revision> = <debian package version revision>": {
      "key": "<debian package version revision> = <debian package version revision>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version revision",
      "op": "=",
      "rightType": "debian package version revision"
    },
    "<debian package version revision> <= <string>": {
      "key": "<debian package version revision> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version revision",
      "op": "<=",
      "rightType": "string"
    },
    "<debian package version revision> <= <debian package version revision>": {
      "key": "<debian package version revision> <= <debian package version revision>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version revision",
      "op": "<=",
      "rightType": "debian package version revision"
    },
    "<debian package version revision> < <string>": {
      "key": "<debian package version revision> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version revision",
      "op": "<",
      "rightType": "string"
    },
    "<debian package version revision> < <debian package version revision>": {
      "key": "<debian package version revision> < <debian package version revision>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version revision",
      "op": "<",
      "rightType": "debian package version revision"
    },
    "multiplicity of <debian package version epoch with multiplicity>": {
      "key": "multiplicity of <debian package version epoch with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "debian package version epoch with multiplicity"
    },
    "unique value of <debian package version epoch>": {
      "key": "unique value of <debian package version epoch>",
      "type": "property",
      "resultType": "debian package version epoch with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "debian package version epoch"
    },
    "minimum of <debian package version epoch>": {
      "key": "minimum of <debian package version epoch>",
      "type": "property",
      "resultType": "debian package version epoch",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "debian package version epoch"
    },
    "maximum of <debian package version epoch>": {
      "key": "maximum of <debian package version epoch>",
      "type": "property",
      "resultType": "debian package version epoch",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "debian package version epoch"
    },
    "extrema of <debian package version epoch>": {
      "key": "extrema of <debian package version epoch>",
      "type": "property",
      "resultType": "( debian package version epoch, debian package version epoch )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "debian package version epoch"
    },
    "<string> = <debian package version epoch>": {
      "key": "<string> = <debian package version epoch>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "debian package version epoch"
    },
    "<string> <= <debian package version epoch>": {
      "key": "<string> <= <debian package version epoch>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "debian package version epoch"
    },
    "<string> < <debian package version epoch>": {
      "key": "<string> < <debian package version epoch>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "debian package version epoch"
    },
    "<debian package version epoch> as string": {
      "key": "<debian package version epoch> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debian package version epoch",
      "phrase": "string"
    },
    "<debian package version epoch> as debian package version epoch": {
      "key": "<debian package version epoch> as debian package version epoch",
      "type": "cast",
      "resultType": "debian package version epoch",
      "argType": "debian package version epoch",
      "phrase": "debian package version epoch"
    },
    "<debian package version epoch> = <string>": {
      "key": "<debian package version epoch> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version epoch",
      "op": "=",
      "rightType": "string"
    },
    "<debian package version epoch> = <debian package version epoch>": {
      "key": "<debian package version epoch> = <debian package version epoch>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version epoch",
      "op": "=",
      "rightType": "debian package version epoch"
    },
    "<debian package version epoch> <= <string>": {
      "key": "<debian package version epoch> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version epoch",
      "op": "<=",
      "rightType": "string"
    },
    "<debian package version epoch> <= <debian package version epoch>": {
      "key": "<debian package version epoch> <= <debian package version epoch>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version epoch",
      "op": "<=",
      "rightType": "debian package version epoch"
    },
    "<debian package version epoch> < <string>": {
      "key": "<debian package version epoch> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version epoch",
      "op": "<",
      "rightType": "string"
    },
    "<debian package version epoch> < <debian package version epoch>": {
      "key": "<debian package version epoch> < <debian package version epoch>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version epoch",
      "op": "<",
      "rightType": "debian package version epoch"
    },
    "upstream of <debian package version>": {
      "key": "upstream of <debian package version>",
      "type": "property",
      "resultType": "debian package upstream version",
      "singularPhrase": "upstream",
      "pluralPhrase": "upstreams",
      "directObjectType": "debian package version"
    },
    "unique value of <debian package version>": {
      "key": "unique value of <debian package version>",
      "type": "property",
      "resultType": "debian package version with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "debian package version"
    },
    "revision of <debian package version>": {
      "key": "revision of <debian package version>",
      "type": "property",
      "resultType": "debian package version revision",
      "singularPhrase": "revision",
      "pluralPhrase": "revisions",
      "directObjectType": "debian package version"
    },
    "minimum of <debian package version>": {
      "key": "minimum of <debian package version>",
      "type": "property",
      "resultType": "debian package version",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "debian package version"
    },
    "maximum of <debian package version>": {
      "key": "maximum of <debian package version>",
      "type": "property",
      "resultType": "debian package version",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "debian package version"
    },
    "extrema of <debian package version>": {
      "key": "extrema of <debian package version>",
      "type": "property",
      "resultType": "( debian package version, debian package version )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "debian package version"
    },
    "epoch of <debian package version>": {
      "key": "epoch of <debian package version>",
      "type": "property",
      "resultType": "debian package version epoch",
      "singularPhrase": "epoch",
      "pluralPhrase": "epochs",
      "directObjectType": "debian package version"
    },
    "<string> = <debian package version>": {
      "key": "<string> = <debian package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "debian package version"
    },
    "<string> <= <debian package version>": {
      "key": "<string> <= <debian package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "debian package version"
    },
    "<string> < <debian package version>": {
      "key": "<string> < <debian package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "debian package version"
    },
    "<debian package version> as string": {
      "key": "<debian package version> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debian package version",
      "phrase": "string"
    },
    "<debian package version> as debian package version": {
      "key": "<debian package version> as debian package version",
      "type": "cast",
      "resultType": "debian package version",
      "argType": "debian package version",
      "phrase": "debian package version"
    },
    "<debian package version> = <string>": {
      "key": "<debian package version> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version",
      "op": "=",
      "rightType": "string"
    },
    "<debian package version> = <debian package version>": {
      "key": "<debian package version> = <debian package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version",
      "op": "=",
      "rightType": "debian package version"
    },
    "<debian package version> <= <string>": {
      "key": "<debian package version> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version",
      "op": "<=",
      "rightType": "string"
    },
    "<debian package version> <= <debian package version>": {
      "key": "<debian package version> <= <debian package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version",
      "op": "<=",
      "rightType": "debian package version"
    },
    "<debian package version> < <string>": {
      "key": "<debian package version> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version",
      "op": "<",
      "rightType": "string"
    },
    "<debian package version> < <debian package version>": {
      "key": "<debian package version> < <debian package version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package version",
      "op": "<",
      "rightType": "debian package version"
    },
    "multiplicity of <debian package upstream version with multiplicity>": {
      "key": "multiplicity of <debian package upstream version with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "debian package upstream version with multiplicity"
    },
    "unique value of <debian package upstream version>": {
      "key": "unique value of <debian package upstream version>",
      "type": "property",
      "resultType": "debian package upstream version with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "debian package upstream version"
    },
    "minimum of <debian package upstream version>": {
      "key": "minimum of <debian package upstream version>",
      "type": "property",
      "resultType": "debian package upstream version",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "debian package upstream version"
    },
    "maximum of <debian package upstream version>": {
      "key": "maximum of <debian package upstream version>",
      "type": "property",
      "resultType": "debian package upstream version",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "debian package upstream version"
    },
    "extrema of <debian package upstream version>": {
      "key": "extrema of <debian package upstream version>",
      "type": "property",
      "resultType": "( debian package upstream version, debian package upstream version )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "debian package upstream version"
    },
    "<string> = <debian package upstream version>": {
      "key": "<string> = <debian package upstream version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "debian package upstream version"
    },
    "<string> <= <debian package upstream version>": {
      "key": "<string> <= <debian package upstream version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "debian package upstream version"
    },
    "<string> < <debian package upstream version>": {
      "key": "<string> < <debian package upstream version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "debian package upstream version"
    },
    "<debian package upstream version> as string": {
      "key": "<debian package upstream version> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debian package upstream version",
      "phrase": "string"
    },
    "<debian package upstream version> as debian package version upstream": {
      "key": "<debian package upstream version> as debian package version upstream",
      "type": "cast",
      "resultType": "debian package upstream version",
      "argType": "debian package upstream version",
      "phrase": "debian package version upstream"
    },
    "<debian package upstream version> = <string>": {
      "key": "<debian package upstream version> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package upstream version",
      "op": "=",
      "rightType": "string"
    },
    "<debian package upstream version> = <debian package upstream version>": {
      "key": "<debian package upstream version> = <debian package upstream version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package upstream version",
      "op": "=",
      "rightType": "debian package upstream version"
    },
    "<debian package upstream version> <= <string>": {
      "key": "<debian package upstream version> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package upstream version",
      "op": "<=",
      "rightType": "string"
    },
    "<debian package upstream version> <= <debian package upstream version>": {
      "key": "<debian package upstream version> <= <debian package upstream version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package upstream version",
      "op": "<=",
      "rightType": "debian package upstream version"
    },
    "<debian package upstream version> < <string>": {
      "key": "<debian package upstream version> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package upstream version",
      "op": "<",
      "rightType": "string"
    },
    "<debian package upstream version> < <debian package upstream version>": {
      "key": "<debian package upstream version> < <debian package upstream version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "debian package upstream version",
      "op": "<",
      "rightType": "debian package upstream version"
    },
    "pkg version of <debian base package>": {
      "key": "pkg version of <debian base package>",
      "type": "property",
      "resultType": "debianpkg version",
      "singularPhrase": "pkg version",
      "pluralPhrase": "pkg versions",
      "directObjectType": "debian base package"
    },
    "name of <debian base package>": {
      "key": "name of <debian base package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "debian base package"
    },
    "installed version of <debian base package>": {
      "key": "installed version of <debian base package>",
      "type": "property",
      "resultType": "debianpkg version",
      "singularPhrase": "installed version",
      "pluralPhrase": "installed versions",
      "directObjectType": "debian base package"
    },
    "currently installed of <debian base package>": {
      "key": "currently installed of <debian base package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "currently installed",
      "pluralPhrase": "currently installeds",
      "directObjectType": "debian base package"
    },
    "<debian base package> as string": {
      "key": "<debian base package> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debian base package",
      "phrase": "string"
    },
    "brand of <client>": {
      "key": "brand of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "brand",
      "pluralPhrase": "brands",
      "directObjectType": "client"
    },
    "type of <volume>": {
      "key": "type of <volume>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "volume"
    },
    "active directory user of <user>": {
      "key": "active directory user of <user>",
      "type": "property",
      "resultType": "active directory local user",
      "singularPhrase": "active directory user",
      "pluralPhrase": "active directory users",
      "directObjectType": "user"
    },
    "last system interval in standby state of <power history>": {
      "key": "last system interval in standby state of <power history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "last system interval in standby state",
      "pluralPhrase": "last system intervals in standby state",
      "directObjectType": "power history"
    },
    "last system interval in off state of <power history>": {
      "key": "last system interval in off state of <power history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "last system interval in off state",
      "pluralPhrase": "last system intervals in off state",
      "directObjectType": "power history"
    },
    "last system interval in logged off state of <power history>": {
      "key": "last system interval in logged off state of <power history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "last system interval in logged off state",
      "pluralPhrase": "last system intervals in logged off state",
      "directObjectType": "power history"
    },
    "last system interval in idle state of <power history>": {
      "key": "last system interval in idle state of <power history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "last system interval in idle state",
      "pluralPhrase": "last system intervals in idle state",
      "directObjectType": "power history"
    },
    "last system interval in active state of <power history>": {
      "key": "last system interval in active state of <power history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "last system interval in active state",
      "pluralPhrase": "last system intervals in active state",
      "directObjectType": "power history"
    },
    "last system interval in <power state> of <power history>": {
      "key": "last system interval in <power state> of <power history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "last system interval in",
      "pluralPhrase": "last system intervals in",
      "indexType": "power state",
      "directObjectType": "power history"
    },
    "last monitor interval in monitor on state of <power history>": {
      "key": "last monitor interval in monitor on state of <power history>",
      "type": "property",
      "resultType": "monitor power interval",
      "singularPhrase": "last monitor interval in monitor on state",
      "pluralPhrase": "last monitor intervals in monitor on state",
      "directObjectType": "power history"
    },
    "last monitor interval in monitor off state of <power history>": {
      "key": "last monitor interval in monitor off state of <power history>",
      "type": "property",
      "resultType": "monitor power interval",
      "singularPhrase": "last monitor interval in monitor off state",
      "pluralPhrase": "last monitor intervals in monitor off state",
      "directObjectType": "power history"
    },
    "last monitor interval in <power state> of <power history>": {
      "key": "last monitor interval in <power state> of <power history>",
      "type": "property",
      "resultType": "monitor power interval",
      "singularPhrase": "last monitor interval in",
      "pluralPhrase": "last monitor intervals in",
      "indexType": "power state",
      "directObjectType": "power history"
    },
    "user of <logged on user>": {
      "key": "user of <logged on user>",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "user",
      "pluralPhrase": "users",
      "directObjectType": "logged on user"
    },
    "array of <file>": {
      "key": "array of <file>",
      "type": "property",
      "resultType": "array",
      "singularPhrase": "array",
      "pluralPhrase": "arrays",
      "directObjectType": "file"
    },
    "logged on user of <active directory server>": {
      "key": "logged on user of <active directory server>",
      "type": "property",
      "resultType": "active directory local user",
      "singularPhrase": "logged on user",
      "pluralPhrase": "logged on users",
      "directObjectType": "active directory server"
    },
    "logged on user <string> of <active directory server>": {
      "key": "logged on user <string> of <active directory server>",
      "type": "property",
      "resultType": "active directory local user",
      "singularPhrase": "logged on user",
      "pluralPhrase": "logged on users",
      "indexType": "string",
      "directObjectType": "active directory server"
    },
    "local user of <active directory server>": {
      "key": "local user of <active directory server>",
      "type": "property",
      "resultType": "active directory local user",
      "singularPhrase": "local user",
      "pluralPhrase": "local users",
      "directObjectType": "active directory server"
    },
    "local user <string> of <active directory server>": {
      "key": "local user <string> of <active directory server>",
      "type": "property",
      "resultType": "active directory local user",
      "singularPhrase": "local user",
      "pluralPhrase": "local users",
      "indexType": "string",
      "directObjectType": "active directory server"
    },
    "sample time of <active directory local user>": {
      "key": "sample time of <active directory local user>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "sample time",
      "pluralPhrase": "sample times",
      "directObjectType": "active directory local user"
    },
    "name of <active directory local user>": {
      "key": "name of <active directory local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "active directory local user"
    },
    "groups error message of <active directory local user>": {
      "key": "groups error message of <active directory local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "groups error message",
      "pluralPhrase": "groups error messages",
      "directObjectType": "active directory local user"
    },
    "group of <active directory local user>": {
      "key": "group of <active directory local user>",
      "type": "property",
      "resultType": "active directory group",
      "singularPhrase": "group",
      "pluralPhrase": "groups",
      "directObjectType": "active directory local user"
    },
    "group <string> of <active directory local user>": {
      "key": "group <string> of <active directory local user>",
      "type": "property",
      "resultType": "active directory group",
      "singularPhrase": "group",
      "pluralPhrase": "groups",
      "indexType": "string",
      "directObjectType": "active directory local user"
    },
    "distinguished name of <active directory local user>": {
      "key": "distinguished name of <active directory local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "distinguished name",
      "pluralPhrase": "distinguished names",
      "directObjectType": "active directory local user"
    },
    "distinguished name error message of <active directory local user>": {
      "key": "distinguished name error message of <active directory local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "distinguished name error message",
      "pluralPhrase": "distinguished name error messages",
      "directObjectType": "active directory local user"
    },
    "groups error message of <active directory local computer>": {
      "key": "groups error message of <active directory local computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "groups error message",
      "pluralPhrase": "groups error messages",
      "directObjectType": "active directory local computer"
    },
    "group of <active directory local computer>": {
      "key": "group of <active directory local computer>",
      "type": "property",
      "resultType": "active directory group",
      "singularPhrase": "group",
      "pluralPhrase": "groups",
      "directObjectType": "active directory local computer"
    },
    "group <string> of <active directory local computer>": {
      "key": "group <string> of <active directory local computer>",
      "type": "property",
      "resultType": "active directory group",
      "singularPhrase": "group",
      "pluralPhrase": "groups",
      "indexType": "string",
      "directObjectType": "active directory local computer"
    },
    "sid of <active directory group>": {
      "key": "sid of <active directory group>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "sid",
      "pluralPhrase": "sids",
      "directObjectType": "active directory group"
    },
    "sample time of <active directory group>": {
      "key": "sample time of <active directory group>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "sample time",
      "pluralPhrase": "sample times",
      "directObjectType": "active directory group"
    },
    "name of <active directory group>": {
      "key": "name of <active directory group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "active directory group"
    },
    "distinguished name of <active directory group>": {
      "key": "distinguished name of <active directory group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "distinguished name",
      "pluralPhrase": "distinguished names",
      "directObjectType": "active directory group"
    },
    "distinguished name error message of <active directory group>": {
      "key": "distinguished name error message of <active directory group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "distinguished name error message",
      "pluralPhrase": "distinguished name error messages",
      "directObjectType": "active directory group"
    },
    "vm name of <processor>": {
      "key": "vm name of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "vm name",
      "pluralPhrase": "vm names",
      "directObjectType": "processor"
    },
    "vm cpus total of <processor>": {
      "key": "vm cpus total of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "vm cpus total",
      "pluralPhrase": "vm cpus totals",
      "directObjectType": "processor"
    },
    "vm cpus standby of <processor>": {
      "key": "vm cpus standby of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "vm cpus standby",
      "pluralPhrase": "vm cpus standbys",
      "directObjectType": "processor"
    },
    "vm cpus reserved of <processor>": {
      "key": "vm cpus reserved of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "vm cpus reserved",
      "pluralPhrase": "vm cpus reserveds",
      "directObjectType": "processor"
    },
    "vm cpus configured of <processor>": {
      "key": "vm cpus configured of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "vm cpus configured",
      "pluralPhrase": "vm cpus configureds",
      "directObjectType": "processor"
    },
    "vm control program of <processor>": {
      "key": "vm control program of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "vm control program",
      "pluralPhrase": "vm control programs",
      "directObjectType": "processor"
    },
    "vm adjustment of <processor>": {
      "key": "vm adjustment of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "vm adjustment",
      "pluralPhrase": "vm adjustments",
      "directObjectType": "processor"
    },
    "sequence code of <processor>": {
      "key": "sequence code of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sequence code",
      "pluralPhrase": "sequence codes",
      "directObjectType": "processor"
    },
    "machine serial number of <processor>": {
      "key": "machine serial number of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "machine serial number",
      "pluralPhrase": "machine serial numbers",
      "directObjectType": "processor"
    },
    "lpar number of <processor>": {
      "key": "lpar number of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lpar number",
      "pluralPhrase": "lpar numbers",
      "directObjectType": "processor"
    },
    "lpar name of <processor>": {
      "key": "lpar name of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "lpar name",
      "pluralPhrase": "lpar names",
      "directObjectType": "processor"
    },
    "lpar cpus total of <processor>": {
      "key": "lpar cpus total of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lpar cpus total",
      "pluralPhrase": "lpar cpus totals",
      "directObjectType": "processor"
    },
    "lpar cpus standby of <processor>": {
      "key": "lpar cpus standby of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lpar cpus standby",
      "pluralPhrase": "lpar cpus standbys",
      "directObjectType": "processor"
    },
    "lpar cpus shared of <processor>": {
      "key": "lpar cpus shared of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lpar cpus shared",
      "pluralPhrase": "lpar cpus shareds",
      "directObjectType": "processor"
    },
    "lpar cpus reserved of <processor>": {
      "key": "lpar cpus reserved of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lpar cpus reserved",
      "pluralPhrase": "lpar cpus reserveds",
      "directObjectType": "processor"
    },
    "lpar cpus dedicated of <processor>": {
      "key": "lpar cpus dedicated of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lpar cpus dedicated",
      "pluralPhrase": "lpar cpus dedicateds",
      "directObjectType": "processor"
    },
    "lpar cpus configured of <processor>": {
      "key": "lpar cpus configured of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lpar cpus configured",
      "pluralPhrase": "lpar cpus configureds",
      "directObjectType": "processor"
    },
    "lpar characteristics of <processor>": {
      "key": "lpar characteristics of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "lpar characteristics",
      "pluralPhrase": "lpar characteristicss",
      "directObjectType": "processor"
    },
    "lpar adjustment of <processor>": {
      "key": "lpar adjustment of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "lpar adjustment",
      "pluralPhrase": "lpar adjustments",
      "directObjectType": "processor"
    },
    "cpus total of <processor>": {
      "key": "cpus total of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cpus total",
      "pluralPhrase": "cpus totals",
      "directObjectType": "processor"
    },
    "cpus standby of <processor>": {
      "key": "cpus standby of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cpus standby",
      "pluralPhrase": "cpus standbys",
      "directObjectType": "processor"
    },
    "cpus reserved of <processor>": {
      "key": "cpus reserved of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cpus reserved",
      "pluralPhrase": "cpus reserveds",
      "directObjectType": "processor"
    },
    "cpus configured of <processor>": {
      "key": "cpus configured of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "cpus configured",
      "pluralPhrase": "cpus configureds",
      "directObjectType": "processor"
    },
    "capability of <processor>": {
      "key": "capability of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "capability",
      "pluralPhrase": "capabilitys",
      "directObjectType": "processor"
    },
    "adjustment <integer> of <processor>": {
      "key": "adjustment <integer> of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "adjustment",
      "pluralPhrase": "adjustments",
      "indexType": "integer",
      "directObjectType": "processor"
    },
    "win32 service": {
      "key": "win32 service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "win32 service",
      "pluralPhrase": "win32 services"
    },
    "win32 running service": {
      "key": "win32 running service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "win32 running service",
      "pluralPhrase": "win32 running services"
    },
    "driver service": {
      "key": "driver service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "driver service",
      "pluralPhrase": "driver services"
    },
    "driver running service": {
      "key": "driver running service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "driver running service",
      "pluralPhrase": "driver running services"
    },
    "all service": {
      "key": "all service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "all service",
      "pluralPhrase": "all services"
    },
    "all running service": {
      "key": "all running service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "all running service",
      "pluralPhrase": "all running services"
    },
    "workstation trust account flag of <user>": {
      "key": "workstation trust account flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "workstation trust account flag",
      "pluralPhrase": "workstation trust account flags",
      "directObjectType": "user"
    },
    "user privilege of <user>": {
      "key": "user privilege of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "user privilege",
      "pluralPhrase": "user privileges",
      "directObjectType": "user"
    },
    "user id of <user>": {
      "key": "user id of <user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "user id",
      "pluralPhrase": "user ids",
      "directObjectType": "user"
    },
    "user comment of <user>": {
      "key": "user comment of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "user comment",
      "pluralPhrase": "user comments",
      "directObjectType": "user"
    },
    "temporary duplicate account flag of <user>": {
      "key": "temporary duplicate account flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "temporary duplicate account flag",
      "pluralPhrase": "temporary duplicate account flags",
      "directObjectType": "user"
    },
    "server trust account flag of <user>": {
      "key": "server trust account flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "server trust account flag",
      "pluralPhrase": "server trust account flags",
      "directObjectType": "user"
    },
    "server operator flag of <user>": {
      "key": "server operator flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "server operator flag",
      "pluralPhrase": "server operator flags",
      "directObjectType": "user"
    },
    "script flag of <user>": {
      "key": "script flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "script flag",
      "pluralPhrase": "script flags",
      "directObjectType": "user"
    },
    "profile folder of <user>": {
      "key": "profile folder of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "profile folder",
      "pluralPhrase": "profile folders",
      "directObjectType": "user"
    },
    "print operator flag of <user>": {
      "key": "print operator flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "print operator flag",
      "pluralPhrase": "print operator flags",
      "directObjectType": "user"
    },
    "password expired of <user>": {
      "key": "password expired of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "password expired",
      "pluralPhrase": "passwords expired",
      "directObjectType": "user"
    },
    "password expiration disabled flag of <user>": {
      "key": "password expiration disabled flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "password expiration disabled flag",
      "pluralPhrase": "password expiration disabled flags",
      "directObjectType": "user"
    },
    "password change disabled flag of <user>": {
      "key": "password change disabled flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "password change disabled flag",
      "pluralPhrase": "password change disabled flags",
      "directObjectType": "user"
    },
    "password age of <user>": {
      "key": "password age of <user>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "password age",
      "pluralPhrase": "password ages",
      "directObjectType": "user"
    },
    "normal account flag of <user>": {
      "key": "normal account flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "normal account flag",
      "pluralPhrase": "normal account flags",
      "directObjectType": "user"
    },
    "no password required flag of <user>": {
      "key": "no password required flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "no password required flag",
      "pluralPhrase": "no password required flags",
      "directObjectType": "user"
    },
    "maximum storage of <user>": {
      "key": "maximum storage of <user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "maximum storage",
      "pluralPhrase": "maximum storages",
      "directObjectType": "user"
    },
    "logon server of <user>": {
      "key": "logon server of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "logon server",
      "pluralPhrase": "logon servers",
      "directObjectType": "user"
    },
    "logon script of <user>": {
      "key": "logon script of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "logon script",
      "pluralPhrase": "logon scripts",
      "directObjectType": "user"
    },
    "logon count of <user>": {
      "key": "logon count of <user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "logon count",
      "pluralPhrase": "logon counts",
      "directObjectType": "user"
    },
    "logged on user of <user>": {
      "key": "logged on user of <user>",
      "type": "property",
      "resultType": "logged on user",
      "singularPhrase": "logged on user",
      "pluralPhrase": "logged on users",
      "directObjectType": "user"
    },
    "locked out flag of <user>": {
      "key": "locked out flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "locked out flag",
      "pluralPhrase": "locked out flags",
      "directObjectType": "user"
    },
    "last logon of <user>": {
      "key": "last logon of <user>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last logon",
      "pluralPhrase": "last logons",
      "directObjectType": "user"
    },
    "last logoff of <user>": {
      "key": "last logoff of <user>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last logoff",
      "pluralPhrase": "last logoffs",
      "directObjectType": "user"
    },
    "interdomain trust account flag of <user>": {
      "key": "interdomain trust account flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "interdomain trust account flag",
      "pluralPhrase": "interdomain trust account flags",
      "directObjectType": "user"
    },
    "home directory required flag of <user>": {
      "key": "home directory required flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "home directory required flag",
      "pluralPhrase": "home directory required flags",
      "directObjectType": "user"
    },
    "home directory drive of <user>": {
      "key": "home directory drive of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "home directory drive",
      "pluralPhrase": "home directory drives",
      "directObjectType": "user"
    },
    "guest privilege of <user>": {
      "key": "guest privilege of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "guest privilege",
      "pluralPhrase": "guest privileges",
      "directObjectType": "user"
    },
    "full name of <user>": {
      "key": "full name of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "full name",
      "pluralPhrase": "full names",
      "directObjectType": "user"
    },
    "country code of <user>": {
      "key": "country code of <user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "country code",
      "pluralPhrase": "country codes",
      "directObjectType": "user"
    },
    "communications operator flag of <user>": {
      "key": "communications operator flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "communications operator flag",
      "pluralPhrase": "communications operator flags",
      "directObjectType": "user"
    },
    "comment of <user>": {
      "key": "comment of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "comment",
      "pluralPhrase": "comments",
      "directObjectType": "user"
    },
    "code page of <user>": {
      "key": "code page of <user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "code page",
      "pluralPhrase": "code pages",
      "directObjectType": "user"
    },
    "bad password count of <user>": {
      "key": "bad password count of <user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "bad password count",
      "pluralPhrase": "bad password counts",
      "directObjectType": "user"
    },
    "application parameter string of <user>": {
      "key": "application parameter string of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "application parameter string",
      "pluralPhrase": "application parameter strings",
      "directObjectType": "user"
    },
    "allowed workstations string of <user>": {
      "key": "allowed workstations string of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "allowed workstations string",
      "pluralPhrase": "allowed workstations strings",
      "directObjectType": "user"
    },
    "admin privilege of <user>": {
      "key": "admin privilege of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "admin privilege",
      "pluralPhrase": "admin privileges",
      "directObjectType": "user"
    },
    "accounts operator flag of <user>": {
      "key": "accounts operator flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "accounts operator flag",
      "pluralPhrase": "accounts operator flags",
      "directObjectType": "user"
    },
    "account expiration of <user>": {
      "key": "account expiration of <user>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "account expiration",
      "pluralPhrase": "account expirations",
      "directObjectType": "user"
    },
    "account disabled flag of <user>": {
      "key": "account disabled flag of <user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "account disabled flag",
      "pluralPhrase": "account disabled flags",
      "directObjectType": "user"
    },
    "expand x64 environment string of <string>": {
      "key": "expand x64 environment string of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "expand x64 environment string",
      "pluralPhrase": "expand x64 environment strings",
      "directObjectType": "string"
    },
    "win32 type of <service>": {
      "key": "win32 type of <service>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "win32 type",
      "pluralPhrase": "win32 types",
      "directObjectType": "service"
    },
    "driver type of <service>": {
      "key": "driver type of <service>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "driver type",
      "pluralPhrase": "driver types",
      "directObjectType": "service"
    },
    "x64 variable of <environment>": {
      "key": "x64 variable of <environment>",
      "type": "property",
      "resultType": "environment variable",
      "singularPhrase": "x64 variable",
      "pluralPhrase": "x64 variables",
      "directObjectType": "environment"
    },
    "x64 variable <string> of <environment>": {
      "key": "x64 variable <string> of <environment>",
      "type": "property",
      "resultType": "environment variable",
      "singularPhrase": "x64 variable",
      "pluralPhrase": "x64 variables",
      "indexType": "string",
      "directObjectType": "environment"
    },
    "bes role": {
      "key": "bes role",
      "type": "property",
      "resultType": "bes role",
      "singularPhrase": "bes role",
      "pluralPhrase": "bes roles"
    },
    "bes role set": {
      "key": "bes role set",
      "type": "property",
      "resultType": "bes role set",
      "singularPhrase": "bes role set",
      "pluralPhrase": "bes role sets"
    },
    "bes ldap directory": {
      "key": "bes ldap directory",
      "type": "property",
      "resultType": "bes ldap directory",
      "singularPhrase": "bes ldap directory",
      "pluralPhrase": "bes ldap directories"
    },
    "bes ldap directory set": {
      "key": "bes ldap directory set",
      "type": "property",
      "resultType": "bes ldap directory set",
      "singularPhrase": "bes ldap directory set",
      "pluralPhrase": "bes ldap directory sets"
    },
    "base64 encode <string>": {
      "key": "base64 encode <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "base64 encode",
      "pluralPhrase": "base64 encodes",
      "indexType": "string"
    },
    "base64 decode <string>": {
      "key": "base64 decode <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "base64 decode",
      "pluralPhrase": "base64 decodes",
      "indexType": "string"
    },
    "sha1 of <string>": {
      "key": "sha1 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha1",
      "pluralPhrase": "sha1s",
      "directObjectType": "string"
    },
    "role set of <bes user>": {
      "key": "role set of <bes user>",
      "type": "property",
      "resultType": "bes role set",
      "singularPhrase": "role set",
      "pluralPhrase": "role sets",
      "directObjectType": "bes user"
    },
    "role of <bes user>": {
      "key": "role of <bes user>",
      "type": "property",
      "resultType": "bes role",
      "singularPhrase": "role",
      "pluralPhrase": "roles",
      "directObjectType": "bes user"
    },
    "masthead operator name of <bes user>": {
      "key": "masthead operator name of <bes user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "masthead operator name",
      "pluralPhrase": "masthead operator names",
      "directObjectType": "bes user"
    },
    "multiplicity of <bes site file with multiplicity>": {
      "key": "multiplicity of <bes site file with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes site file with multiplicity"
    },
    "union of <bes site file set>": {
      "key": "union of <bes site file set>",
      "type": "property",
      "resultType": "bes site file set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes site file set"
    },
    "size of <bes site file set>": {
      "key": "size of <bes site file set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes site file set"
    },
    "intersection of <bes site file set>": {
      "key": "intersection of <bes site file set>",
      "type": "property",
      "resultType": "bes site file set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes site file set"
    },
    "element of <bes site file set>": {
      "key": "element of <bes site file set>",
      "type": "property",
      "resultType": "bes site file",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes site file set"
    },
    "<bes site file set> contains <bes site file set>": {
      "key": "<bes site file set> contains <bes site file set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes site file set",
      "op": "contains",
      "rightType": "bes site file set"
    },
    "<bes site file set> = <bes site file set>": {
      "key": "<bes site file set> = <bes site file set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes site file set",
      "op": "=",
      "rightType": "bes site file set"
    },
    "<bes site file set> - <bes site file set>": {
      "key": "<bes site file set> - <bes site file set>",
      "type": "binaryOp",
      "resultType": "bes site file set",
      "leftType": "bes site file set",
      "op": "-",
      "rightType": "bes site file set"
    },
    "<bes site file set> + <bes site file set>": {
      "key": "<bes site file set> + <bes site file set>",
      "type": "binaryOp",
      "resultType": "bes site file set",
      "leftType": "bes site file set",
      "op": "+",
      "rightType": "bes site file set"
    },
    "<bes site file set> * <bes site file set>": {
      "key": "<bes site file set> * <bes site file set>",
      "type": "binaryOp",
      "resultType": "bes site file set",
      "leftType": "bes site file set",
      "op": "*",
      "rightType": "bes site file set"
    },
    "unique value of <bes site file>": {
      "key": "unique value of <bes site file>",
      "type": "property",
      "resultType": "bes site file with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes site file"
    },
    "set of <bes site file>": {
      "key": "set of <bes site file>",
      "type": "property",
      "resultType": "bes site file set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes site file"
    },
    "id of <bes site file>": {
      "key": "id of <bes site file>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes site file"
    },
    "<bes site file> = <bes site file>": {
      "key": "<bes site file> = <bes site file>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes site file",
      "op": "=",
      "rightType": "bes site file"
    },
    "<bes site file set> contains <bes site file>": {
      "key": "<bes site file set> contains <bes site file>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes site file set",
      "op": "contains",
      "rightType": "bes site file"
    },
    "site level relevance of <bes site>": {
      "key": "site level relevance of <bes site>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "site level relevance",
      "pluralPhrase": "site level relevances",
      "directObjectType": "bes site"
    },
    "site file set of <bes site>": {
      "key": "site file set of <bes site>",
      "type": "property",
      "resultType": "bes site file set",
      "singularPhrase": "site file set",
      "pluralPhrase": "site files sets",
      "directObjectType": "bes site"
    },
    "site file of <bes site>": {
      "key": "site file of <bes site>",
      "type": "property",
      "resultType": "bes site file",
      "singularPhrase": "site file",
      "pluralPhrase": "site files",
      "directObjectType": "bes site"
    },
    "operator of <bes site>": {
      "key": "operator of <bes site>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "operator",
      "pluralPhrase": "operators",
      "directObjectType": "bes site"
    },
    "action set of <bes site>": {
      "key": "action set of <bes site>",
      "type": "property",
      "resultType": "bes action set",
      "singularPhrase": "action set",
      "pluralPhrase": "action sets",
      "directObjectType": "bes site"
    },
    "action of <bes site>": {
      "key": "action of <bes site>",
      "type": "property",
      "resultType": "bes action",
      "singularPhrase": "action",
      "pluralPhrase": "actions",
      "directObjectType": "bes site"
    },
    "multiplicity of <bes role with multiplicity>": {
      "key": "multiplicity of <bes role with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes role with multiplicity"
    },
    "union of <bes role set>": {
      "key": "union of <bes role set>",
      "type": "property",
      "resultType": "bes role set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes role set"
    },
    "size of <bes role set>": {
      "key": "size of <bes role set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes role set"
    },
    "intersection of <bes role set>": {
      "key": "intersection of <bes role set>",
      "type": "property",
      "resultType": "bes role set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes role set"
    },
    "element of <bes role set>": {
      "key": "element of <bes role set>",
      "type": "property",
      "resultType": "bes role",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes role set"
    },
    "<bes role set> contains <bes role set>": {
      "key": "<bes role set> contains <bes role set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes role set",
      "op": "contains",
      "rightType": "bes role set"
    },
    "<bes role set> = <bes role set>": {
      "key": "<bes role set> = <bes role set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes role set",
      "op": "=",
      "rightType": "bes role set"
    },
    "<bes role set> - <bes role set>": {
      "key": "<bes role set> - <bes role set>",
      "type": "binaryOp",
      "resultType": "bes role set",
      "leftType": "bes role set",
      "op": "-",
      "rightType": "bes role set"
    },
    "<bes role set> + <bes role set>": {
      "key": "<bes role set> + <bes role set>",
      "type": "binaryOp",
      "resultType": "bes role set",
      "leftType": "bes role set",
      "op": "+",
      "rightType": "bes role set"
    },
    "<bes role set> * <bes role set>": {
      "key": "<bes role set> * <bes role set>",
      "type": "binaryOp",
      "resultType": "bes role set",
      "leftType": "bes role set",
      "op": "*",
      "rightType": "bes role set"
    },
    "user set of <bes role>": {
      "key": "user set of <bes role>",
      "type": "property",
      "resultType": "bes user set",
      "singularPhrase": "user set",
      "pluralPhrase": "user sets",
      "directObjectType": "bes role"
    },
    "user of <bes role>": {
      "key": "user of <bes role>",
      "type": "property",
      "resultType": "bes user",
      "singularPhrase": "user",
      "pluralPhrase": "users",
      "directObjectType": "bes role"
    },
    "unmanagedasset privilege shownone flag of <bes role>": {
      "key": "unmanagedasset privilege shownone flag of <bes role>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unmanagedasset privilege shownone flag",
      "pluralPhrase": "unmanagedasset privilege shownone flags",
      "directObjectType": "bes role"
    },
    "unmanagedasset privilege showall flag of <bes role>": {
      "key": "unmanagedasset privilege showall flag of <bes role>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unmanagedasset privilege showall flag",
      "pluralPhrase": "unmanagedasset privilege showall flags",
      "directObjectType": "bes role"
    },
    "unmanagedasset privilege scanpoint flag of <bes role>": {
      "key": "unmanagedasset privilege scanpoint flag of <bes role>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unmanagedasset privilege scanpoint flag",
      "pluralPhrase": "unmanagedasset privilege scanpoint flags",
      "directObjectType": "bes role"
    },
    "unique value of <bes role>": {
      "key": "unique value of <bes role>",
      "type": "property",
      "resultType": "bes role with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes role"
    },
    "set of <bes role>": {
      "key": "set of <bes role>",
      "type": "property",
      "resultType": "bes role set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes role"
    },
    "name of <bes role>": {
      "key": "name of <bes role>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes role"
    },
    "master flag of <bes role>": {
      "key": "master flag of <bes role>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "master flag",
      "pluralPhrase": "master flags",
      "directObjectType": "bes role"
    },
    "<bes role> = <bes role>": {
      "key": "<bes role> = <bes role>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes role",
      "op": "=",
      "rightType": "bes role"
    },
    "<bes role set> contains <bes role>": {
      "key": "<bes role set> contains <bes role>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes role set",
      "op": "contains",
      "rightType": "bes role"
    },
    "rvu count of <bes product>": {
      "key": "rvu count of <bes product>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "rvu count",
      "pluralPhrase": "rvu counts",
      "directObjectType": "bes product"
    },
    "eula accepted of <bes product>": {
      "key": "eula accepted of <bes product>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "eula accepted",
      "pluralPhrase": "eulas accepted",
      "directObjectType": "bes product"
    },
    "client device count of <bes product>": {
      "key": "client device count of <bes product>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "client device count",
      "pluralPhrase": "client device counts",
      "directObjectType": "bes product"
    },
    "multiplicity of <bes ldap directory with multiplicity>": {
      "key": "multiplicity of <bes ldap directory with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "bes ldap directory with multiplicity"
    },
    "union of <bes ldap directory set>": {
      "key": "union of <bes ldap directory set>",
      "type": "property",
      "resultType": "bes ldap directory set",
      "singularPhrase": "union",
      "pluralPhrase": "unions",
      "directObjectType": "bes ldap directory set"
    },
    "size of <bes ldap directory set>": {
      "key": "size of <bes ldap directory set>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "bes ldap directory set"
    },
    "intersection of <bes ldap directory set>": {
      "key": "intersection of <bes ldap directory set>",
      "type": "property",
      "resultType": "bes ldap directory set",
      "singularPhrase": "intersection",
      "pluralPhrase": "intersections",
      "directObjectType": "bes ldap directory set"
    },
    "element of <bes ldap directory set>": {
      "key": "element of <bes ldap directory set>",
      "type": "property",
      "resultType": "bes ldap directory",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "bes ldap directory set"
    },
    "<bes ldap directory set> contains <bes ldap directory set>": {
      "key": "<bes ldap directory set> contains <bes ldap directory set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes ldap directory set",
      "op": "contains",
      "rightType": "bes ldap directory set"
    },
    "<bes ldap directory set> = <bes ldap directory set>": {
      "key": "<bes ldap directory set> = <bes ldap directory set>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes ldap directory set",
      "op": "=",
      "rightType": "bes ldap directory set"
    },
    "<bes ldap directory set> - <bes ldap directory set>": {
      "key": "<bes ldap directory set> - <bes ldap directory set>",
      "type": "binaryOp",
      "resultType": "bes ldap directory set",
      "leftType": "bes ldap directory set",
      "op": "-",
      "rightType": "bes ldap directory set"
    },
    "<bes ldap directory set> + <bes ldap directory set>": {
      "key": "<bes ldap directory set> + <bes ldap directory set>",
      "type": "binaryOp",
      "resultType": "bes ldap directory set",
      "leftType": "bes ldap directory set",
      "op": "+",
      "rightType": "bes ldap directory set"
    },
    "<bes ldap directory set> * <bes ldap directory set>": {
      "key": "<bes ldap directory set> * <bes ldap directory set>",
      "type": "binaryOp",
      "resultType": "bes ldap directory set",
      "leftType": "bes ldap directory set",
      "op": "*",
      "rightType": "bes ldap directory set"
    },
    "unique value of <bes ldap directory>": {
      "key": "unique value of <bes ldap directory>",
      "type": "property",
      "resultType": "bes ldap directory with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "bes ldap directory"
    },
    "set of <bes ldap directory>": {
      "key": "set of <bes ldap directory>",
      "type": "property",
      "resultType": "bes ldap directory set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "directObjectType": "bes ldap directory"
    },
    "<bes ldap directory> = <bes ldap directory>": {
      "key": "<bes ldap directory> = <bes ldap directory>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes ldap directory",
      "op": "=",
      "rightType": "bes ldap directory"
    },
    "<bes ldap directory set> contains <bes ldap directory>": {
      "key": "<bes ldap directory set> contains <bes ldap directory>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "bes ldap directory set",
      "op": "contains",
      "rightType": "bes ldap directory"
    },
    "device type of <bes computer>": {
      "key": "device type of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device type",
      "pluralPhrase": "device types",
      "directObjectType": "bes computer"
    },
    "agent version of <bes computer>": {
      "key": "agent version of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "agent version",
      "pluralPhrase": "agent versions",
      "directObjectType": "bes computer"
    },
    "agent type of <bes computer>": {
      "key": "agent type of <bes computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "agent type",
      "pluralPhrase": "agent types",
      "directObjectType": "bes computer"
    },
    "ipv4 routing table": {
      "key": "ipv4 routing table",
      "type": "property",
      "resultType": "ipv4 routing table",
      "singularPhrase": "ipv4 routing table",
      "pluralPhrase": "ipv4 routing tables"
    },
    "in proxy agent context": {
      "key": "in proxy agent context",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "in proxy agent context",
      "pluralPhrase": "in proxy agent contexts"
    },
    "in agent context": {
      "key": "in agent context",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "in agent context",
      "pluralPhrase": "in agent contexts"
    },
    "grub config file": {
      "key": "grub config file",
      "type": "property",
      "resultType": "grub config file",
      "singularPhrase": "grub config file",
      "pluralPhrase": "grub config files"
    },
    "grub config file <string>": {
      "key": "grub config file <string>",
      "type": "property",
      "resultType": "grub config file",
      "singularPhrase": "grub config file",
      "pluralPhrase": "grub config files",
      "indexType": "string"
    },
    "cpupackage": {
      "key": "cpupackage",
      "type": "property",
      "resultType": "cpupackage",
      "singularPhrase": "cpupackage",
      "pluralPhrase": "cpupackages"
    },
    "evaluated of <site>": {
      "key": "evaluated of <site>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "evaluated",
      "pluralPhrase": "evaluateds",
      "directObjectType": "site"
    },
    "running of <service>": {
      "key": "running of <service>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "running",
      "pluralPhrase": "runnings",
      "directObjectType": "service"
    },
    "machine of <operating system>": {
      "key": "machine of <operating system>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "machine",
      "pluralPhrase": "machines",
      "directObjectType": "operating system"
    },
    "tty of <logged on user>": {
      "key": "tty of <logged on user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "tty",
      "pluralPhrase": "ttys",
      "directObjectType": "logged on user"
    },
    "process id of <logged on user>": {
      "key": "process id of <logged on user>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "process id",
      "pluralPhrase": "process ids",
      "directObjectType": "logged on user"
    },
    "route of <ipv4 routing table>": {
      "key": "route of <ipv4 routing table>",
      "type": "property",
      "resultType": "ipv4 route",
      "singularPhrase": "route",
      "pluralPhrase": "routes",
      "directObjectType": "ipv4 routing table"
    },
    "window of <ipv4 route>": {
      "key": "window of <ipv4 route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "window",
      "pluralPhrase": "windows",
      "directObjectType": "ipv4 route"
    },
    "up flag of <ipv4 route>": {
      "key": "up flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "up flag",
      "pluralPhrase": "up flags",
      "directObjectType": "ipv4 route"
    },
    "reject flag of <ipv4 route>": {
      "key": "reject flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "reject flag",
      "pluralPhrase": "reject flags",
      "directObjectType": "ipv4 route"
    },
    "mtu of <ipv4 route>": {
      "key": "mtu of <ipv4 route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "mtu",
      "pluralPhrase": "mtus",
      "directObjectType": "ipv4 route"
    },
    "metric of <ipv4 route>": {
      "key": "metric of <ipv4 route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "metric",
      "pluralPhrase": "metrics",
      "directObjectType": "ipv4 route"
    },
    "mask of <ipv4 route>": {
      "key": "mask of <ipv4 route>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "mask",
      "pluralPhrase": "masks",
      "directObjectType": "ipv4 route"
    },
    "irtt of <ipv4 route>": {
      "key": "irtt of <ipv4 route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "irtt",
      "pluralPhrase": "irtts",
      "directObjectType": "ipv4 route"
    },
    "interface of <ipv4 route>": {
      "key": "interface of <ipv4 route>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "interface",
      "pluralPhrase": "interfaces",
      "directObjectType": "ipv4 route"
    },
    "host flag of <ipv4 route>": {
      "key": "host flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "host flag",
      "pluralPhrase": "host flags",
      "directObjectType": "ipv4 route"
    },
    "gateway of <ipv4 route>": {
      "key": "gateway of <ipv4 route>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "gateway",
      "pluralPhrase": "gateways",
      "directObjectType": "ipv4 route"
    },
    "gateway flag of <ipv4 route>": {
      "key": "gateway flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "gateway flag",
      "pluralPhrase": "gateway flags",
      "directObjectType": "ipv4 route"
    },
    "destination of <ipv4 route>": {
      "key": "destination of <ipv4 route>",
      "type": "property",
      "resultType": "ipv4 address",
      "singularPhrase": "destination",
      "pluralPhrase": "destinations",
      "directObjectType": "ipv4 route"
    },
    "nounzip of <grub module>": {
      "key": "nounzip of <grub module>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "nounzip",
      "pluralPhrase": "nounzips",
      "directObjectType": "grub module"
    },
    "<grub module> as string": {
      "key": "<grub module> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "grub module",
      "phrase": "string"
    },
    "location of <grub kernel>": {
      "key": "location of <grub kernel>",
      "type": "property",
      "resultType": "grub file location",
      "singularPhrase": "location",
      "pluralPhrase": "locations",
      "directObjectType": "grub kernel"
    },
    "boot argument of <grub kernel>": {
      "key": "boot argument of <grub kernel>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "boot argument",
      "pluralPhrase": "boot arguments",
      "directObjectType": "grub kernel"
    },
    "boot argument <integer> of <grub kernel>": {
      "key": "boot argument <integer> of <grub kernel>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "boot argument",
      "pluralPhrase": "boot arguments",
      "indexType": "integer",
      "directObjectType": "grub kernel"
    },
    "index of <grub image choice>": {
      "key": "index of <grub image choice>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "index",
      "pluralPhrase": "indexes",
      "directObjectType": "grub image choice"
    },
    "<grub image choice> as string": {
      "key": "<grub image choice> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "grub image choice",
      "phrase": "string"
    },
    "path of <grub file location>": {
      "key": "path of <grub file location>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "grub file location"
    },
    "device of <grub file location>": {
      "key": "device of <grub file location>",
      "type": "property",
      "resultType": "grub device",
      "singularPhrase": "device",
      "pluralPhrase": "devices",
      "directObjectType": "grub file location"
    },
    "block list of <grub file location>": {
      "key": "block list of <grub file location>",
      "type": "property",
      "resultType": "grub block list",
      "singularPhrase": "block list",
      "pluralPhrase": "block lists",
      "directObjectType": "grub file location"
    },
    "<grub file location> as string": {
      "key": "<grub file location> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "grub file location",
      "phrase": "string"
    },
    "<grub device> as string": {
      "key": "<grub device> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "grub device",
      "phrase": "string"
    },
    "timeout of <grub config file>": {
      "key": "timeout of <grub config file>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "timeout",
      "pluralPhrase": "timeouts",
      "directObjectType": "grub config file"
    },
    "splashimage of <grub config file>": {
      "key": "splashimage of <grub config file>",
      "type": "property",
      "resultType": "grub file location",
      "singularPhrase": "splashimage",
      "pluralPhrase": "splashimages",
      "directObjectType": "grub config file"
    },
    "path of <grub config file>": {
      "key": "path of <grub config file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "directObjectType": "grub config file"
    },
    "hiddenmenu of <grub config file>": {
      "key": "hiddenmenu of <grub config file>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "hiddenmenu",
      "pluralPhrase": "hiddenmenus",
      "directObjectType": "grub config file"
    },
    "gfxmenu of <grub config file>": {
      "key": "gfxmenu of <grub config file>",
      "type": "property",
      "resultType": "grub file location",
      "singularPhrase": "gfxmenu",
      "pluralPhrase": "gfxmenus",
      "directObjectType": "grub config file"
    },
    "fallback image of <grub config file>": {
      "key": "fallback image of <grub config file>",
      "type": "property",
      "resultType": "grub image choice",
      "singularPhrase": "fallback image",
      "pluralPhrase": "fallback images",
      "directObjectType": "grub config file"
    },
    "fallback image <integer> of <grub config file>": {
      "key": "fallback image <integer> of <grub config file>",
      "type": "property",
      "resultType": "grub image choice",
      "singularPhrase": "fallback image",
      "pluralPhrase": "fallback images",
      "indexType": "integer",
      "directObjectType": "grub config file"
    },
    "default image of <grub config file>": {
      "key": "default image of <grub config file>",
      "type": "property",
      "resultType": "grub image choice",
      "singularPhrase": "default image",
      "pluralPhrase": "default images",
      "directObjectType": "grub config file"
    },
    "color scheme of <grub config file>": {
      "key": "color scheme of <grub config file>",
      "type": "property",
      "resultType": "grub color scheme",
      "singularPhrase": "color scheme",
      "pluralPhrase": "color schemes",
      "directObjectType": "grub config file"
    },
    "bootable image of <grub config file>": {
      "key": "bootable image of <grub config file>",
      "type": "property",
      "resultType": "grub bootable image",
      "singularPhrase": "bootable image",
      "pluralPhrase": "bootable images",
      "directObjectType": "grub config file"
    },
    "bootable image <string> of <grub config file>": {
      "key": "bootable image <string> of <grub config file>",
      "type": "property",
      "resultType": "grub bootable image",
      "singularPhrase": "bootable image",
      "pluralPhrase": "bootable images",
      "indexType": "string",
      "directObjectType": "grub config file"
    },
    "bootable image <integer> of <grub config file>": {
      "key": "bootable image <integer> of <grub config file>",
      "type": "property",
      "resultType": "grub bootable image",
      "singularPhrase": "bootable image",
      "pluralPhrase": "bootable images",
      "indexType": "integer",
      "directObjectType": "grub config file"
    },
    "normal of <grub color scheme>": {
      "key": "normal of <grub color scheme>",
      "type": "property",
      "resultType": "grub color pair",
      "singularPhrase": "normal",
      "pluralPhrase": "normals",
      "directObjectType": "grub color scheme"
    },
    "highlight of <grub color scheme>": {
      "key": "highlight of <grub color scheme>",
      "type": "property",
      "resultType": "grub color pair",
      "singularPhrase": "highlight",
      "pluralPhrase": "highlights",
      "directObjectType": "grub color scheme"
    },
    "foreground of <grub color pair>": {
      "key": "foreground of <grub color pair>",
      "type": "property",
      "resultType": "grub color",
      "singularPhrase": "foreground",
      "pluralPhrase": "foregrounds",
      "directObjectType": "grub color pair"
    },
    "background of <grub color pair>": {
      "key": "background of <grub color pair>",
      "type": "property",
      "resultType": "grub color",
      "singularPhrase": "background",
      "pluralPhrase": "backgrounds",
      "directObjectType": "grub color pair"
    },
    "<grub color pair> as string": {
      "key": "<grub color pair> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "grub color pair",
      "phrase": "string"
    },
    "<grub color> as string": {
      "key": "<grub color> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "grub color",
      "phrase": "string"
    },
    "title of <grub bootable image>": {
      "key": "title of <grub bootable image>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "title",
      "pluralPhrase": "titles",
      "directObjectType": "grub bootable image"
    },
    "savedefault of <grub bootable image>": {
      "key": "savedefault of <grub bootable image>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "savedefault",
      "pluralPhrase": "savedefaults",
      "directObjectType": "grub bootable image"
    },
    "rootnoverify of <grub bootable image>": {
      "key": "rootnoverify of <grub bootable image>",
      "type": "property",
      "resultType": "grub device",
      "singularPhrase": "rootnoverify",
      "pluralPhrase": "rootnoverifys",
      "directObjectType": "grub bootable image"
    },
    "root of <grub bootable image>": {
      "key": "root of <grub bootable image>",
      "type": "property",
      "resultType": "grub device",
      "singularPhrase": "root",
      "pluralPhrase": "roots",
      "directObjectType": "grub bootable image"
    },
    "quiet of <grub bootable image>": {
      "key": "quiet of <grub bootable image>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "quiet",
      "pluralPhrase": "quiets",
      "directObjectType": "grub bootable image"
    },
    "module of <grub bootable image>": {
      "key": "module of <grub bootable image>",
      "type": "property",
      "resultType": "grub module",
      "singularPhrase": "module",
      "pluralPhrase": "modules",
      "directObjectType": "grub bootable image"
    },
    "module <integer> of <grub bootable image>": {
      "key": "module <integer> of <grub bootable image>",
      "type": "property",
      "resultType": "grub module",
      "singularPhrase": "module",
      "pluralPhrase": "modules",
      "indexType": "integer",
      "directObjectType": "grub bootable image"
    },
    "kernel of <grub bootable image>": {
      "key": "kernel of <grub bootable image>",
      "type": "property",
      "resultType": "grub kernel",
      "singularPhrase": "kernel",
      "pluralPhrase": "kernels",
      "directObjectType": "grub bootable image"
    },
    "initrd of <grub bootable image>": {
      "key": "initrd of <grub bootable image>",
      "type": "property",
      "resultType": "grub file location",
      "singularPhrase": "initrd",
      "pluralPhrase": "initrds",
      "directObjectType": "grub bootable image"
    },
    "chainloader of <grub bootable image>": {
      "key": "chainloader of <grub bootable image>",
      "type": "property",
      "resultType": "grub file location",
      "singularPhrase": "chainloader",
      "pluralPhrase": "chainloaders",
      "directObjectType": "grub bootable image"
    },
    "<grub bootable image> as string": {
      "key": "<grub bootable image> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "grub bootable image",
      "phrase": "string"
    },
    "<grub block list> as string": {
      "key": "<grub block list> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "grub block list",
      "phrase": "string"
    },
    "maximum duration of <evaluation cycle>": {
      "key": "maximum duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "maximum duration",
      "pluralPhrase": "maximum durations",
      "directObjectType": "evaluation cycle"
    },
    "average duration of <evaluation cycle>": {
      "key": "average duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "average duration",
      "pluralPhrase": "average durations",
      "directObjectType": "evaluation cycle"
    },
    "<debianpkg version> as string": {
      "key": "<debianpkg version> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "debianpkg version",
      "phrase": "string"
    },
    "pkglibversion of <debianpackagecache>": {
      "key": "pkglibversion of <debianpackagecache>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "pkglibversion",
      "pluralPhrase": "pkglibversions",
      "directObjectType": "debianpackagecache"
    },
    "thread of <cpupackage>": {
      "key": "thread of <cpupackage>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "thread",
      "pluralPhrase": "threads",
      "directObjectType": "cpupackage"
    },
    "smt enabled of <cpupackage>": {
      "key": "smt enabled of <cpupackage>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "smt enabled",
      "pluralPhrase": "smt enableds",
      "directObjectType": "cpupackage"
    },
    "smt capable of <cpupackage>": {
      "key": "smt capable of <cpupackage>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "smt capable",
      "pluralPhrase": "smt capables",
      "directObjectType": "cpupackage"
    },
    "count of <cpupackage>": {
      "key": "count of <cpupackage>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "count",
      "pluralPhrase": "counts",
      "directObjectType": "cpupackage"
    },
    "core of <cpupackage>": {
      "key": "core of <cpupackage>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "core",
      "pluralPhrase": "cores",
      "directObjectType": "cpupackage"
    },
    "last command time of <client>": {
      "key": "last command time of <client>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last command time",
      "pluralPhrase": "last command times",
      "directObjectType": "client"
    },
    "build target of <client>": {
      "key": "build target of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "build target",
      "pluralPhrase": "build targets",
      "directObjectType": "client"
    },
    "dns domainname of <active directory local user>": {
      "key": "dns domainname of <active directory local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "dns domainname",
      "pluralPhrase": "dns domainnames",
      "directObjectType": "active directory local user"
    },
    "dns domainname of <active directory local computer>": {
      "key": "dns domainname of <active directory local computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "dns domainname",
      "pluralPhrase": "dns domainnames",
      "directObjectType": "active directory local computer"
    },
    "fileset version requirement <string>": {
      "key": "fileset version requirement <string>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "fileset version requirement",
      "pluralPhrase": "fileset version requirements",
      "indexType": "string"
    },
    "fileset version requirement <fileset version requirement>": {
      "key": "fileset version requirement <fileset version requirement>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "fileset version requirement",
      "pluralPhrase": "fileset version requirements",
      "indexType": "fileset version requirement"
    },
    "fileset version record <string>": {
      "key": "fileset version record <string>",
      "type": "property",
      "resultType": "fileset version record",
      "singularPhrase": "fileset version record",
      "pluralPhrase": "fileset version records",
      "indexType": "string"
    },
    "fileset version record <fileset version record>": {
      "key": "fileset version record <fileset version record>",
      "type": "property",
      "resultType": "fileset version record",
      "singularPhrase": "fileset version record",
      "pluralPhrase": "fileset version records",
      "indexType": "fileset version record"
    },
    "multiplicity of <technology level with multiplicity>": {
      "key": "multiplicity of <technology level with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "technology level with multiplicity"
    },
    "unique value of <technology level>": {
      "key": "unique value of <technology level>",
      "type": "property",
      "resultType": "technology level with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "technology level"
    },
    "uninstalled fileset version requirement of <technology level>": {
      "key": "uninstalled fileset version requirement of <technology level>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "uninstalled fileset version requirement",
      "pluralPhrase": "uninstalled fileset version requirements",
      "directObjectType": "technology level"
    },
    "name of <technology level>": {
      "key": "name of <technology level>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "technology level"
    },
    "minimum of <technology level>": {
      "key": "minimum of <technology level>",
      "type": "property",
      "resultType": "technology level",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "technology level"
    },
    "maximum of <technology level>": {
      "key": "maximum of <technology level>",
      "type": "property",
      "resultType": "technology level",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "technology level"
    },
    "installed unsatisfied fileset version requirement of <technology level>": {
      "key": "installed unsatisfied fileset version requirement of <technology level>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "installed unsatisfied fileset version requirement",
      "pluralPhrase": "installed unsatisfied fileset version requirements",
      "directObjectType": "technology level"
    },
    "installed satisfied fileset version requirement of <technology level>": {
      "key": "installed satisfied fileset version requirement of <technology level>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "installed satisfied fileset version requirement",
      "pluralPhrase": "installed satisfied fileset version requirements",
      "directObjectType": "technology level"
    },
    "fileset version requirement of <technology level>": {
      "key": "fileset version requirement of <technology level>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "fileset version requirement",
      "pluralPhrase": "fileset version requirements",
      "directObjectType": "technology level"
    },
    "fileset version requirement <string> of <technology level>": {
      "key": "fileset version requirement <string> of <technology level>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "fileset version requirement",
      "pluralPhrase": "fileset version requirements",
      "indexType": "string",
      "directObjectType": "technology level"
    },
    "extrema of <technology level>": {
      "key": "extrema of <technology level>",
      "type": "property",
      "resultType": "( technology level, technology level )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "technology level"
    },
    "abstract of <technology level>": {
      "key": "abstract of <technology level>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "abstract",
      "pluralPhrase": "abstracts",
      "directObjectType": "technology level"
    },
    "<technology level> as string": {
      "key": "<technology level> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "technology level",
      "phrase": "string"
    },
    "<technology level> = <technology level>": {
      "key": "<technology level> = <technology level>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "technology level",
      "op": "=",
      "rightType": "technology level"
    },
    "<technology level> <= <technology level>": {
      "key": "<technology level> <= <technology level>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "technology level",
      "op": "<=",
      "rightType": "technology level"
    },
    "<technology level> < <technology level>": {
      "key": "<technology level> < <technology level>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "technology level",
      "op": "<",
      "rightType": "technology level"
    },
    "<technology level> = <string>": {
      "key": "<technology level> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "technology level",
      "op": "=",
      "rightType": "string"
    },
    "<technology level> <= <string>": {
      "key": "<technology level> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "technology level",
      "op": "<=",
      "rightType": "string"
    },
    "<technology level> < <string>": {
      "key": "<technology level> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "technology level",
      "op": "<",
      "rightType": "string"
    },
    "<string> = <technology level>": {
      "key": "<string> = <technology level>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "technology level"
    },
    "<string> <= <technology level>": {
      "key": "<string> <= <technology level>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "technology level"
    },
    "<string> < <technology level>": {
      "key": "<string> < <technology level>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "technology level"
    },
    "multiplicity of <service pack with multiplicity>": {
      "key": "multiplicity of <service pack with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "service pack with multiplicity"
    },
    "unique value of <service pack>": {
      "key": "unique value of <service pack>",
      "type": "property",
      "resultType": "service pack with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "service pack"
    },
    "uninstalled fileset version requirement of <service pack>": {
      "key": "uninstalled fileset version requirement of <service pack>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "uninstalled fileset version requirement",
      "pluralPhrase": "uninstalled fileset version requirements",
      "directObjectType": "service pack"
    },
    "technology level of <service pack>": {
      "key": "technology level of <service pack>",
      "type": "property",
      "resultType": "technology level",
      "singularPhrase": "technology level",
      "pluralPhrase": "technology levels",
      "directObjectType": "service pack"
    },
    "name of <service pack>": {
      "key": "name of <service pack>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "service pack"
    },
    "minimum of <service pack>": {
      "key": "minimum of <service pack>",
      "type": "property",
      "resultType": "service pack",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "service pack"
    },
    "maximum of <service pack>": {
      "key": "maximum of <service pack>",
      "type": "property",
      "resultType": "service pack",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "service pack"
    },
    "installed unsatisfied fileset version requirement of <service pack>": {
      "key": "installed unsatisfied fileset version requirement of <service pack>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "installed unsatisfied fileset version requirement",
      "pluralPhrase": "installed unsatisfied fileset version requirements",
      "directObjectType": "service pack"
    },
    "installed satisfied fileset version requirement of <service pack>": {
      "key": "installed satisfied fileset version requirement of <service pack>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "installed satisfied fileset version requirement",
      "pluralPhrase": "installed satisfied fileset version requirements",
      "directObjectType": "service pack"
    },
    "fileset version requirement of <service pack>": {
      "key": "fileset version requirement of <service pack>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "fileset version requirement",
      "pluralPhrase": "fileset version requirements",
      "directObjectType": "service pack"
    },
    "fileset version requirement <string> of <service pack>": {
      "key": "fileset version requirement <string> of <service pack>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "fileset version requirement",
      "pluralPhrase": "fileset version requirements",
      "indexType": "string",
      "directObjectType": "service pack"
    },
    "extrema of <service pack>": {
      "key": "extrema of <service pack>",
      "type": "property",
      "resultType": "( service pack, service pack )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "service pack"
    },
    "abstract of <service pack>": {
      "key": "abstract of <service pack>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "abstract",
      "pluralPhrase": "abstracts",
      "directObjectType": "service pack"
    },
    "<string> = <service pack>": {
      "key": "<string> = <service pack>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "service pack"
    },
    "<string> <= <service pack>": {
      "key": "<string> <= <service pack>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "service pack"
    },
    "<string> < <service pack>": {
      "key": "<string> < <service pack>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "service pack"
    },
    "<service pack> as string": {
      "key": "<service pack> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "service pack",
      "phrase": "string"
    },
    "<service pack> = <string>": {
      "key": "<service pack> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "service pack",
      "op": "=",
      "rightType": "string"
    },
    "<service pack> = <service pack>": {
      "key": "<service pack> = <service pack>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "service pack",
      "op": "=",
      "rightType": "service pack"
    },
    "<service pack> <= <string>": {
      "key": "<service pack> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "service pack",
      "op": "<=",
      "rightType": "string"
    },
    "<service pack> <= <service pack>": {
      "key": "<service pack> <= <service pack>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "service pack",
      "op": "<=",
      "rightType": "service pack"
    },
    "<service pack> < <string>": {
      "key": "<service pack> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "service pack",
      "op": "<",
      "rightType": "string"
    },
    "<service pack> < <service pack>": {
      "key": "<service pack> < <service pack>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "service pack",
      "op": "<",
      "rightType": "service pack"
    },
    "technology level of <operating system>": {
      "key": "technology level of <operating system>",
      "type": "property",
      "resultType": "technology level",
      "singularPhrase": "technology level",
      "pluralPhrase": "technology levels",
      "directObjectType": "operating system"
    },
    "technology level <string> of <operating system>": {
      "key": "technology level <string> of <operating system>",
      "type": "property",
      "resultType": "technology level",
      "singularPhrase": "technology level",
      "pluralPhrase": "technology levels",
      "indexType": "string",
      "directObjectType": "operating system"
    },
    "service pack of <operating system>": {
      "key": "service pack of <operating system>",
      "type": "property",
      "resultType": "service pack",
      "singularPhrase": "service pack",
      "pluralPhrase": "service packs",
      "directObjectType": "operating system"
    },
    "service pack <string> of <operating system>": {
      "key": "service pack <string> of <operating system>",
      "type": "property",
      "resultType": "service pack",
      "singularPhrase": "service pack",
      "pluralPhrase": "service packs",
      "indexType": "string",
      "directObjectType": "operating system"
    },
    "current technology level of <operating system>": {
      "key": "current technology level of <operating system>",
      "type": "property",
      "resultType": "technology level",
      "singularPhrase": "current technology level",
      "pluralPhrase": "current technology levels",
      "directObjectType": "operating system"
    },
    "current service pack of <operating system>": {
      "key": "current service pack of <operating system>",
      "type": "property",
      "resultType": "service pack",
      "singularPhrase": "current service pack",
      "pluralPhrase": "current service packs",
      "directObjectType": "operating system"
    },
    "apar of <operating system>": {
      "key": "apar of <operating system>",
      "type": "property",
      "resultType": "apar",
      "singularPhrase": "apar",
      "pluralPhrase": "apars",
      "directObjectType": "operating system"
    },
    "apar <string> of <operating system>": {
      "key": "apar <string> of <operating system>",
      "type": "property",
      "resultType": "apar",
      "singularPhrase": "apar",
      "pluralPhrase": "apars",
      "indexType": "string",
      "directObjectType": "operating system"
    },
    "product of <object repository>": {
      "key": "product of <object repository>",
      "type": "property",
      "resultType": "product",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "directObjectType": "object repository"
    },
    "product <string> of <object repository>": {
      "key": "product <string> of <object repository>",
      "type": "property",
      "resultType": "product",
      "singularPhrase": "product",
      "pluralPhrase": "products",
      "indexType": "string",
      "directObjectType": "object repository"
    },
    "latest fileset <string> of <object repository>": {
      "key": "latest fileset <string> of <object repository>",
      "type": "property",
      "resultType": "fileset",
      "singularPhrase": "latest fileset",
      "pluralPhrase": "latest filesets",
      "indexType": "string",
      "directObjectType": "object repository"
    },
    "fileset with name <string> of <object repository>": {
      "key": "fileset with name <string> of <object repository>",
      "type": "property",
      "resultType": "fileset",
      "singularPhrase": "fileset with name",
      "pluralPhrase": "filesets with name",
      "indexType": "string",
      "directObjectType": "object repository"
    },
    "fileset of <object repository>": {
      "key": "fileset of <object repository>",
      "type": "property",
      "resultType": "fileset",
      "singularPhrase": "fileset",
      "pluralPhrase": "filesets",
      "directObjectType": "object repository"
    },
    "fileset matching <string> of <object repository>": {
      "key": "fileset matching <string> of <object repository>",
      "type": "property",
      "resultType": "fileset",
      "singularPhrase": "fileset matching",
      "pluralPhrase": "filesets matching",
      "indexType": "string",
      "directObjectType": "object repository"
    },
    "fileset <string> of <object repository>": {
      "key": "fileset <string> of <object repository>",
      "type": "property",
      "resultType": "fileset",
      "singularPhrase": "fileset",
      "pluralPhrase": "filesets",
      "indexType": "string",
      "directObjectType": "object repository"
    },
    "version record of <fileset version requirement>": {
      "key": "version record of <fileset version requirement>",
      "type": "property",
      "resultType": "fileset version record",
      "singularPhrase": "version record",
      "pluralPhrase": "version records",
      "directObjectType": "fileset version requirement"
    },
    "satisfying fileset of <fileset version requirement>": {
      "key": "satisfying fileset of <fileset version requirement>",
      "type": "property",
      "resultType": "fileset",
      "singularPhrase": "satisfying fileset",
      "pluralPhrase": "satisfying filesets",
      "directObjectType": "fileset version requirement"
    },
    "lpp_name of <fileset version requirement>": {
      "key": "lpp_name of <fileset version requirement>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "lpp_name",
      "pluralPhrase": "lpp_names",
      "directObjectType": "fileset version requirement"
    },
    "latest installed fileset of <fileset version requirement>": {
      "key": "latest installed fileset of <fileset version requirement>",
      "type": "property",
      "resultType": "fileset",
      "singularPhrase": "latest installed fileset",
      "pluralPhrase": "latest installed filesets",
      "directObjectType": "fileset version requirement"
    },
    "<fileset version requirement> as string": {
      "key": "<fileset version requirement> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "fileset version requirement",
      "phrase": "string"
    },
    "<fileset version requirement> as fileset version requirement": {
      "key": "<fileset version requirement> as fileset version requirement",
      "type": "cast",
      "resultType": "fileset version requirement",
      "argType": "fileset version requirement",
      "phrase": "fileset version requirement"
    },
    "multiplicity of <fileset version record with multiplicity>": {
      "key": "multiplicity of <fileset version record with multiplicity>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "multiplicity",
      "pluralPhrase": "multiplicities",
      "directObjectType": "fileset version record with multiplicity"
    },
    "ver_part of <fileset version record>": {
      "key": "ver_part of <fileset version record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "ver_part",
      "pluralPhrase": "ver_parts",
      "directObjectType": "fileset version record"
    },
    "unique value of <fileset version record>": {
      "key": "unique value of <fileset version record>",
      "type": "property",
      "resultType": "fileset version record with multiplicity",
      "singularPhrase": "unique value",
      "pluralPhrase": "unique values",
      "directObjectType": "fileset version record"
    },
    "rel_part of <fileset version record>": {
      "key": "rel_part of <fileset version record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "rel_part",
      "pluralPhrase": "rel_parts",
      "directObjectType": "fileset version record"
    },
    "mod_part of <fileset version record>": {
      "key": "mod_part of <fileset version record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "mod_part",
      "pluralPhrase": "mod_parts",
      "directObjectType": "fileset version record"
    },
    "minimum of <fileset version record>": {
      "key": "minimum of <fileset version record>",
      "type": "property",
      "resultType": "fileset version record",
      "singularPhrase": "minimum",
      "pluralPhrase": "minima",
      "directObjectType": "fileset version record"
    },
    "maximum of <fileset version record>": {
      "key": "maximum of <fileset version record>",
      "type": "property",
      "resultType": "fileset version record",
      "singularPhrase": "maximum",
      "pluralPhrase": "maxima",
      "directObjectType": "fileset version record"
    },
    "fix_part of <fileset version record>": {
      "key": "fix_part of <fileset version record>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "fix_part",
      "pluralPhrase": "fix_parts",
      "directObjectType": "fileset version record"
    },
    "extrema of <fileset version record>": {
      "key": "extrema of <fileset version record>",
      "type": "property",
      "resultType": "( fileset version record, fileset version record )",
      "singularPhrase": "extrema",
      "pluralPhrase": "extremas",
      "directObjectType": "fileset version record"
    },
    "<string> = <fileset version record>": {
      "key": "<string> = <fileset version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "fileset version record"
    },
    "<string> <= <fileset version record>": {
      "key": "<string> <= <fileset version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "fileset version record"
    },
    "<string> < <fileset version record>": {
      "key": "<string> < <fileset version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "fileset version record"
    },
    "<fileset version record> as string": {
      "key": "<fileset version record> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "fileset version record",
      "phrase": "string"
    },
    "<fileset version record> as fileset version record": {
      "key": "<fileset version record> as fileset version record",
      "type": "cast",
      "resultType": "fileset version record",
      "argType": "fileset version record",
      "phrase": "fileset version record"
    },
    "<fileset version record> = <string>": {
      "key": "<fileset version record> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "fileset version record",
      "op": "=",
      "rightType": "string"
    },
    "<fileset version record> = <fileset version record>": {
      "key": "<fileset version record> = <fileset version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "fileset version record",
      "op": "=",
      "rightType": "fileset version record"
    },
    "<fileset version record> <= <string>": {
      "key": "<fileset version record> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "fileset version record",
      "op": "<=",
      "rightType": "string"
    },
    "<fileset version record> <= <fileset version record>": {
      "key": "<fileset version record> <= <fileset version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "fileset version record",
      "op": "<=",
      "rightType": "fileset version record"
    },
    "<fileset version record> < <string>": {
      "key": "<fileset version record> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "fileset version record",
      "op": "<",
      "rightType": "string"
    },
    "<fileset version record> < <fileset version record>": {
      "key": "<fileset version record> < <fileset version record>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "fileset version record",
      "op": "<",
      "rightType": "fileset version record"
    },
    "version record of <fileset>": {
      "key": "version record of <fileset>",
      "type": "property",
      "resultType": "fileset version record",
      "singularPhrase": "version record",
      "pluralPhrase": "version records",
      "directObjectType": "fileset"
    },
    "usr part of <fileset>": {
      "key": "usr part of <fileset>",
      "type": "property",
      "resultType": "fileset part",
      "singularPhrase": "usr part",
      "pluralPhrase": "usr parts",
      "directObjectType": "fileset"
    },
    "share part of <fileset>": {
      "key": "share part of <fileset>",
      "type": "property",
      "resultType": "fileset part",
      "singularPhrase": "share part",
      "pluralPhrase": "share parts",
      "directObjectType": "fileset"
    },
    "root part of <fileset>": {
      "key": "root part of <fileset>",
      "type": "property",
      "resultType": "fileset part",
      "singularPhrase": "root part",
      "pluralPhrase": "root parts",
      "directObjectType": "fileset"
    },
    "uninstalled fileset version requirement of <apar>": {
      "key": "uninstalled fileset version requirement of <apar>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "uninstalled fileset version requirement",
      "pluralPhrase": "uninstalled fileset version requirements",
      "directObjectType": "apar"
    },
    "symptom of <apar>": {
      "key": "symptom of <apar>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "symptom",
      "pluralPhrase": "symptoms",
      "directObjectType": "apar"
    },
    "name of <apar>": {
      "key": "name of <apar>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "apar"
    },
    "installed unsatisfied fileset version requirement of <apar>": {
      "key": "installed unsatisfied fileset version requirement of <apar>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "installed unsatisfied fileset version requirement",
      "pluralPhrase": "installed unsatisfied fileset version requirements",
      "directObjectType": "apar"
    },
    "installed satisfied fileset version requirement of <apar>": {
      "key": "installed satisfied fileset version requirement of <apar>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "installed satisfied fileset version requirement",
      "pluralPhrase": "installed satisfied fileset version requirements",
      "directObjectType": "apar"
    },
    "fileset version requirement of <apar>": {
      "key": "fileset version requirement of <apar>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "fileset version requirement",
      "pluralPhrase": "fileset version requirements",
      "directObjectType": "apar"
    },
    "fileset version requirement <string> of <apar>": {
      "key": "fileset version requirement <string> of <apar>",
      "type": "property",
      "resultType": "fileset version requirement",
      "singularPhrase": "fileset version requirement",
      "pluralPhrase": "fileset version requirements",
      "indexType": "string",
      "directObjectType": "apar"
    },
    "abstract of <apar>": {
      "key": "abstract of <apar>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "abstract",
      "pluralPhrase": "abstracts",
      "directObjectType": "apar"
    },
    "<apar> as string": {
      "key": "<apar> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "apar",
      "phrase": "string"
    },
    "smf": {
      "key": "smf",
      "type": "property",
      "resultType": "smf",
      "singularPhrase": "smf",
      "pluralPhrase": "smfs"
    },
    "type of <smf value>": {
      "key": "type of <smf value>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "smf value"
    },
    "<smf value> as string": {
      "key": "<smf value> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "smf value",
      "phrase": "string"
    },
    "<smf value> as smf time": {
      "key": "<smf value> as smf time",
      "type": "cast",
      "resultType": "smf time",
      "argType": "smf value",
      "phrase": "smf time"
    },
    "<smf value> as integer": {
      "key": "<smf value> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "smf value",
      "phrase": "integer"
    },
    "<smf value> as boolean": {
      "key": "<smf value> as boolean",
      "type": "cast",
      "resultType": "boolean",
      "argType": "smf value",
      "phrase": "boolean"
    },
    "seconds value of <smf time>": {
      "key": "seconds value of <smf time>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "seconds value",
      "pluralPhrase": "seconds values",
      "directObjectType": "smf time"
    },
    "nanoseconds value of <smf time>": {
      "key": "nanoseconds value of <smf time>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "nanoseconds value",
      "pluralPhrase": "nanoseconds values",
      "directObjectType": "smf time"
    },
    "<smf time> as string": {
      "key": "<smf time> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "smf time",
      "phrase": "string"
    },
    "property group of <smf snapshot part>": {
      "key": "property group of <smf snapshot part>",
      "type": "property",
      "resultType": "smf property group",
      "singularPhrase": "property group",
      "pluralPhrase": "property groups",
      "directObjectType": "smf snapshot part"
    },
    "property group <string> of <smf snapshot part>": {
      "key": "property group <string> of <smf snapshot part>",
      "type": "property",
      "resultType": "smf property group",
      "singularPhrase": "property group",
      "pluralPhrase": "property groups",
      "indexType": "string",
      "directObjectType": "smf snapshot part"
    },
    "parent snapshot of <smf snapshot part>": {
      "key": "parent snapshot of <smf snapshot part>",
      "type": "property",
      "resultType": "smf snapshot",
      "singularPhrase": "parent snapshot",
      "pluralPhrase": "parent snapshots",
      "directObjectType": "smf snapshot part"
    },
    "service part of <smf snapshot>": {
      "key": "service part of <smf snapshot>",
      "type": "property",
      "resultType": "smf snapshot part",
      "singularPhrase": "service part",
      "pluralPhrase": "service parts",
      "directObjectType": "smf snapshot"
    },
    "part of <smf snapshot>": {
      "key": "part of <smf snapshot>",
      "type": "property",
      "resultType": "smf snapshot part",
      "singularPhrase": "part",
      "pluralPhrase": "parts",
      "directObjectType": "smf snapshot"
    },
    "parent instance of <smf snapshot>": {
      "key": "parent instance of <smf snapshot>",
      "type": "property",
      "resultType": "smf instance",
      "singularPhrase": "parent instance",
      "pluralPhrase": "parent instances",
      "directObjectType": "smf snapshot"
    },
    "name of <smf snapshot>": {
      "key": "name of <smf snapshot>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "smf snapshot"
    },
    "instance part of <smf snapshot>": {
      "key": "instance part of <smf snapshot>",
      "type": "property",
      "resultType": "smf snapshot part",
      "singularPhrase": "instance part",
      "pluralPhrase": "instance parts",
      "directObjectType": "smf snapshot"
    },
    "<smf snapshot> as string": {
      "key": "<smf snapshot> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "smf snapshot",
      "phrase": "string"
    },
    "property group of <smf service>": {
      "key": "property group of <smf service>",
      "type": "property",
      "resultType": "smf property group",
      "singularPhrase": "property group",
      "pluralPhrase": "property groups",
      "directObjectType": "smf service"
    },
    "property group <string> of <smf service>": {
      "key": "property group <string> of <smf service>",
      "type": "property",
      "resultType": "smf property group",
      "singularPhrase": "property group",
      "pluralPhrase": "property groups",
      "indexType": "string",
      "directObjectType": "smf service"
    },
    "name of <smf service>": {
      "key": "name of <smf service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "smf service"
    },
    "instance of <smf service>": {
      "key": "instance of <smf service>",
      "type": "property",
      "resultType": "smf instance",
      "singularPhrase": "instance",
      "pluralPhrase": "instances",
      "directObjectType": "smf service"
    },
    "instance <string> of <smf service>": {
      "key": "instance <string> of <smf service>",
      "type": "property",
      "resultType": "smf instance",
      "singularPhrase": "instance",
      "pluralPhrase": "instances",
      "indexType": "string",
      "directObjectType": "smf service"
    },
    "fmri of <smf service>": {
      "key": "fmri of <smf service>",
      "type": "property",
      "resultType": "smf fmri",
      "singularPhrase": "fmri",
      "pluralPhrase": "fmris",
      "directObjectType": "smf service"
    },
    "<smf service> as string": {
      "key": "<smf service> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "smf service",
      "phrase": "string"
    },
    "type of <smf property group>": {
      "key": "type of <smf property group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "smf property group"
    },
    "property of <smf property group>": {
      "key": "property of <smf property group>",
      "type": "property",
      "resultType": "smf property",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "directObjectType": "smf property group"
    },
    "property <string> of <smf property group>": {
      "key": "property <string> of <smf property group>",
      "type": "property",
      "resultType": "smf property",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "indexType": "string",
      "directObjectType": "smf property group"
    },
    "parent snapshot part of <smf property group>": {
      "key": "parent snapshot part of <smf property group>",
      "type": "property",
      "resultType": "smf snapshot part",
      "singularPhrase": "parent snapshot part",
      "pluralPhrase": "parent snapshot parts",
      "directObjectType": "smf property group"
    },
    "parent service of <smf property group>": {
      "key": "parent service of <smf property group>",
      "type": "property",
      "resultType": "smf service",
      "singularPhrase": "parent service",
      "pluralPhrase": "parent services",
      "directObjectType": "smf property group"
    },
    "parent instance of <smf property group>": {
      "key": "parent instance of <smf property group>",
      "type": "property",
      "resultType": "smf instance",
      "singularPhrase": "parent instance",
      "pluralPhrase": "parent instances",
      "directObjectType": "smf property group"
    },
    "nonpersistent flag of <smf property group>": {
      "key": "nonpersistent flag of <smf property group>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "nonpersistent flag",
      "pluralPhrase": "nonpersistent flags",
      "directObjectType": "smf property group"
    },
    "name of <smf property group>": {
      "key": "name of <smf property group>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "smf property group"
    },
    "fmri of <smf property group>": {
      "key": "fmri of <smf property group>",
      "type": "property",
      "resultType": "smf fmri",
      "singularPhrase": "fmri",
      "pluralPhrase": "fmris",
      "directObjectType": "smf property group"
    },
    "<smf property group> as string": {
      "key": "<smf property group> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "smf property group",
      "phrase": "string"
    },
    "value of <smf property>": {
      "key": "value of <smf property>",
      "type": "property",
      "resultType": "smf value",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "smf property"
    },
    "type of <smf property>": {
      "key": "type of <smf property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "smf property"
    },
    "name of <smf property>": {
      "key": "name of <smf property>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "smf property"
    },
    "fmri of <smf property>": {
      "key": "fmri of <smf property>",
      "type": "property",
      "resultType": "smf fmri",
      "singularPhrase": "fmri",
      "pluralPhrase": "fmris",
      "directObjectType": "smf property"
    },
    "<smf property> as string": {
      "key": "<smf property> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "smf property",
      "phrase": "string"
    },
    "snapshot of <smf instance>": {
      "key": "snapshot of <smf instance>",
      "type": "property",
      "resultType": "smf snapshot",
      "singularPhrase": "snapshot",
      "pluralPhrase": "snapshots",
      "directObjectType": "smf instance"
    },
    "snapshot <string> of <smf instance>": {
      "key": "snapshot <string> of <smf instance>",
      "type": "property",
      "resultType": "smf snapshot",
      "singularPhrase": "snapshot",
      "pluralPhrase": "snapshots",
      "indexType": "string",
      "directObjectType": "smf instance"
    },
    "property group of <smf instance>": {
      "key": "property group of <smf instance>",
      "type": "property",
      "resultType": "smf property group",
      "singularPhrase": "property group",
      "pluralPhrase": "property groups",
      "directObjectType": "smf instance"
    },
    "property group <string> of <smf instance>": {
      "key": "property group <string> of <smf instance>",
      "type": "property",
      "resultType": "smf property group",
      "singularPhrase": "property group",
      "pluralPhrase": "property groups",
      "indexType": "string",
      "directObjectType": "smf instance"
    },
    "parent service of <smf instance>": {
      "key": "parent service of <smf instance>",
      "type": "property",
      "resultType": "smf service",
      "singularPhrase": "parent service",
      "pluralPhrase": "parent services",
      "directObjectType": "smf instance"
    },
    "name of <smf instance>": {
      "key": "name of <smf instance>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "smf instance"
    },
    "fmri of <smf instance>": {
      "key": "fmri of <smf instance>",
      "type": "property",
      "resultType": "smf fmri",
      "singularPhrase": "fmri",
      "pluralPhrase": "fmris",
      "directObjectType": "smf instance"
    },
    "<smf instance> as string": {
      "key": "<smf instance> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "smf instance",
      "phrase": "string"
    },
    "<smf fmri> as string": {
      "key": "<smf fmri> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "smf fmri",
      "phrase": "string"
    },
    "service of <smf>": {
      "key": "service of <smf>",
      "type": "property",
      "resultType": "smf service",
      "singularPhrase": "service",
      "pluralPhrase": "services",
      "directObjectType": "smf"
    },
    "service <string> of <smf>": {
      "key": "service <string> of <smf>",
      "type": "property",
      "resultType": "smf service",
      "singularPhrase": "service",
      "pluralPhrase": "services",
      "indexType": "string",
      "directObjectType": "smf"
    },
    "sid <string>": {
      "key": "sid <string>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "sid",
      "pluralPhrase": "sids",
      "indexType": "string"
    },
    "sid of <user>": {
      "key": "sid of <user>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "sid",
      "pluralPhrase": "sids",
      "directObjectType": "user"
    },
    "domain of <user>": {
      "key": "domain of <user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "domain",
      "pluralPhrase": "domains",
      "directObjectType": "user"
    },
    "user of <security identifier>": {
      "key": "user of <security identifier>",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "user",
      "pluralPhrase": "users",
      "directObjectType": "security identifier"
    },
    "null sacl of <security descriptor>": {
      "key": "null sacl of <security descriptor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "null sacl",
      "pluralPhrase": "null sacls",
      "directObjectType": "security descriptor"
    },
    "null dacl of <security descriptor>": {
      "key": "null dacl of <security descriptor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "null dacl",
      "pluralPhrase": "null dacls",
      "directObjectType": "security descriptor"
    },
    "<firewall profile type> as string": {
      "key": "<firewall profile type> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "firewall profile type",
      "phrase": "string"
    },
    "profile of <firewall policy>": {
      "key": "profile of <firewall policy>",
      "type": "property",
      "resultType": "firewall profile",
      "singularPhrase": "profile",
      "pluralPhrase": "profiles",
      "directObjectType": "firewall policy"
    },
    "profile type of <firewall>": {
      "key": "profile type of <firewall>",
      "type": "property",
      "resultType": "firewall profile type",
      "singularPhrase": "profile type",
      "pluralPhrase": "profile types",
      "directObjectType": "firewall"
    },
    "version string of <bios>": {
      "key": "version string of <bios>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version string",
      "pluralPhrase": "version strings",
      "directObjectType": "bios"
    },
    "guid of <audit policy subcategory>": {
      "key": "guid of <audit policy subcategory>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "guid",
      "pluralPhrase": "guids",
      "directObjectType": "audit policy subcategory"
    },
    "guid of <audit policy information>": {
      "key": "guid of <audit policy information>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "guid",
      "pluralPhrase": "guids",
      "directObjectType": "audit policy information"
    },
    "virtualizer of <application>": {
      "key": "virtualizer of <application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "virtualizer",
      "pluralPhrase": "virtualizers",
      "directObjectType": "application"
    },
    "task name of <application>": {
      "key": "task name of <application>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "task name",
      "pluralPhrase": "task names",
      "directObjectType": "application"
    },
    "inspectability of <application>": {
      "key": "inspectability of <application>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "inspectability",
      "pluralPhrase": "inspectabilities",
      "directObjectType": "application"
    },
    "netbios domainname of <active directory local user>": {
      "key": "netbios domainname of <active directory local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "netbios domainname",
      "pluralPhrase": "netbios domainnames",
      "directObjectType": "active directory local user"
    },
    "domain of <active directory local user>": {
      "key": "domain of <active directory local user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "domain",
      "pluralPhrase": "domains",
      "directObjectType": "active directory local user"
    },
    "netbios domainname of <active directory local computer>": {
      "key": "netbios domainname of <active directory local computer>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "netbios domainname",
      "pluralPhrase": "netbios domainnames",
      "directObjectType": "active directory local computer"
    },
    "object inherit of <access control entry>": {
      "key": "object inherit of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "object inherit",
      "pluralPhrase": "object inherits",
      "directObjectType": "access control entry"
    },
    "no propagate inherit of <access control entry>": {
      "key": "no propagate inherit of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "no propagate inherit",
      "pluralPhrase": "no propagate inherits",
      "directObjectType": "access control entry"
    },
    "inherited of <access control entry>": {
      "key": "inherited of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "inherited",
      "pluralPhrase": "inheriteds",
      "directObjectType": "access control entry"
    },
    "inherit only of <access control entry>": {
      "key": "inherit only of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "inherit only",
      "pluralPhrase": "inherit onlys",
      "directObjectType": "access control entry"
    },
    "grant type of <access control entry>": {
      "key": "grant type of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "grant type",
      "pluralPhrase": "grant types",
      "directObjectType": "access control entry"
    },
    "deny type of <access control entry>": {
      "key": "deny type of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "deny type",
      "pluralPhrase": "deny types",
      "directObjectType": "access control entry"
    },
    "container inherit of <access control entry>": {
      "key": "container inherit of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "container inherit",
      "pluralPhrase": "container inherits",
      "directObjectType": "access control entry"
    },
    "audit success of <access control entry>": {
      "key": "audit success of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "audit success",
      "pluralPhrase": "audit successes",
      "directObjectType": "access control entry"
    },
    "audit failure of <access control entry>": {
      "key": "audit failure of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "audit failure",
      "pluralPhrase": "audit failures",
      "directObjectType": "access control entry"
    },
    "ace type of <access control entry>": {
      "key": "ace type of <access control entry>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "ace type",
      "pluralPhrase": "ace types",
      "directObjectType": "access control entry"
    },
    "ace flag of <access control entry>": {
      "key": "ace flag of <access control entry>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "ace flag",
      "pluralPhrase": "ace flags",
      "directObjectType": "access control entry"
    },
    "all route of <ipv4 routing table>": {
      "key": "all route of <ipv4 routing table>",
      "type": "property",
      "resultType": "ipv4 route",
      "singularPhrase": "all route",
      "pluralPhrase": "all routes",
      "directObjectType": "ipv4 routing table"
    },
    "use count of <ipv4 route>": {
      "key": "use count of <ipv4 route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "use count",
      "pluralPhrase": "use counts",
      "directObjectType": "ipv4 route"
    },
    "static flag of <ipv4 route>": {
      "key": "static flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "static flag",
      "pluralPhrase": "static flags",
      "directObjectType": "ipv4 route"
    },
    "setsrc flag of <ipv4 route>": {
      "key": "setsrc flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "setsrc flag",
      "pluralPhrase": "setsrc flags",
      "directObjectType": "ipv4 route"
    },
    "reference count of <ipv4 route>": {
      "key": "reference count of <ipv4 route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "reference count",
      "pluralPhrase": "reference counts",
      "directObjectType": "ipv4 route"
    },
    "private flag of <ipv4 route>": {
      "key": "private flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "private flag",
      "pluralPhrase": "private flags",
      "directObjectType": "ipv4 route"
    },
    "prefix flag of <ipv4 route>": {
      "key": "prefix flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "prefix flag",
      "pluralPhrase": "prefix flags",
      "directObjectType": "ipv4 route"
    },
    "multiroute flag of <ipv4 route>": {
      "key": "multiroute flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "multiroute flag",
      "pluralPhrase": "multiroute flags",
      "directObjectType": "ipv4 route"
    },
    "modified flag of <ipv4 route>": {
      "key": "modified flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "modified flag",
      "pluralPhrase": "modified flags",
      "directObjectType": "ipv4 route"
    },
    "loopback flag of <ipv4 route>": {
      "key": "loopback flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "loopback flag",
      "pluralPhrase": "loopback flags",
      "directObjectType": "ipv4 route"
    },
    "local flag of <ipv4 route>": {
      "key": "local flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "local flag",
      "pluralPhrase": "local flags",
      "directObjectType": "ipv4 route"
    },
    "dynamic flag of <ipv4 route>": {
      "key": "dynamic flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "dynamic flag",
      "pluralPhrase": "dynamic flags",
      "directObjectType": "ipv4 route"
    },
    "default flag of <ipv4 route>": {
      "key": "default flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "default flag",
      "pluralPhrase": "default flags",
      "directObjectType": "ipv4 route"
    },
    "cache flag of <ipv4 route>": {
      "key": "cache flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "cache flag",
      "pluralPhrase": "cache flags",
      "directObjectType": "ipv4 route"
    },
    "broadcast flag of <ipv4 route>": {
      "key": "broadcast flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "broadcast flag",
      "pluralPhrase": "broadcast flags",
      "directObjectType": "ipv4 route"
    },
    "blackhole flag of <ipv4 route>": {
      "key": "blackhole flag of <ipv4 route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "blackhole flag",
      "pluralPhrase": "blackhole flags",
      "directObjectType": "ipv4 route"
    },
    "header of <action>": {
      "key": "header of <action>",
      "type": "property",
      "resultType": "fixlet_header",
      "singularPhrase": "header",
      "pluralPhrase": "headers",
      "directObjectType": "action"
    },
    "header <string> of <action>": {
      "key": "header <string> of <action>",
      "type": "property",
      "resultType": "fixlet_header",
      "singularPhrase": "header",
      "pluralPhrase": "headers",
      "indexType": "string",
      "directObjectType": "action"
    },
    "<application> as string": {
      "key": "<application> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "application",
      "phrase": "string"
    },
    "bes action status hash mismatch": {
      "key": "bes action status hash mismatch",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status hash mismatch",
      "pluralPhrase": "bes action statuses hash mismatch"
    },
    "bes action status disk limited": {
      "key": "bes action status disk limited",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status disk limited",
      "pluralPhrase": "bes action statuses disk limited"
    },
    "bes action status disk free limited": {
      "key": "bes action status disk free limited",
      "type": "property",
      "resultType": "bes action status",
      "singularPhrase": "bes action status disk free limited",
      "pluralPhrase": "bes action statuses disk free limited"
    },
    "success on run to completion of <bes fixlet action>": {
      "key": "success on run to completion of <bes fixlet action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "success on run to completion",
      "pluralPhrase": "success on run to completions",
      "directObjectType": "bes fixlet action"
    },
    "success on original relevance of <bes fixlet action>": {
      "key": "success on original relevance of <bes fixlet action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "success on original relevance",
      "pluralPhrase": "success on original relevances",
      "directObjectType": "bes fixlet action"
    },
    "success on custom relevance of <bes fixlet action>": {
      "key": "success on custom relevance of <bes fixlet action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "success on custom relevance",
      "pluralPhrase": "success on custom relevances",
      "directObjectType": "bes fixlet action"
    },
    "custom success relevance of <bes fixlet action>": {
      "key": "custom success relevance of <bes fixlet action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "custom success relevance",
      "pluralPhrase": "custom success relevances",
      "directObjectType": "bes fixlet action"
    },
    "sha2_512 of <string>": {
      "key": "sha2_512 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha2_512",
      "pluralPhrase": "sha2_512s",
      "directObjectType": "string"
    },
    "sha2_384 of <string>": {
      "key": "sha2_384 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha2_384",
      "pluralPhrase": "sha2_384s",
      "directObjectType": "string"
    },
    "sha2_256 of <string>": {
      "key": "sha2_256 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha2_256",
      "pluralPhrase": "sha2_256s",
      "directObjectType": "string"
    },
    "sha2_224 of <string>": {
      "key": "sha2_224 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha2_224",
      "pluralPhrase": "sha2_224s",
      "directObjectType": "string"
    },
    "md5 of <string>": {
      "key": "md5 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "md5",
      "pluralPhrase": "md5s",
      "directObjectType": "string"
    },
    "json of <string>": {
      "key": "json of <string>",
      "type": "property",
      "resultType": "json value",
      "singularPhrase": "json",
      "pluralPhrase": "jsons",
      "directObjectType": "string"
    },
    "type of <json value>": {
      "key": "type of <json value>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "json value"
    },
    "path <string> of <json value>": {
      "key": "path <string> of <json value>",
      "type": "property",
      "resultType": "json value",
      "singularPhrase": "path",
      "pluralPhrase": "paths",
      "indexType": "string",
      "directObjectType": "json value"
    },
    "key of <json value>": {
      "key": "key of <json value>",
      "type": "property",
      "resultType": "json key",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "directObjectType": "json value"
    },
    "key <string> of <json value>": {
      "key": "key <string> of <json value>",
      "type": "property",
      "resultType": "json key",
      "singularPhrase": "key",
      "pluralPhrase": "keys",
      "indexType": "string",
      "directObjectType": "json value"
    },
    "element of <json value>": {
      "key": "element of <json value>",
      "type": "property",
      "resultType": "json value",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "directObjectType": "json value"
    },
    "element <integer> of <json value>": {
      "key": "element <integer> of <json value>",
      "type": "property",
      "resultType": "json value",
      "singularPhrase": "element",
      "pluralPhrase": "elements",
      "indexType": "integer",
      "directObjectType": "json value"
    },
    "<json value> as string": {
      "key": "<json value> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "json value",
      "phrase": "string"
    },
    "<json value> as integer": {
      "key": "<json value> as integer",
      "type": "cast",
      "resultType": "integer",
      "argType": "json value",
      "phrase": "integer"
    },
    "<json value> as float": {
      "key": "<json value> as float",
      "type": "cast",
      "resultType": "floating point",
      "argType": "json value",
      "phrase": "float"
    },
    "<json value> as boolean": {
      "key": "<json value> as boolean",
      "type": "cast",
      "resultType": "boolean",
      "argType": "json value",
      "phrase": "boolean"
    },
    "<json value> = <json value>": {
      "key": "<json value> = <json value>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "json value",
      "op": "=",
      "rightType": "json value"
    },
    "value of <json key>": {
      "key": "value of <json key>",
      "type": "property",
      "resultType": "json value",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "json key"
    },
    "name of <json key>": {
      "key": "name of <json key>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "json key"
    },
    "<json key> as string": {
      "key": "<json key> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "json key",
      "phrase": "string"
    },
    "<json key> = <json key>": {
      "key": "<json key> = <json key>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "json key",
      "op": "=",
      "rightType": "json key"
    },
    "padded string of <bit set>": {
      "key": "padded string of <bit set>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "padded string",
      "pluralPhrase": "padded strings",
      "directObjectType": "bit set"
    },
    "ldap directory of <bes user>": {
      "key": "ldap directory of <bes user>",
      "type": "property",
      "resultType": "bes ldap directory",
      "singularPhrase": "ldap directory",
      "pluralPhrase": "ldap directories",
      "directObjectType": "bes user"
    },
    "distinguished name of <bes user>": {
      "key": "distinguished name of <bes user>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "distinguished name",
      "pluralPhrase": "distinguished names",
      "directObjectType": "bes user"
    },
    "approver role of <bes user>": {
      "key": "approver role of <bes user>",
      "type": "property",
      "resultType": "bes role",
      "singularPhrase": "approver role",
      "pluralPhrase": "approver roles",
      "directObjectType": "bes user"
    },
    "term of <bes product>": {
      "key": "term of <bes product>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "term",
      "pluralPhrase": "terms",
      "directObjectType": "bes product"
    },
    "perpetual of <bes product>": {
      "key": "perpetual of <bes product>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "perpetual",
      "pluralPhrase": "perpetuals",
      "directObjectType": "bes product"
    },
    "perpetual maintenance of <bes product>": {
      "key": "perpetual maintenance of <bes product>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "perpetual maintenance",
      "pluralPhrase": "perpetual maintenances",
      "directObjectType": "bes product"
    },
    "legacy of <bes product>": {
      "key": "legacy of <bes product>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "legacy",
      "pluralPhrase": "legacies",
      "directObjectType": "bes product"
    },
    "priority of <bes ldap directory server>": {
      "key": "priority of <bes ldap directory server>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "priority",
      "pluralPhrase": "priorities",
      "directObjectType": "bes ldap directory server"
    },
    "port of <bes ldap directory server>": {
      "key": "port of <bes ldap directory server>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "port",
      "pluralPhrase": "ports",
      "directObjectType": "bes ldap directory server"
    },
    "host of <bes ldap directory server>": {
      "key": "host of <bes ldap directory server>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "host",
      "pluralPhrase": "hosts",
      "directObjectType": "bes ldap directory server"
    },
    "user filter of <bes ldap directory>": {
      "key": "user filter of <bes ldap directory>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "user filter",
      "pluralPhrase": "user filters",
      "directObjectType": "bes ldap directory"
    },
    "use ssl of <bes ldap directory>": {
      "key": "use ssl of <bes ldap directory>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "use ssl",
      "pluralPhrase": "use ssls",
      "directObjectType": "bes ldap directory"
    },
    "uid attribute of <bes ldap directory>": {
      "key": "uid attribute of <bes ldap directory>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "uid attribute",
      "pluralPhrase": "uid attributes",
      "directObjectType": "bes ldap directory"
    },
    "server of <bes ldap directory>": {
      "key": "server of <bes ldap directory>",
      "type": "property",
      "resultType": "bes ldap directory server",
      "singularPhrase": "server",
      "pluralPhrase": "servers",
      "directObjectType": "bes ldap directory"
    },
    "name of <bes ldap directory>": {
      "key": "name of <bes ldap directory>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "bes ldap directory"
    },
    "login user of <bes ldap directory>": {
      "key": "login user of <bes ldap directory>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "login user",
      "pluralPhrase": "login users",
      "directObjectType": "bes ldap directory"
    },
    "id of <bes ldap directory>": {
      "key": "id of <bes ldap directory>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "bes ldap directory"
    },
    "group filter of <bes ldap directory>": {
      "key": "group filter of <bes ldap directory>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "group filter",
      "pluralPhrase": "group filters",
      "directObjectType": "bes ldap directory"
    },
    "global catalog of <bes ldap directory>": {
      "key": "global catalog of <bes ldap directory>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "global catalog",
      "pluralPhrase": "global catalogs",
      "directObjectType": "bes ldap directory"
    },
    "base distinguished name of <bes ldap directory>": {
      "key": "base distinguished name of <bes ldap directory>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "base distinguished name",
      "pluralPhrase": "base distinguished namse",
      "directObjectType": "bes ldap directory"
    },
    "active directory of <bes ldap directory>": {
      "key": "active directory of <bes ldap directory>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "active directory",
      "pluralPhrase": "active directories",
      "directObjectType": "bes ldap directory"
    },
    "parent relevance of <bes fixlet>": {
      "key": "parent relevance of <bes fixlet>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "parent relevance",
      "pluralPhrase": "parent relevances",
      "directObjectType": "bes fixlet"
    },
    "secure parameter flag of <bes action>": {
      "key": "secure parameter flag of <bes action>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "secure parameter flag",
      "pluralPhrase": "secure parameter flags",
      "directObjectType": "bes action"
    },
    "day_of_week constraint of <bes action>": {
      "key": "day_of_week constraint of <bes action>",
      "type": "property",
      "resultType": "day of week",
      "singularPhrase": "day_of_week constraint",
      "pluralPhrase": "day_of_week constraints",
      "directObjectType": "bes action"
    },
    "proxy agent service": {
      "key": "proxy agent service",
      "type": "property",
      "resultType": "service",
      "singularPhrase": "proxy agent service",
      "pluralPhrase": "proxy agent services"
    },
    "character set <client>": {
      "key": "character set <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "character set",
      "pluralPhrase": "character sets",
      "indexType": "client"
    },
    "banned prefetch plugin <client>": {
      "key": "banned prefetch plugin <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "banned prefetch plugin",
      "pluralPhrase": "banned prefetch plugins",
      "indexType": "client"
    },
    "schema of <sqlite table>": {
      "key": "schema of <sqlite table>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "schema",
      "pluralPhrase": "schemas",
      "directObjectType": "sqlite table"
    },
    "name of <sqlite table>": {
      "key": "name of <sqlite table>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "sqlite table"
    },
    "index of <sqlite table>": {
      "key": "index of <sqlite table>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "index",
      "pluralPhrase": "indices",
      "directObjectType": "sqlite table"
    },
    "column type of <sqlite table>": {
      "key": "column type of <sqlite table>",
      "type": "property",
      "resultType": "sqlite column type",
      "singularPhrase": "column type",
      "pluralPhrase": "column types",
      "directObjectType": "sqlite table"
    },
    "column type <string> of <sqlite table>": {
      "key": "column type <string> of <sqlite table>",
      "type": "property",
      "resultType": "sqlite column type",
      "singularPhrase": "column type",
      "pluralPhrase": "column types",
      "indexType": "string",
      "directObjectType": "sqlite table"
    },
    "column type <integer> of <sqlite table>": {
      "key": "column type <integer> of <sqlite table>",
      "type": "property",
      "resultType": "sqlite column type",
      "singularPhrase": "column type",
      "pluralPhrase": "column types",
      "indexType": "integer",
      "directObjectType": "sqlite table"
    },
    "<sqlite table> as string": {
      "key": "<sqlite table> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "sqlite table",
      "phrase": "string"
    },
    "row of <sqlite statement>": {
      "key": "row of <sqlite statement>",
      "type": "property",
      "resultType": "sqlite row",
      "singularPhrase": "row",
      "pluralPhrase": "rows",
      "directObjectType": "sqlite statement"
    },
    "column <string> of <sqlite row>": {
      "key": "column <string> of <sqlite row>",
      "type": "property",
      "resultType": "sqlite column",
      "singularPhrase": "column",
      "pluralPhrase": "columns",
      "indexType": "string",
      "directObjectType": "sqlite row"
    },
    "column <integer> of <sqlite row>": {
      "key": "column <integer> of <sqlite row>",
      "type": "property",
      "resultType": "sqlite column",
      "singularPhrase": "column",
      "pluralPhrase": "columns",
      "indexType": "integer",
      "directObjectType": "sqlite row"
    },
    "<sqlite row> as string": {
      "key": "<sqlite row> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "sqlite row",
      "phrase": "string"
    },
    "table of <sqlite database>": {
      "key": "table of <sqlite database>",
      "type": "property",
      "resultType": "sqlite table",
      "singularPhrase": "table",
      "pluralPhrase": "tables",
      "directObjectType": "sqlite database"
    },
    "table <string> of <sqlite database>": {
      "key": "table <string> of <sqlite database>",
      "type": "property",
      "resultType": "sqlite table",
      "singularPhrase": "table",
      "pluralPhrase": "tables",
      "indexType": "string",
      "directObjectType": "sqlite database"
    },
    "statement <string> of <sqlite database>": {
      "key": "statement <string> of <sqlite database>",
      "type": "property",
      "resultType": "sqlite statement",
      "singularPhrase": "statement",
      "pluralPhrase": "statements",
      "indexType": "string",
      "directObjectType": "sqlite database"
    },
    "encoding of <sqlite database>": {
      "key": "encoding of <sqlite database>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "encoding",
      "pluralPhrase": "encodings",
      "directObjectType": "sqlite database"
    },
    "<sqlite database> as string": {
      "key": "<sqlite database> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "sqlite database",
      "phrase": "string"
    },
    "type of <sqlite column type>": {
      "key": "type of <sqlite column type>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "sqlite column type"
    },
    "text of <sqlite column type>": {
      "key": "text of <sqlite column type>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "text",
      "pluralPhrase": "texts",
      "directObjectType": "sqlite column type"
    },
    "null of <sqlite column type>": {
      "key": "null of <sqlite column type>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "null",
      "pluralPhrase": "nulls",
      "directObjectType": "sqlite column type"
    },
    "name of <sqlite column type>": {
      "key": "name of <sqlite column type>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "sqlite column type"
    },
    "integer of <sqlite column type>": {
      "key": "integer of <sqlite column type>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "integer",
      "pluralPhrase": "integers",
      "directObjectType": "sqlite column type"
    },
    "float of <sqlite column type>": {
      "key": "float of <sqlite column type>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "float",
      "pluralPhrase": "floats",
      "directObjectType": "sqlite column type"
    },
    "blob of <sqlite column type>": {
      "key": "blob of <sqlite column type>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "blob",
      "pluralPhrase": "blobs",
      "directObjectType": "sqlite column type"
    },
    "<sqlite column type> as string": {
      "key": "<sqlite column type> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "sqlite column type",
      "phrase": "string"
    },
    "type of <sqlite column>": {
      "key": "type of <sqlite column>",
      "type": "property",
      "resultType": "sqlite column type",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "sqlite column"
    },
    "name of <sqlite column>": {
      "key": "name of <sqlite column>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "sqlite column"
    },
    "<sqlite column> as string": {
      "key": "<sqlite column> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "sqlite column",
      "phrase": "string"
    },
    "extended feature mask of <processor>": {
      "key": "extended feature mask of <processor>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "extended feature mask",
      "pluralPhrase": "extended feature masks",
      "directObjectType": "processor"
    },
    "ppid of <process>": {
      "key": "ppid of <process>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "ppid",
      "pluralPhrase": "ppids",
      "directObjectType": "process"
    },
    "effective user of <process>": {
      "key": "effective user of <process>",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "effective user",
      "pluralPhrase": "effective users",
      "directObjectType": "process"
    },
    "embedded of <operating system>": {
      "key": "embedded of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "embedded",
      "pluralPhrase": "embeddeds",
      "directObjectType": "operating system"
    },
    "primary country of <language>": {
      "key": "primary country of <language>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "primary country",
      "pluralPhrase": "primary countries",
      "directObjectType": "language"
    },
    "primary codeset of <language>": {
      "key": "primary codeset of <language>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "primary codeset",
      "pluralPhrase": "primary codesets",
      "directObjectType": "language"
    },
    "volume of <filesystem>": {
      "key": "volume of <filesystem>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "volume",
      "pluralPhrase": "volumes",
      "directObjectType": "filesystem"
    },
    "sqlite database of <file>": {
      "key": "sqlite database of <file>",
      "type": "property",
      "resultType": "sqlite database",
      "singularPhrase": "sqlite database",
      "pluralPhrase": "sqlite databases",
      "directObjectType": "file"
    },
    "sha2_512 of <file>": {
      "key": "sha2_512 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha2_512",
      "pluralPhrase": "sha2_512s",
      "directObjectType": "file"
    },
    "sha2_384 of <file>": {
      "key": "sha2_384 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha2_384",
      "pluralPhrase": "sha2_384s",
      "directObjectType": "file"
    },
    "sha2_256 of <file>": {
      "key": "sha2_256 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha2_256",
      "pluralPhrase": "sha2_256s",
      "directObjectType": "file"
    },
    "sha2_224 of <file>": {
      "key": "sha2_224 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha2_224",
      "pluralPhrase": "sha2_224s",
      "directObjectType": "file"
    },
    "md5 of <file>": {
      "key": "md5 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "md5",
      "pluralPhrase": "md5s",
      "directObjectType": "file"
    },
    "json of <file>": {
      "key": "json of <file>",
      "type": "property",
      "resultType": "json value",
      "singularPhrase": "json",
      "pluralPhrase": "jsons",
      "directObjectType": "file"
    },
    "track fixlet of <evaluation cycle>": {
      "key": "track fixlet of <evaluation cycle>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "track fixlet",
      "pluralPhrase": "track fixlets",
      "directObjectType": "evaluation cycle"
    },
    "total duration of <evaluation cycle>": {
      "key": "total duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "total duration",
      "pluralPhrase": "total durations",
      "directObjectType": "evaluation cycle"
    },
    "sleep percent of <evaluation cycle>": {
      "key": "sleep percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "sleep percent",
      "pluralPhrase": "sleep percents",
      "directObjectType": "evaluation cycle"
    },
    "sleep duration of <evaluation cycle>": {
      "key": "sleep duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "sleep duration",
      "pluralPhrase": "sleep durations",
      "directObjectType": "evaluation cycle"
    },
    "report percent of <evaluation cycle>": {
      "key": "report percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "report percent",
      "pluralPhrase": "report percents",
      "directObjectType": "evaluation cycle"
    },
    "report duration of <evaluation cycle>": {
      "key": "report duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "report duration",
      "pluralPhrase": "report durations",
      "directObjectType": "evaluation cycle"
    },
    "relevance percent of <evaluation cycle>": {
      "key": "relevance percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "relevance percent",
      "pluralPhrase": "relevance percents",
      "directObjectType": "evaluation cycle"
    },
    "relevance duration of <evaluation cycle>": {
      "key": "relevance duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "relevance duration",
      "pluralPhrase": "relevance durations",
      "directObjectType": "evaluation cycle"
    },
    "relay select percent of <evaluation cycle>": {
      "key": "relay select percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "relay select percent",
      "pluralPhrase": "relay select percents",
      "directObjectType": "evaluation cycle"
    },
    "relay select duration of <evaluation cycle>": {
      "key": "relay select duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "relay select duration",
      "pluralPhrase": "relay select durations",
      "directObjectType": "evaluation cycle"
    },
    "quiet mode percent of <evaluation cycle>": {
      "key": "quiet mode percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "quiet mode percent",
      "pluralPhrase": "quiet mode percents",
      "directObjectType": "evaluation cycle"
    },
    "quiet mode duration of <evaluation cycle>": {
      "key": "quiet mode duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "quiet mode duration",
      "pluralPhrase": "quiet mode durations",
      "directObjectType": "evaluation cycle"
    },
    "property percent of <evaluation cycle>": {
      "key": "property percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "property percent",
      "pluralPhrase": "property percents",
      "directObjectType": "evaluation cycle"
    },
    "property duration of <evaluation cycle>": {
      "key": "property duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "property duration",
      "pluralPhrase": "property durations",
      "directObjectType": "evaluation cycle"
    },
    "other percent of <evaluation cycle>": {
      "key": "other percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "other percent",
      "pluralPhrase": "other percents",
      "directObjectType": "evaluation cycle"
    },
    "other duration of <evaluation cycle>": {
      "key": "other duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "other duration",
      "pluralPhrase": "other durations",
      "directObjectType": "evaluation cycle"
    },
    "gather percent of <evaluation cycle>": {
      "key": "gather percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "gather percent",
      "pluralPhrase": "gather percents",
      "directObjectType": "evaluation cycle"
    },
    "gather duration of <evaluation cycle>": {
      "key": "gather duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "gather duration",
      "pluralPhrase": "gather durations",
      "directObjectType": "evaluation cycle"
    },
    "archive percent of <evaluation cycle>": {
      "key": "archive percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "archive percent",
      "pluralPhrase": "archive percents",
      "directObjectType": "evaluation cycle"
    },
    "archive duration of <evaluation cycle>": {
      "key": "archive duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "archive duration",
      "pluralPhrase": "archive durations",
      "directObjectType": "evaluation cycle"
    },
    "api percent of <evaluation cycle>": {
      "key": "api percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "api percent",
      "pluralPhrase": "api percents",
      "directObjectType": "evaluation cycle"
    },
    "api duration of <evaluation cycle>": {
      "key": "api duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "api duration",
      "pluralPhrase": "api durations",
      "directObjectType": "evaluation cycle"
    },
    "action percent of <evaluation cycle>": {
      "key": "action percent of <evaluation cycle>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "action percent",
      "pluralPhrase": "action percents",
      "directObjectType": "evaluation cycle"
    },
    "action duration of <evaluation cycle>": {
      "key": "action duration of <evaluation cycle>",
      "type": "property",
      "resultType": "time interval",
      "singularPhrase": "action duration",
      "pluralPhrase": "action durations",
      "directObjectType": "evaluation cycle"
    },
    "storage folder of <client>": {
      "key": "storage folder of <client>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "storage folder",
      "pluralPhrase": "storage folders",
      "directObjectType": "client"
    },
    "local character set of <client>": {
      "key": "local character set of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "local character set",
      "pluralPhrase": "local character sets",
      "directObjectType": "client"
    },
    "last report time of <client>": {
      "key": "last report time of <client>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "last report time",
      "pluralPhrase": "last report times",
      "directObjectType": "client"
    },
    "deployment character set of <client>": {
      "key": "deployment character set of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "deployment character set",
      "pluralPhrase": "deployment character sets",
      "directObjectType": "client"
    },
    "data folder of <client>": {
      "key": "data folder of <client>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "data folder",
      "pluralPhrase": "data folders",
      "directObjectType": "client"
    },
    "certificate of <client>": {
      "key": "certificate of <client>",
      "type": "property",
      "resultType": "x509 certificate",
      "singularPhrase": "certificate",
      "pluralPhrase": "certificates",
      "directObjectType": "client"
    },
    "authenticating of <client>": {
      "key": "authenticating of <client>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "authenticating",
      "pluralPhrase": "authenticatings",
      "directObjectType": "client"
    },
    "logged on group <string> of <active directory server>": {
      "key": "logged on group <string> of <active directory server>",
      "type": "property",
      "resultType": "active directory group",
      "singularPhrase": "logged on group",
      "pluralPhrase": "logged on groups",
      "indexType": "string",
      "directObjectType": "active directory server"
    },
    "local group <string> of <active directory server>": {
      "key": "local group <string> of <active directory server>",
      "type": "property",
      "resultType": "active directory group",
      "singularPhrase": "local group",
      "pluralPhrase": "local groups",
      "indexType": "string",
      "directObjectType": "active directory server"
    },
    "user interval <activity history>": {
      "key": "user interval <activity history>",
      "type": "property",
      "resultType": "system power interval",
      "singularPhrase": "user interval",
      "pluralPhrase": "user intervals",
      "indexType": "activity history"
    },
    "system x64 file <string>": {
      "key": "system x64 file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "system x64 file",
      "pluralPhrase": "system x64 files",
      "indexType": "string"
    },
    "system x32 file <string>": {
      "key": "system x32 file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "system x32 file",
      "pluralPhrase": "system x32 files",
      "indexType": "string"
    },
    "security descriptor <string>": {
      "key": "security descriptor <string>",
      "type": "property",
      "resultType": "security descriptor",
      "singularPhrase": "security descriptor",
      "pluralPhrase": "security descriptors",
      "indexType": "string"
    },
    "program files x64 folder": {
      "key": "program files x64 folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "program files x64 folder",
      "pluralPhrase": "program files x64 folders"
    },
    "program files x32 folder": {
      "key": "program files x32 folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "program files x32 folder",
      "pluralPhrase": "program files x32 folders"
    },
    "program files folder": {
      "key": "program files folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "program files folder",
      "pluralPhrase": "program files folders"
    },
    "native system folder": {
      "key": "native system folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "native system folder",
      "pluralPhrase": "native system folders"
    },
    "native program files folder": {
      "key": "native program files folder",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "native program files folder",
      "pluralPhrase": "native program files folders"
    },
    "ssid of <wifi>": {
      "key": "ssid of <wifi>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "ssid",
      "pluralPhrase": "ssids",
      "directObjectType": "wifi"
    },
    "secured of <wifi>": {
      "key": "secured of <wifi>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "secured",
      "pluralPhrase": "secureds",
      "directObjectType": "wifi"
    },
    "encryption of <wifi>": {
      "key": "encryption of <wifi>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "encryption",
      "pluralPhrase": "encryptions",
      "directObjectType": "wifi"
    },
    "time wait of <tcp state>": {
      "key": "time wait of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "time wait",
      "pluralPhrase": "time waits",
      "directObjectType": "tcp state"
    },
    "syn sent of <tcp state>": {
      "key": "syn sent of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "syn sent",
      "pluralPhrase": "syn sents",
      "directObjectType": "tcp state"
    },
    "syn received of <tcp state>": {
      "key": "syn received of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "syn received",
      "pluralPhrase": "syn receiveds",
      "directObjectType": "tcp state"
    },
    "listening of <tcp state>": {
      "key": "listening of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "listening",
      "pluralPhrase": "listenings",
      "directObjectType": "tcp state"
    },
    "last ack of <tcp state>": {
      "key": "last ack of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "last ack",
      "pluralPhrase": "last acks",
      "directObjectType": "tcp state"
    },
    "fin wait two of <tcp state>": {
      "key": "fin wait two of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fin wait two",
      "pluralPhrase": "fin wait twos",
      "directObjectType": "tcp state"
    },
    "fin wait one of <tcp state>": {
      "key": "fin wait one of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "fin wait one",
      "pluralPhrase": "fin wait ones",
      "directObjectType": "tcp state"
    },
    "established of <tcp state>": {
      "key": "established of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "established",
      "pluralPhrase": "establisheds",
      "directObjectType": "tcp state"
    },
    "delete tcb of <tcp state>": {
      "key": "delete tcb of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "delete tcb",
      "pluralPhrase": "delete tcbs",
      "directObjectType": "tcp state"
    },
    "closing of <tcp state>": {
      "key": "closing of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "closing",
      "pluralPhrase": "closings",
      "directObjectType": "tcp state"
    },
    "closed of <tcp state>": {
      "key": "closed of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "closed",
      "pluralPhrase": "closeds",
      "directObjectType": "tcp state"
    },
    "close wait of <tcp state>": {
      "key": "close wait of <tcp state>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "close wait",
      "pluralPhrase": "close waits",
      "directObjectType": "tcp state"
    },
    "<tcp state> as string": {
      "key": "<tcp state> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "tcp state",
      "phrase": "string"
    },
    "expand x32 environment string of <string>": {
      "key": "expand x32 environment string of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "expand x32 environment string",
      "pluralPhrase": "expand x32 environment strings",
      "directObjectType": "string"
    },
    "udp of <socket>": {
      "key": "udp of <socket>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "udp",
      "pluralPhrase": "udps",
      "directObjectType": "socket"
    },
    "tcp state of <socket>": {
      "key": "tcp state of <socket>",
      "type": "property",
      "resultType": "tcp state",
      "singularPhrase": "tcp state",
      "pluralPhrase": "tcp states",
      "directObjectType": "socket"
    },
    "tcp of <socket>": {
      "key": "tcp of <socket>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "tcp",
      "pluralPhrase": "tcps",
      "directObjectType": "socket"
    },
    "remote port of <socket>": {
      "key": "remote port of <socket>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "remote port",
      "pluralPhrase": "remote ports",
      "directObjectType": "socket"
    },
    "remote address of <socket>": {
      "key": "remote address of <socket>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "remote address",
      "pluralPhrase": "remote addresses",
      "directObjectType": "socket"
    },
    "process of <socket>": {
      "key": "process of <socket>",
      "type": "property",
      "resultType": "process",
      "singularPhrase": "process",
      "pluralPhrase": "processes",
      "directObjectType": "socket"
    },
    "local port of <socket>": {
      "key": "local port of <socket>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "local port",
      "pluralPhrase": "local ports",
      "directObjectType": "socket"
    },
    "local address of <socket>": {
      "key": "local address of <socket>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "local address",
      "pluralPhrase": "local addresses",
      "directObjectType": "socket"
    },
    "<registry key value> as system x64 file": {
      "key": "<registry key value> as system x64 file",
      "type": "cast",
      "resultType": "file",
      "argType": "registry key value",
      "phrase": "system x64 file"
    },
    "<registry key value> as system x32 file": {
      "key": "<registry key value> as system x32 file",
      "type": "cast",
      "resultType": "file",
      "argType": "registry key value",
      "phrase": "system x32 file"
    },
    "pathname of <registry key>": {
      "key": "pathname of <registry key>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "pathname",
      "pluralPhrase": "pathnames",
      "directObjectType": "registry key"
    },
    "parent key of <registry key>": {
      "key": "parent key of <registry key>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "parent key",
      "pluralPhrase": "parent keys",
      "directObjectType": "registry key"
    },
    "<registry key> as string": {
      "key": "<registry key> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "registry key",
      "phrase": "string"
    },
    "current user key of <registry>": {
      "key": "current user key of <registry>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "current user key",
      "pluralPhrase": "current user keys",
      "directObjectType": "registry"
    },
    "wifi of <network adapter>": {
      "key": "wifi of <network adapter>",
      "type": "property",
      "resultType": "wifi",
      "singularPhrase": "wifi",
      "pluralPhrase": "wifis",
      "directObjectType": "network adapter"
    },
    "socket of <network>": {
      "key": "socket of <network>",
      "type": "property",
      "resultType": "socket",
      "singularPhrase": "socket",
      "pluralPhrase": "sockets",
      "directObjectType": "network"
    },
    "user key of <logged on user>": {
      "key": "user key of <logged on user>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "user key",
      "pluralPhrase": "user keys",
      "directObjectType": "logged on user"
    },
    "volume of <drive>": {
      "key": "volume of <drive>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "volume",
      "pluralPhrase": "volumes",
      "directObjectType": "drive"
    },
    "authenticating of <current relay>": {
      "key": "authenticating of <current relay>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "authenticating",
      "pluralPhrase": "authenticatings",
      "directObjectType": "current relay"
    },
    "domain user of <active directory local user>": {
      "key": "domain user of <active directory local user>",
      "type": "property",
      "resultType": "user",
      "singularPhrase": "domain user",
      "pluralPhrase": "domain users",
      "directObjectType": "active directory local user"
    },
    "winrt package": {
      "key": "winrt package",
      "type": "property",
      "resultType": "winrt package",
      "singularPhrase": "winrt package",
      "pluralPhrase": "winrt packages"
    },
    "winrt package <string>": {
      "key": "winrt package <string>",
      "type": "property",
      "resultType": "winrt package",
      "singularPhrase": "winrt package",
      "pluralPhrase": "winrt packages",
      "indexType": "string"
    },
    "sid of <winrt package user information>": {
      "key": "sid of <winrt package user information>",
      "type": "property",
      "resultType": "security identifier",
      "singularPhrase": "sid",
      "pluralPhrase": "sids",
      "directObjectType": "winrt package user information"
    },
    "install state of <winrt package user information>": {
      "key": "install state of <winrt package user information>",
      "type": "property",
      "resultType": "winrt enumeration",
      "singularPhrase": "install state",
      "pluralPhrase": "install states",
      "directObjectType": "winrt package user information"
    },
    "<winrt package user information> as string": {
      "key": "<winrt package user information> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "winrt package user information",
      "phrase": "string"
    },
    "version of <winrt package id>": {
      "key": "version of <winrt package id>",
      "type": "property",
      "resultType": "version",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "winrt package id"
    },
    "publisher of <winrt package id>": {
      "key": "publisher of <winrt package id>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "publisher",
      "pluralPhrase": "publishers",
      "directObjectType": "winrt package id"
    },
    "publisher id of <winrt package id>": {
      "key": "publisher id of <winrt package id>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "publisher id",
      "pluralPhrase": "publisher ids",
      "directObjectType": "winrt package id"
    },
    "name of <winrt package id>": {
      "key": "name of <winrt package id>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "winrt package id"
    },
    "full name of <winrt package id>": {
      "key": "full name of <winrt package id>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "full name",
      "pluralPhrase": "full names",
      "directObjectType": "winrt package id"
    },
    "family name of <winrt package id>": {
      "key": "family name of <winrt package id>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "family name",
      "pluralPhrase": "family names",
      "directObjectType": "winrt package id"
    },
    "architecture of <winrt package id>": {
      "key": "architecture of <winrt package id>",
      "type": "property",
      "resultType": "winrt enumeration",
      "singularPhrase": "architecture",
      "pluralPhrase": "architectures",
      "directObjectType": "winrt package id"
    },
    "winrt package user of <winrt package>": {
      "key": "winrt package user of <winrt package>",
      "type": "property",
      "resultType": "winrt package user information",
      "singularPhrase": "winrt package user",
      "pluralPhrase": "winrt package users",
      "directObjectType": "winrt package"
    },
    "installed path of <winrt package>": {
      "key": "installed path of <winrt package>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "installed path",
      "pluralPhrase": "installed paths",
      "directObjectType": "winrt package"
    },
    "id of <winrt package>": {
      "key": "id of <winrt package>",
      "type": "property",
      "resultType": "winrt package id",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "winrt package"
    },
    "<winrt package> as string": {
      "key": "<winrt package> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "winrt package",
      "phrase": "string"
    },
    "value of <winrt enumeration>": {
      "key": "value of <winrt enumeration>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "winrt enumeration"
    },
    "name of <winrt enumeration>": {
      "key": "name of <winrt enumeration>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "winrt enumeration"
    },
    "<winrt enumeration> as string": {
      "key": "<winrt enumeration> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "winrt enumeration",
      "phrase": "string"
    },
    "winrt package of <user>": {
      "key": "winrt package of <user>",
      "type": "property",
      "resultType": "winrt package",
      "singularPhrase": "winrt package",
      "pluralPhrase": "winrt packages",
      "directObjectType": "user"
    },
    "percent encode <string>": {
      "key": "percent encode <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "percent encode",
      "pluralPhrase": "percent encodes",
      "indexType": "string"
    },
    "percent decode <string>": {
      "key": "percent decode <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "percent decode",
      "pluralPhrase": "percent decodes",
      "indexType": "string"
    },
    "bes computer <integer>": {
      "key": "bes computer <integer>",
      "type": "property",
      "resultType": "bes computer",
      "singularPhrase": "bes computer",
      "pluralPhrase": "bes computers",
      "indexType": "integer"
    },
    "<time of day with time zone> <= <time of day with time zone>": {
      "key": "<time of day with time zone> <= <time of day with time zone>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time of day with time zone",
      "op": "<=",
      "rightType": "time of day with time zone"
    },
    "<time of day with time zone> < <time of day with time zone>": {
      "key": "<time of day with time zone> < <time of day with time zone>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "time of day with time zone",
      "op": "<",
      "rightType": "time of day with time zone"
    },
    "sha512 of <string>": {
      "key": "sha512 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha512",
      "pluralPhrase": "sha512s",
      "directObjectType": "string"
    },
    "sha384 of <string>": {
      "key": "sha384 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha384",
      "pluralPhrase": "sha384s",
      "directObjectType": "string"
    },
    "sha256 of <string>": {
      "key": "sha256 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha256",
      "pluralPhrase": "sha256s",
      "directObjectType": "string"
    },
    "sha224 of <string>": {
      "key": "sha224 of <string>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha224",
      "pluralPhrase": "sha224s",
      "directObjectType": "string"
    },
    "signature hash algorithm of <license>": {
      "key": "signature hash algorithm of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "signature hash algorithm",
      "pluralPhrase": "signature hash algorithms",
      "directObjectType": "license"
    },
    "sha256 download of <license>": {
      "key": "sha256 download of <license>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "sha256 download",
      "pluralPhrase": "sha256 downloads",
      "directObjectType": "license"
    },
    "enhanced security of <license>": {
      "key": "enhanced security of <license>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "enhanced security",
      "pluralPhrase": "enhanced securities",
      "directObjectType": "license"
    },
    "effective signature hash algorithm of <license>": {
      "key": "effective signature hash algorithm of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "effective signature hash algorithm",
      "pluralPhrase": "effective signature hash algorithms",
      "directObjectType": "license"
    },
    "effective download hash algorithm of <license>": {
      "key": "effective download hash algorithm of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "effective download hash algorithm",
      "pluralPhrase": "effective download hash algorithms",
      "directObjectType": "license"
    },
    "download hash algorithm of <license>": {
      "key": "download hash algorithm of <license>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "download hash algorithm",
      "pluralPhrase": "download hash algorithms",
      "directObjectType": "license"
    },
    "sqrt of <integer>": {
      "key": "sqrt of <integer>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "sqrt",
      "pluralPhrase": "sqrts",
      "directObjectType": "integer"
    },
    "sqrt of <floating point>": {
      "key": "sqrt of <floating point>",
      "type": "property",
      "resultType": "floating point",
      "singularPhrase": "sqrt",
      "pluralPhrase": "sqrts",
      "directObjectType": "floating point"
    },
    "show other action flag of <bes user>": {
      "key": "show other action flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "show other action flag",
      "pluralPhrase": "show other action flags",
      "directObjectType": "bes user"
    },
    "mvs count of <bes product>": {
      "key": "mvs count of <bes product>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "mvs count",
      "pluralPhrase": "mvs counts",
      "directObjectType": "bes product"
    },
    "remediated flag of <bes fixlet result>": {
      "key": "remediated flag of <bes fixlet result>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "remediated flag",
      "pluralPhrase": "remediated flags",
      "directObjectType": "bes fixlet result"
    },
    "bes computer group set of <bes computer>": {
      "key": "bes computer group set of <bes computer>",
      "type": "property",
      "resultType": "bes computer group set",
      "singularPhrase": "bes computer group set",
      "pluralPhrase": "bes computer group sets",
      "directObjectType": "bes computer"
    },
    "bes computer group of <bes computer>": {
      "key": "bes computer group of <bes computer>",
      "type": "property",
      "resultType": "bes computer group",
      "singularPhrase": "bes computer group",
      "pluralPhrase": "bes computer groups",
      "directObjectType": "bes computer"
    },
    "mime field of <bes action>": {
      "key": "mime field of <bes action>",
      "type": "property",
      "resultType": "mime field",
      "singularPhrase": "mime field",
      "pluralPhrase": "mime fields",
      "directObjectType": "bes action"
    },
    "mime field <string> of <bes action>": {
      "key": "mime field <string> of <bes action>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "mime field",
      "pluralPhrase": "mime fields",
      "indexType": "string",
      "directObjectType": "bes action"
    },
    "routing table": {
      "key": "routing table",
      "type": "property",
      "resultType": "routing table",
      "singularPhrase": "routing table",
      "pluralPhrase": "routing tables"
    },
    "route of <routing table>": {
      "key": "route of <routing table>",
      "type": "property",
      "resultType": "route",
      "singularPhrase": "route",
      "pluralPhrase": "routes",
      "directObjectType": "routing table"
    },
    "window of <route>": {
      "key": "window of <route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "window",
      "pluralPhrase": "windows",
      "directObjectType": "route"
    },
    "up flag of <route>": {
      "key": "up flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "up flag",
      "pluralPhrase": "up flags",
      "directObjectType": "route"
    },
    "reject flag of <route>": {
      "key": "reject flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "reject flag",
      "pluralPhrase": "reject flags",
      "directObjectType": "route"
    },
    "mtu of <route>": {
      "key": "mtu of <route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "mtu",
      "pluralPhrase": "mtus",
      "directObjectType": "route"
    },
    "metric of <route>": {
      "key": "metric of <route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "metric",
      "pluralPhrase": "metrics",
      "directObjectType": "route"
    },
    "mask of <route>": {
      "key": "mask of <route>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "mask",
      "pluralPhrase": "masks",
      "directObjectType": "route"
    },
    "irtt of <route>": {
      "key": "irtt of <route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "irtt",
      "pluralPhrase": "irtts",
      "directObjectType": "route"
    },
    "interface of <route>": {
      "key": "interface of <route>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "interface",
      "pluralPhrase": "interfaces",
      "directObjectType": "route"
    },
    "host flag of <route>": {
      "key": "host flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "host flag",
      "pluralPhrase": "host flags",
      "directObjectType": "route"
    },
    "gateway of <route>": {
      "key": "gateway of <route>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "gateway",
      "pluralPhrase": "gateways",
      "directObjectType": "route"
    },
    "gateway flag of <route>": {
      "key": "gateway flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "gateway flag",
      "pluralPhrase": "gateway flags",
      "directObjectType": "route"
    },
    "destination of <route>": {
      "key": "destination of <route>",
      "type": "property",
      "resultType": "ipv4or6 address",
      "singularPhrase": "destination",
      "pluralPhrase": "destinations",
      "directObjectType": "route"
    },
    "update level of <operating system>": {
      "key": "update level of <operating system>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "update level",
      "pluralPhrase": "update levels",
      "directObjectType": "operating system"
    },
    "android of <operating system>": {
      "key": "android of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "android",
      "pluralPhrase": "androids",
      "directObjectType": "operating system"
    },
    "setting of <manual group>": {
      "key": "setting of <manual group>",
      "type": "property",
      "resultType": "setting",
      "singularPhrase": "setting",
      "pluralPhrase": "settings",
      "directObjectType": "manual group"
    },
    "member of <manual group>": {
      "key": "member of <manual group>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "member",
      "pluralPhrase": "members",
      "directObjectType": "manual group"
    },
    "<manual group> as string": {
      "key": "<manual group> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "manual group",
      "phrase": "string"
    },
    "sha512 of <file>": {
      "key": "sha512 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha512",
      "pluralPhrase": "sha512s",
      "directObjectType": "file"
    },
    "sha384 of <file>": {
      "key": "sha384 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha384",
      "pluralPhrase": "sha384s",
      "directObjectType": "file"
    },
    "sha256 of <file>": {
      "key": "sha256 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha256",
      "pluralPhrase": "sha256s",
      "directObjectType": "file"
    },
    "sha224 of <file>": {
      "key": "sha224 of <file>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha224",
      "pluralPhrase": "sha224s",
      "directObjectType": "file"
    },
    "manual group of <client>": {
      "key": "manual group of <client>",
      "type": "property",
      "resultType": "manual group",
      "singularPhrase": "manual group",
      "pluralPhrase": "manual groups",
      "directObjectType": "client"
    },
    "manual group <string> of <client>": {
      "key": "manual group <string> of <client>",
      "type": "property",
      "resultType": "manual group",
      "singularPhrase": "manual group",
      "pluralPhrase": "manual groups",
      "indexType": "string",
      "directObjectType": "client"
    },
    "ipv6 routing table": {
      "key": "ipv6 routing table",
      "type": "property",
      "resultType": "routing table",
      "singularPhrase": "ipv6 routing table",
      "pluralPhrase": "ipv6 routing tables"
    },
    "xresolve flag of <route>": {
      "key": "xresolve flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "xresolve flag",
      "pluralPhrase": "xresolve flags",
      "directObjectType": "route"
    },
    "wascloned flag of <route>": {
      "key": "wascloned flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "wascloned flag",
      "pluralPhrase": "wascloned flags",
      "directObjectType": "route"
    },
    "static flag of <route>": {
      "key": "static flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "static flag",
      "pluralPhrase": "static flags",
      "directObjectType": "route"
    },
    "sent packet count of <route>": {
      "key": "sent packet count of <route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "sent packet count",
      "pluralPhrase": "sent packets counts",
      "directObjectType": "route"
    },
    "seconds to expiration of <route>": {
      "key": "seconds to expiration of <route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "seconds to expiration",
      "pluralPhrase": "seconds to expirations",
      "directObjectType": "route"
    },
    "router flag of <route>": {
      "key": "router flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "router flag",
      "pluralPhrase": "router flags",
      "directObjectType": "route"
    },
    "reference of <route>": {
      "key": "reference of <route>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "reference",
      "pluralPhrase": "references",
      "directObjectType": "route"
    },
    "proxy flag of <route>": {
      "key": "proxy flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "proxy flag",
      "pluralPhrase": "proxy flags",
      "directObjectType": "route"
    },
    "proto3 flag of <route>": {
      "key": "proto3 flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "proto3 flag",
      "pluralPhrase": "proto3 flags",
      "directObjectType": "route"
    },
    "proto2 flag of <route>": {
      "key": "proto2 flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "proto2 flag",
      "pluralPhrase": "proto2 flags",
      "directObjectType": "route"
    },
    "proto1 flag of <route>": {
      "key": "proto1 flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "proto1 flag",
      "pluralPhrase": "proto1 flags",
      "directObjectType": "route"
    },
    "prcloning flag of <route>": {
      "key": "prcloning flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "prcloning flag",
      "pluralPhrase": "prcloning flags",
      "directObjectType": "route"
    },
    "pinned flag of <route>": {
      "key": "pinned flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "pinned flag",
      "pluralPhrase": "pinned flags",
      "directObjectType": "route"
    },
    "netstat flag of <route>": {
      "key": "netstat flag of <route>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "netstat flag",
      "pluralPhrase": "netstat flags",
      "directObjectType": "route"
    },
    "multicast flag of <route>": {
      "key": "multicast flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "multicast flag",
      "pluralPhrase": "multicast flags",
      "directObjectType": "route"
    },
    "modified flag of <route>": {
      "key": "modified flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "modified flag",
      "pluralPhrase": "modified flags",
      "directObjectType": "route"
    },
    "local flag of <route>": {
      "key": "local flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "local flag",
      "pluralPhrase": "local flags",
      "directObjectType": "route"
    },
    "llinfo flag of <route>": {
      "key": "llinfo flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "llinfo flag",
      "pluralPhrase": "llinfo flags",
      "directObjectType": "route"
    },
    "ip family of <route>": {
      "key": "ip family of <route>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "ip family",
      "pluralPhrase": "ip families",
      "directObjectType": "route"
    },
    "ifscope flag of <route>": {
      "key": "ifscope flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "ifscope flag",
      "pluralPhrase": "ifscope flags",
      "directObjectType": "route"
    },
    "ifref flag of <route>": {
      "key": "ifref flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "ifref flag",
      "pluralPhrase": "ifref flags",
      "directObjectType": "route"
    },
    "gateway type of <route>": {
      "key": "gateway type of <route>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "gateway type",
      "pluralPhrase": "gateways types",
      "directObjectType": "route"
    },
    "gateway string of <route>": {
      "key": "gateway string of <route>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "gateway string",
      "pluralPhrase": "gateway strings",
      "directObjectType": "route"
    },
    "flags string of <route>": {
      "key": "flags string of <route>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "flags string",
      "pluralPhrase": "flags strings",
      "directObjectType": "route"
    },
    "expiration time of <route>": {
      "key": "expiration time of <route>",
      "type": "property",
      "resultType": "time",
      "singularPhrase": "expiration time",
      "pluralPhrase": "expiration times",
      "directObjectType": "route"
    },
    "dynamic flag of <route>": {
      "key": "dynamic flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "dynamic flag",
      "pluralPhrase": "dynamic flags",
      "directObjectType": "route"
    },
    "done flag of <route>": {
      "key": "done flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "done flag",
      "pluralPhrase": "done flags",
      "directObjectType": "route"
    },
    "destination type of <route>": {
      "key": "destination type of <route>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "destination type",
      "pluralPhrase": "destination types",
      "directObjectType": "route"
    },
    "destination string of <route>": {
      "key": "destination string of <route>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "destination string",
      "pluralPhrase": "destination strings",
      "directObjectType": "route"
    },
    "delclone flag of <route>": {
      "key": "delclone flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "delclone flag",
      "pluralPhrase": "delclone flags",
      "directObjectType": "route"
    },
    "default of <route>": {
      "key": "default of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "default",
      "pluralPhrase": "defaults",
      "directObjectType": "route"
    },
    "condemned flag of <route>": {
      "key": "condemned flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "condemned flag",
      "pluralPhrase": "condemned flags",
      "directObjectType": "route"
    },
    "cloning flag of <route>": {
      "key": "cloning flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "cloning flag",
      "pluralPhrase": "cloning flags",
      "directObjectType": "route"
    },
    "cloned of <route>": {
      "key": "cloned of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "cloned",
      "pluralPhrase": "cloneds",
      "directObjectType": "route"
    },
    "broadcast flag of <route>": {
      "key": "broadcast flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "broadcast flag",
      "pluralPhrase": "broadcast flags",
      "directObjectType": "route"
    },
    "blackhole flag of <route>": {
      "key": "blackhole flag of <route>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "blackhole flag",
      "pluralPhrase": "blackhole flags",
      "directObjectType": "route"
    },
    "native folder <string>": {
      "key": "native folder <string>",
      "type": "property",
      "resultType": "folder",
      "singularPhrase": "native folder",
      "pluralPhrase": "native folders",
      "indexType": "string"
    },
    "native file <string>": {
      "key": "native file <string>",
      "type": "property",
      "resultType": "file",
      "singularPhrase": "native file",
      "pluralPhrase": "native files",
      "indexType": "string"
    },
    "native application <string>": {
      "key": "native application <string>",
      "type": "property",
      "resultType": "application",
      "singularPhrase": "native application",
      "pluralPhrase": "native applications",
      "indexType": "string"
    },
    "pid of <service>": {
      "key": "pid of <service>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "pid",
      "pluralPhrase": "pids",
      "directObjectType": "service"
    },
    "parent key of <registry key value>": {
      "key": "parent key of <registry key value>",
      "type": "property",
      "resultType": "registry key",
      "singularPhrase": "parent key",
      "pluralPhrase": "parent keys",
      "directObjectType": "registry key value"
    },
    "wow64 of <registry key>": {
      "key": "wow64 of <registry key>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "wow64",
      "pluralPhrase": "wow64s",
      "directObjectType": "registry key"
    },
    "dep enabled of <process>": {
      "key": "dep enabled of <process>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "dep enabled",
      "pluralPhrase": "dep enableds",
      "directObjectType": "process"
    },
    "ipv6 interface <integer> of <network adapter>": {
      "key": "ipv6 interface <integer> of <network adapter>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv6 interface",
      "pluralPhrase": "ipv6 interfaces",
      "indexType": "integer",
      "directObjectType": "network adapter"
    },
    "ipv4or6 interface <integer> of <network adapter>": {
      "key": "ipv4or6 interface <integer> of <network adapter>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv4or6 interface",
      "pluralPhrase": "ipv4or6 interfaces",
      "indexType": "integer",
      "directObjectType": "network adapter"
    },
    "ipv4 interface <integer> of <network adapter>": {
      "key": "ipv4 interface <integer> of <network adapter>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv4 interface",
      "pluralPhrase": "ipv4 interfaces",
      "indexType": "integer",
      "directObjectType": "network adapter"
    },
    "ipv6 interface <integer> of <network>": {
      "key": "ipv6 interface <integer> of <network>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv6 interface",
      "pluralPhrase": "ipv6 interfaces",
      "indexType": "integer",
      "directObjectType": "network"
    },
    "ipv4or6 interface <integer> of <network>": {
      "key": "ipv4or6 interface <integer> of <network>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv4or6 interface",
      "pluralPhrase": "ipv4or6 interfaces",
      "indexType": "integer",
      "directObjectType": "network"
    },
    "ipv4 interface <integer> of <network>": {
      "key": "ipv4 interface <integer> of <network>",
      "type": "property",
      "resultType": "network adapter interface",
      "singularPhrase": "ipv4 interface",
      "pluralPhrase": "ipv4 interfaces",
      "indexType": "integer",
      "directObjectType": "network"
    },
    "any adapter <integer> of <network>": {
      "key": "any adapter <integer> of <network>",
      "type": "property",
      "resultType": "network adapter",
      "singularPhrase": "any adapter",
      "pluralPhrase": "any adapters",
      "indexType": "integer",
      "directObjectType": "network"
    },
    "windows checksum of <file>": {
      "key": "windows checksum of <file>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "windows checksum",
      "pluralPhrase": "windows checksums",
      "directObjectType": "file"
    },
    "access system security permission of <access control entry>": {
      "key": "access system security permission of <access control entry>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "access system security permission",
      "pluralPhrase": "access system security permissions",
      "directObjectType": "access control entry"
    },
    "little endian of <operating system>": {
      "key": "little endian of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "little endian",
      "pluralPhrase": "little endians",
      "directObjectType": "operating system"
    },
    "big endian of <operating system>": {
      "key": "big endian of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "big endian",
      "pluralPhrase": "big endians",
      "directObjectType": "operating system"
    },
    "x32 of <operating system>": {
      "key": "x32 of <operating system>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "x32",
      "pluralPhrase": "x32s",
      "directObjectType": "operating system"
    },
    "character set of <client>": {
      "key": "character set of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "character set",
      "pluralPhrase": "character sets",
      "directObjectType": "client"
    },
    "banned prefetch plugin of <client>": {
      "key": "banned prefetch plugin of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "banned prefetch plugin",
      "pluralPhrase": "banned prefetch plugins",
      "directObjectType": "client"
    },
    "spe of <processor>": {
      "key": "spe of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "spe",
      "pluralPhrase": "spes",
      "directObjectType": "processor"
    },
    "spe float of <processor>": {
      "key": "spe float of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "spe float",
      "pluralPhrase": "spe floats",
      "directObjectType": "processor"
    },
    "spe double of <processor>": {
      "key": "spe double of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "spe double",
      "pluralPhrase": "spe doubles",
      "directObjectType": "processor"
    },
    "smt of <processor>": {
      "key": "smt of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "smt",
      "pluralPhrase": "smts",
      "directObjectType": "processor"
    },
    "run mode of <processor>": {
      "key": "run mode of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "run mode",
      "pluralPhrase": "run modes",
      "directObjectType": "processor"
    },
    "revision of <processor>": {
      "key": "revision of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "revision",
      "pluralPhrase": "revisions",
      "directObjectType": "processor"
    },
    "mmu of <processor>": {
      "key": "mmu of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "mmu",
      "pluralPhrase": "mmus",
      "directObjectType": "processor"
    },
    "machine name of <processor>": {
      "key": "machine name of <processor>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "machine name",
      "pluralPhrase": "machine names",
      "directObjectType": "processor"
    },
    "ic snoop of <processor>": {
      "key": "ic snoop of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "ic snoop",
      "pluralPhrase": "ic snoops",
      "directObjectType": "processor"
    },
    "decimal fpu of <processor>": {
      "key": "decimal fpu of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "decimal fpu",
      "pluralPhrase": "decimal fpus",
      "directObjectType": "processor"
    },
    "architected of <processor>": {
      "key": "architected of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "architected",
      "pluralPhrase": "architecteds",
      "directObjectType": "processor"
    },
    "altivec of <processor>": {
      "key": "altivec of <processor>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "altivec",
      "pluralPhrase": "altivecs",
      "directObjectType": "processor"
    },
    "restartandshutdown postaction privilege none flag of <bes user>": {
      "key": "restartandshutdown postaction privilege none flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "restartandshutdown postaction privilege none flag",
      "pluralPhrase": "restartandshutdown postaction privilege none flags",
      "directObjectType": "bes user"
    },
    "restartandshutdown postaction privilege allowrestartonly flag of <bes user>": {
      "key": "restartandshutdown postaction privilege allowrestartonly flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "restartandshutdown postaction privilege allowrestartonly flag",
      "pluralPhrase": "restartandshutdown postaction privilege allowrestartonly flags",
      "directObjectType": "bes user"
    },
    "restartandshutdown postaction privilege allowboth flag of <bes user>": {
      "key": "restartandshutdown postaction privilege allowboth flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "restartandshutdown postaction privilege allowboth flag",
      "pluralPhrase": "restartandshutdown postaction privilege allowboth flags",
      "directObjectType": "bes user"
    },
    "restartandshutdown actionscript privilege none flag of <bes user>": {
      "key": "restartandshutdown actionscript privilege none flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "restartandshutdown actionscript privilege none flag",
      "pluralPhrase": "restartandshutdown actionscript privilege none flags",
      "directObjectType": "bes user"
    },
    "restartandshutdown actionscript privilege allowrestartonly flag of <bes user>": {
      "key": "restartandshutdown actionscript privilege allowrestartonly flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "restartandshutdown actionscript privilege allowrestartonly flag",
      "pluralPhrase": "restartandshutdown actionscript privilege allowrestartonly flags",
      "directObjectType": "bes user"
    },
    "restartandshutdown actionscript privilege allowboth flag of <bes user>": {
      "key": "restartandshutdown actionscript privilege allowboth flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "restartandshutdown actionscript privilege allowboth flag",
      "pluralPhrase": "restartandshutdown actionscript privilege allowboth flags",
      "directObjectType": "bes user"
    },
    "can send multiple refresh flag of <bes user>": {
      "key": "can send multiple refresh flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "can send multiple refresh flag",
      "pluralPhrase": "can send multiple refresh flags",
      "directObjectType": "bes user"
    },
    "can lock flag of <bes user>": {
      "key": "can lock flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "can lock flag",
      "pluralPhrase": "can lock flags",
      "directObjectType": "bes user"
    },
    "can create actions flag of <bes user>": {
      "key": "can create actions flag of <bes user>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "can create actions flag",
      "pluralPhrase": "can create actions flags",
      "directObjectType": "bes user"
    },
    "sha256 of <setting>": {
      "key": "sha256 of <setting>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "sha256",
      "pluralPhrase": "sha256s",
      "directObjectType": "setting"
    },
    "selinux context of <process>": {
      "key": "selinux context of <process>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "selinux context",
      "pluralPhrase": "selinux contexts",
      "directObjectType": "process"
    },
    "report character set of <client>": {
      "key": "report character set of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "report character set",
      "pluralPhrase": "report character sets",
      "directObjectType": "client"
    },
    "fxf character set of <client>": {
      "key": "fxf character set of <client>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "fxf character set",
      "pluralPhrase": "fxf character sets",
      "directObjectType": "client"
    },
    "runlevel of <service>": {
      "key": "runlevel of <service>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "runlevel",
      "pluralPhrase": "runlevels",
      "directObjectType": "service"
    },
    "rpc program": {
      "key": "rpc program",
      "type": "property",
      "resultType": "rpc_program",
      "singularPhrase": "rpc program",
      "pluralPhrase": "rpc programs"
    },
    "odm": {
      "key": "odm",
      "type": "property",
      "resultType": "odm",
      "singularPhrase": "odm",
      "pluralPhrase": "odms"
    },
    "network option": {
      "key": "network option",
      "type": "property",
      "resultType": "network_option",
      "singularPhrase": "network option",
      "pluralPhrase": "network options"
    },
    "network option <string>": {
      "key": "network option <string>",
      "type": "property",
      "resultType": "network_option",
      "singularPhrase": "network option",
      "pluralPhrase": "network options",
      "indexType": "string"
    },
    "kernel extension": {
      "key": "kernel extension",
      "type": "property",
      "resultType": "kernel_extension",
      "singularPhrase": "kernel extension",
      "pluralPhrase": "kernel extensions"
    },
    "catalog <string>": {
      "key": "catalog <string>",
      "type": "property",
      "resultType": "message_catalog",
      "singularPhrase": "catalog",
      "pluralPhrase": "catalogs",
      "indexType": "string"
    },
    "version of <rpc_program>": {
      "key": "version of <rpc_program>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "rpc_program"
    },
    "protocol of <rpc_program>": {
      "key": "protocol of <rpc_program>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "protocol",
      "pluralPhrase": "protocols",
      "directObjectType": "rpc_program"
    },
    "program of <rpc_program>": {
      "key": "program of <rpc_program>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "program",
      "pluralPhrase": "programs",
      "directObjectType": "rpc_program"
    },
    "port of <rpc_program>": {
      "key": "port of <rpc_program>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "port",
      "pluralPhrase": "ports",
      "directObjectType": "rpc_program"
    },
    "<rpc_program> as string": {
      "key": "<rpc_program> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "rpc_program",
      "phrase": "string"
    },
    "vpd flag of <predefined_device>": {
      "key": "vpd flag of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "vpd flag",
      "pluralPhrase": "vpd flags",
      "directObjectType": "predefined_device"
    },
    "unique type of <predefined_device>": {
      "key": "unique type of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "unique type",
      "pluralPhrase": "unique types",
      "directObjectType": "predefined_device"
    },
    "undefine method of <predefined_device>": {
      "key": "undefine method of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "undefine method",
      "pluralPhrase": "undefine methods",
      "directObjectType": "predefined_device"
    },
    "unconfigure method of <predefined_device>": {
      "key": "unconfigure method of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "unconfigure method",
      "pluralPhrase": "unconfigure methods",
      "directObjectType": "predefined_device"
    },
    "type of <predefined_device>": {
      "key": "type of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "predefined_device"
    },
    "subclass of <predefined_device>": {
      "key": "subclass of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "subclass",
      "pluralPhrase": "subclasses",
      "directObjectType": "predefined_device"
    },
    "stop method of <predefined_device>": {
      "key": "stop method of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "stop method",
      "pluralPhrase": "stop methods",
      "directObjectType": "predefined_device"
    },
    "start method of <predefined_device>": {
      "key": "start method of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "start method",
      "pluralPhrase": "start methods",
      "directObjectType": "predefined_device"
    },
    "set number of <predefined_device>": {
      "key": "set number of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "set number",
      "pluralPhrase": "set numbers",
      "directObjectType": "predefined_device"
    },
    "prefix name of <predefined_device>": {
      "key": "prefix name of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "prefix name",
      "pluralPhrase": "prefix names",
      "directObjectType": "predefined_device"
    },
    "msg number of <predefined_device>": {
      "key": "msg number of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "msg number",
      "pluralPhrase": "msg numbers",
      "directObjectType": "predefined_device"
    },
    "led value of <predefined_device>": {
      "key": "led value of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "led value",
      "pluralPhrase": "led values",
      "directObjectType": "predefined_device"
    },
    "inventory only flag of <predefined_device>": {
      "key": "inventory only flag of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "inventory only flag",
      "pluralPhrase": "inventory only flags",
      "directObjectType": "predefined_device"
    },
    "id of <predefined_device>": {
      "key": "id of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "id",
      "pluralPhrase": "ids",
      "directObjectType": "predefined_device"
    },
    "fru flag of <predefined_device>": {
      "key": "fru flag of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "fru flag",
      "pluralPhrase": "fru flags",
      "directObjectType": "predefined_device"
    },
    "device driver name of <predefined_device>": {
      "key": "device driver name of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device driver name",
      "pluralPhrase": "device driver names",
      "directObjectType": "predefined_device"
    },
    "detectable flag of <predefined_device>": {
      "key": "detectable flag of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "detectable flag",
      "pluralPhrase": "detectable flags",
      "directObjectType": "predefined_device"
    },
    "define method of <predefined_device>": {
      "key": "define method of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "define method",
      "pluralPhrase": "define methods",
      "directObjectType": "predefined_device"
    },
    "configure method of <predefined_device>": {
      "key": "configure method of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "configure method",
      "pluralPhrase": "configure methods",
      "directObjectType": "predefined_device"
    },
    "class of <predefined_device>": {
      "key": "class of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "class",
      "pluralPhrase": "classes",
      "directObjectType": "predefined_device"
    },
    "change status flag of <predefined_device>": {
      "key": "change status flag of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "change status flag",
      "pluralPhrase": "change status flags",
      "directObjectType": "predefined_device"
    },
    "change method of <predefined_device>": {
      "key": "change method of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "change method",
      "pluralPhrase": "change methods",
      "directObjectType": "predefined_device"
    },
    "catalog filename of <predefined_device>": {
      "key": "catalog filename of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "catalog filename",
      "pluralPhrase": "catalog filenames",
      "directObjectType": "predefined_device"
    },
    "bus extender flag of <predefined_device>": {
      "key": "bus extender flag of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "bus extender flag",
      "pluralPhrase": "bus extender flags",
      "directObjectType": "predefined_device"
    },
    "base flag of <predefined_device>": {
      "key": "base flag of <predefined_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "base flag",
      "pluralPhrase": "base flags",
      "directObjectType": "predefined_device"
    },
    "<predefined_device> as string": {
      "key": "<predefined_device> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "predefined_device",
      "phrase": "string"
    },
    "width of <predefined_attribute>": {
      "key": "width of <predefined_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "width",
      "pluralPhrase": "widths",
      "directObjectType": "predefined_attribute"
    },
    "unique type of <predefined_attribute>": {
      "key": "unique type of <predefined_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "unique type",
      "pluralPhrase": "unique types",
      "directObjectType": "predefined_attribute"
    },
    "type of <predefined_attribute>": {
      "key": "type of <predefined_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "predefined_attribute"
    },
    "representation flag of <predefined_attribute>": {
      "key": "representation flag of <predefined_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "representation flag",
      "pluralPhrase": "representation flags",
      "directObjectType": "predefined_attribute"
    },
    "possible value of <predefined_attribute>": {
      "key": "possible value of <predefined_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "possible value",
      "pluralPhrase": "possible values",
      "directObjectType": "predefined_attribute"
    },
    "nls index of <predefined_attribute>": {
      "key": "nls index of <predefined_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "nls index",
      "pluralPhrase": "nls indexes",
      "directObjectType": "predefined_attribute"
    },
    "generic flag of <predefined_attribute>": {
      "key": "generic flag of <predefined_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "generic flag",
      "pluralPhrase": "generic flags",
      "directObjectType": "predefined_attribute"
    },
    "default value of <predefined_attribute>": {
      "key": "default value of <predefined_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "default value",
      "pluralPhrase": "default values",
      "directObjectType": "predefined_attribute"
    },
    "attribute name of <predefined_attribute>": {
      "key": "attribute name of <predefined_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "attribute name",
      "pluralPhrase": "attribute names",
      "directObjectType": "predefined_attribute"
    },
    "<predefined_attribute> as string": {
      "key": "<predefined_attribute> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "predefined_attribute",
      "phrase": "string"
    },
    "predefined device of <odm>": {
      "key": "predefined device of <odm>",
      "type": "property",
      "resultType": "predefined_device",
      "singularPhrase": "predefined device",
      "pluralPhrase": "predefined devices",
      "directObjectType": "odm"
    },
    "predefined device <string> of <odm>": {
      "key": "predefined device <string> of <odm>",
      "type": "property",
      "resultType": "predefined_device",
      "singularPhrase": "predefined device",
      "pluralPhrase": "predefined devices",
      "indexType": "string",
      "directObjectType": "odm"
    },
    "predefined attribute of <odm>": {
      "key": "predefined attribute of <odm>",
      "type": "property",
      "resultType": "predefined_attribute",
      "singularPhrase": "predefined attribute",
      "pluralPhrase": "predefined attributes",
      "directObjectType": "odm"
    },
    "predefined attribute <string> of <odm>": {
      "key": "predefined attribute <string> of <odm>",
      "type": "property",
      "resultType": "predefined_attribute",
      "singularPhrase": "predefined attribute",
      "pluralPhrase": "predefined attributes",
      "indexType": "string",
      "directObjectType": "odm"
    },
    "customized device of <odm>": {
      "key": "customized device of <odm>",
      "type": "property",
      "resultType": "customized_device",
      "singularPhrase": "customized device",
      "pluralPhrase": "customized devices",
      "directObjectType": "odm"
    },
    "customized device <string> of <odm>": {
      "key": "customized device <string> of <odm>",
      "type": "property",
      "resultType": "customized_device",
      "singularPhrase": "customized device",
      "pluralPhrase": "customized devices",
      "indexType": "string",
      "directObjectType": "odm"
    },
    "customized attribute of <odm>": {
      "key": "customized attribute of <odm>",
      "type": "property",
      "resultType": "customized_attribute",
      "singularPhrase": "customized attribute",
      "pluralPhrase": "customized attributes",
      "directObjectType": "odm"
    },
    "customized attribute <string> of <odm>": {
      "key": "customized attribute <string> of <odm>",
      "type": "property",
      "resultType": "customized_attribute",
      "singularPhrase": "customized attribute",
      "pluralPhrase": "customized attributes",
      "indexType": "string",
      "directObjectType": "odm"
    },
    "value of <network_option>": {
      "key": "value of <network_option>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "network_option"
    },
    "name of <network_option>": {
      "key": "name of <network_option>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "network_option"
    },
    "<network_option> as string": {
      "key": "<network_option> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "network_option",
      "phrase": "string"
    },
    "message <integer> of <message_catalog_set>": {
      "key": "message <integer> of <message_catalog_set>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "message",
      "pluralPhrase": "messages",
      "indexType": "integer",
      "directObjectType": "message_catalog_set"
    },
    "set <integer> of <message_catalog>": {
      "key": "set <integer> of <message_catalog>",
      "type": "property",
      "resultType": "message_catalog_set",
      "singularPhrase": "set",
      "pluralPhrase": "sets",
      "indexType": "integer",
      "directObjectType": "message_catalog"
    },
    "text address of <kernel_extension>": {
      "key": "text address of <kernel_extension>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "text address",
      "pluralPhrase": "text addresses",
      "directObjectType": "kernel_extension"
    },
    "size of <kernel_extension>": {
      "key": "size of <kernel_extension>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "size",
      "pluralPhrase": "sizes",
      "directObjectType": "kernel_extension"
    },
    "file of <kernel_extension>": {
      "key": "file of <kernel_extension>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "file",
      "pluralPhrase": "files",
      "directObjectType": "kernel_extension"
    },
    "<kernel_extension> as string": {
      "key": "<kernel_extension> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "kernel_extension",
      "phrase": "string"
    },
    "status of <customized_device>": {
      "key": "status of <customized_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "status",
      "pluralPhrase": "statuses",
      "directObjectType": "customized_device"
    },
    "parent of <customized_device>": {
      "key": "parent of <customized_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "parent",
      "pluralPhrase": "parents",
      "directObjectType": "customized_device"
    },
    "parent logical name of <customized_device>": {
      "key": "parent logical name of <customized_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "parent logical name",
      "pluralPhrase": "parent logical names",
      "directObjectType": "customized_device"
    },
    "name of <customized_device>": {
      "key": "name of <customized_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "customized_device"
    },
    "location of <customized_device>": {
      "key": "location of <customized_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "location",
      "pluralPhrase": "locations",
      "directObjectType": "customized_device"
    },
    "device driver instance of <customized_device>": {
      "key": "device driver instance of <customized_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device driver instance",
      "pluralPhrase": "device driver instances",
      "directObjectType": "customized_device"
    },
    "connwhere of <customized_device>": {
      "key": "connwhere of <customized_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "connwhere",
      "pluralPhrase": "connwheres",
      "directObjectType": "customized_device"
    },
    "change status of <customized_device>": {
      "key": "change status of <customized_device>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "change status",
      "pluralPhrase": "change statuses",
      "directObjectType": "customized_device"
    },
    "<customized_device> as string": {
      "key": "<customized_device> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "customized_device",
      "phrase": "string"
    },
    "representation flag of <customized_attribute>": {
      "key": "representation flag of <customized_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "representation flag",
      "pluralPhrase": "representation flags",
      "directObjectType": "customized_attribute"
    },
    "nls index of <customized_attribute>": {
      "key": "nls index of <customized_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "nls index",
      "pluralPhrase": "nls indexes",
      "directObjectType": "customized_attribute"
    },
    "generic flag of <customized_attribute>": {
      "key": "generic flag of <customized_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "generic flag",
      "pluralPhrase": "generic flags",
      "directObjectType": "customized_attribute"
    },
    "device name of <customized_attribute>": {
      "key": "device name of <customized_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "device name",
      "pluralPhrase": "device names",
      "directObjectType": "customized_attribute"
    },
    "attribute value of <customized_attribute>": {
      "key": "attribute value of <customized_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "attribute value",
      "pluralPhrase": "attribute values",
      "directObjectType": "customized_attribute"
    },
    "attribute type of <customized_attribute>": {
      "key": "attribute type of <customized_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "attribute type",
      "pluralPhrase": "attribute types",
      "directObjectType": "customized_attribute"
    },
    "attribute name of <customized_attribute>": {
      "key": "attribute name of <customized_attribute>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "attribute name",
      "pluralPhrase": "attribute names",
      "directObjectType": "customized_attribute"
    },
    "<customized_attribute> as string": {
      "key": "<customized_attribute> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "customized_attribute",
      "phrase": "string"
    },
    "ips repo <string>": {
      "key": "ips repo <string>",
      "type": "property",
      "resultType": "ips repo",
      "singularPhrase": "ips repo",
      "pluralPhrase": "ips repos",
      "indexType": "string"
    },
    "ips image": {
      "key": "ips image",
      "type": "property",
      "resultType": "ips image",
      "singularPhrase": "ips image",
      "pluralPhrase": "ips images"
    },
    "<version with time> as string": {
      "key": "<version with time> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "version with time",
      "phrase": "string"
    },
    "<version with time> = <string>": {
      "key": "<version with time> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "version with time",
      "op": "=",
      "rightType": "string"
    },
    "<version with time> <= <string>": {
      "key": "<version with time> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "version with time",
      "op": "<=",
      "rightType": "string"
    },
    "<version with time> < <string>": {
      "key": "<version with time> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "version with time",
      "op": "<",
      "rightType": "string"
    },
    "<string> = <version with time>": {
      "key": "<string> = <version with time>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "version with time"
    },
    "<string> <= <version with time>": {
      "key": "<string> <= <version with time>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "version with time"
    },
    "<string> < <version with time>": {
      "key": "<string> < <version with time>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "version with time"
    },
    "version with time of <ips version dependency>": {
      "key": "version with time of <ips version dependency>",
      "type": "property",
      "resultType": "version with time",
      "singularPhrase": "version with time",
      "pluralPhrase": "versions with times",
      "directObjectType": "ips version dependency"
    },
    "version of <ips version dependency>": {
      "key": "version of <ips version dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "ips version dependency"
    },
    "type of <ips version dependency>": {
      "key": "type of <ips version dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "type",
      "pluralPhrase": "types",
      "directObjectType": "ips version dependency"
    },
    "time stamp of <ips version dependency>": {
      "key": "time stamp of <ips version dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "time stamp",
      "pluralPhrase": "time stamps",
      "directObjectType": "ips version dependency"
    },
    "publisher of <ips version dependency>": {
      "key": "publisher of <ips version dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "publisher",
      "pluralPhrase": "publishers",
      "directObjectType": "ips version dependency"
    },
    "name of <ips version dependency>": {
      "key": "name of <ips version dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "ips version dependency"
    },
    "full name of <ips version dependency>": {
      "key": "full name of <ips version dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "full name",
      "pluralPhrase": "full names",
      "directObjectType": "ips version dependency"
    },
    "fmri of <ips version dependency>": {
      "key": "fmri of <ips version dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "fmri",
      "pluralPhrase": "fmris",
      "directObjectType": "ips version dependency"
    },
    "component version of <ips version dependency>": {
      "key": "component version of <ips version dependency>",
      "type": "property",
      "resultType": "ips component version",
      "singularPhrase": "component version",
      "pluralPhrase": "component versions",
      "directObjectType": "ips version dependency"
    },
    "category of <ips version dependency>": {
      "key": "category of <ips version dependency>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "category",
      "pluralPhrase": "categories",
      "directObjectType": "ips version dependency"
    },
    "build version of <ips version dependency>": {
      "key": "build version of <ips version dependency>",
      "type": "property",
      "resultType": "ips build version",
      "singularPhrase": "build version",
      "pluralPhrase": "build versions",
      "directObjectType": "ips version dependency"
    },
    "branch version of <ips version dependency>": {
      "key": "branch version of <ips version dependency>",
      "type": "property",
      "resultType": "ips branch version",
      "singularPhrase": "branch version",
      "pluralPhrase": "branch versions",
      "directObjectType": "ips version dependency"
    },
    "<ips version dependency> as string": {
      "key": "<ips version dependency> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ips version dependency",
      "phrase": "string"
    },
    "value of <ips setting pieces>": {
      "key": "value of <ips setting pieces>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "value",
      "pluralPhrase": "values",
      "directObjectType": "ips setting pieces"
    },
    "section of <ips setting pieces>": {
      "key": "section of <ips setting pieces>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "section",
      "pluralPhrase": "sections",
      "directObjectType": "ips setting pieces"
    },
    "name of <ips setting pieces>": {
      "key": "name of <ips setting pieces>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "ips setting pieces"
    },
    "fullsetting of <ips setting pieces>": {
      "key": "fullsetting of <ips setting pieces>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "fullsetting",
      "pluralPhrase": "fullsettings",
      "directObjectType": "ips setting pieces"
    },
    "<ips setting pieces> as string": {
      "key": "<ips setting pieces> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ips setting pieces",
      "phrase": "string"
    },
    "version of <ips repo>": {
      "key": "version of <ips repo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "ips repo"
    },
    "package of <ips repo>": {
      "key": "package of <ips repo>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "package",
      "pluralPhrase": "packages",
      "directObjectType": "ips repo"
    },
    "package <string> of <ips repo>": {
      "key": "package <string> of <ips repo>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "package",
      "pluralPhrase": "packages",
      "indexType": "string",
      "directObjectType": "ips repo"
    },
    "ordered catalog of <ips repo>": {
      "key": "ordered catalog of <ips repo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "ordered catalog",
      "pluralPhrase": "ordered catalogs",
      "directObjectType": "ips repo"
    },
    "name of <ips repo>": {
      "key": "name of <ips repo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "ips repo"
    },
    "latest package of <ips repo>": {
      "key": "latest package of <ips repo>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "latest package",
      "pluralPhrase": "latest packages",
      "directObjectType": "ips repo"
    },
    "latest package <string> of <ips repo>": {
      "key": "latest package <string> of <ips repo>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "latest package",
      "pluralPhrase": "latest packages",
      "indexType": "string",
      "directObjectType": "ips repo"
    },
    "earliest package of <ips repo>": {
      "key": "earliest package of <ips repo>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "earliest package",
      "pluralPhrase": "earliest packages",
      "directObjectType": "ips repo"
    },
    "earliest package <string> of <ips repo>": {
      "key": "earliest package <string> of <ips repo>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "earliest package",
      "pluralPhrase": "earliest packages",
      "indexType": "string",
      "directObjectType": "ips repo"
    },
    "description of <ips repo>": {
      "key": "description of <ips repo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "ips repo"
    },
    "configuration version of <ips repo>": {
      "key": "configuration version of <ips repo>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "configuration version",
      "pluralPhrase": "configuration versions",
      "directObjectType": "ips repo"
    },
    "version with time of <ips partial matching fmri>": {
      "key": "version with time of <ips partial matching fmri>",
      "type": "property",
      "resultType": "version with time",
      "singularPhrase": "version with time",
      "pluralPhrase": "versions with times",
      "directObjectType": "ips partial matching fmri"
    },
    "version of <ips partial matching fmri>": {
      "key": "version of <ips partial matching fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "ips partial matching fmri"
    },
    "time stamp of <ips partial matching fmri>": {
      "key": "time stamp of <ips partial matching fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "time stamp",
      "pluralPhrase": "time stamps",
      "directObjectType": "ips partial matching fmri"
    },
    "publisher of <ips partial matching fmri>": {
      "key": "publisher of <ips partial matching fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "publisher",
      "pluralPhrase": "publishers",
      "directObjectType": "ips partial matching fmri"
    },
    "name of <ips partial matching fmri>": {
      "key": "name of <ips partial matching fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "ips partial matching fmri"
    },
    "full name of <ips partial matching fmri>": {
      "key": "full name of <ips partial matching fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "full name",
      "pluralPhrase": "full names",
      "directObjectType": "ips partial matching fmri"
    },
    "fmri of <ips partial matching fmri>": {
      "key": "fmri of <ips partial matching fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "fmri",
      "pluralPhrase": "fmris",
      "directObjectType": "ips partial matching fmri"
    },
    "component version of <ips partial matching fmri>": {
      "key": "component version of <ips partial matching fmri>",
      "type": "property",
      "resultType": "ips component version",
      "singularPhrase": "component version",
      "pluralPhrase": "component versions",
      "directObjectType": "ips partial matching fmri"
    },
    "category of <ips partial matching fmri>": {
      "key": "category of <ips partial matching fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "category",
      "pluralPhrase": "categories",
      "directObjectType": "ips partial matching fmri"
    },
    "build version of <ips partial matching fmri>": {
      "key": "build version of <ips partial matching fmri>",
      "type": "property",
      "resultType": "ips build version",
      "singularPhrase": "build version",
      "pluralPhrase": "build versions",
      "directObjectType": "ips partial matching fmri"
    },
    "branch version of <ips partial matching fmri>": {
      "key": "branch version of <ips partial matching fmri>",
      "type": "property",
      "resultType": "ips branch version",
      "singularPhrase": "branch version",
      "pluralPhrase": "branch versions",
      "directObjectType": "ips partial matching fmri"
    },
    "<string> = <ips partial matching fmri>": {
      "key": "<string> = <ips partial matching fmri>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "ips partial matching fmri"
    },
    "<string> <= <ips partial matching fmri>": {
      "key": "<string> <= <ips partial matching fmri>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "ips partial matching fmri"
    },
    "<string> < <ips partial matching fmri>": {
      "key": "<string> < <ips partial matching fmri>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "ips partial matching fmri"
    },
    "<ips partial matching fmri> = <string>": {
      "key": "<ips partial matching fmri> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips partial matching fmri",
      "op": "=",
      "rightType": "string"
    },
    "<ips partial matching fmri> <= <string>": {
      "key": "<ips partial matching fmri> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips partial matching fmri",
      "op": "<=",
      "rightType": "string"
    },
    "<ips partial matching fmri> < <string>": {
      "key": "<ips partial matching fmri> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips partial matching fmri",
      "op": "<",
      "rightType": "string"
    },
    "version with time of <ips package>": {
      "key": "version with time of <ips package>",
      "type": "property",
      "resultType": "version with time",
      "singularPhrase": "version with time",
      "pluralPhrase": "versions with times",
      "directObjectType": "ips package"
    },
    "version ordinal of <ips package>": {
      "key": "version ordinal of <ips package>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "version ordinal",
      "pluralPhrase": "version ordinals",
      "directObjectType": "ips package"
    },
    "version of <ips package>": {
      "key": "version of <ips package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "ips package"
    },
    "version count of <ips package>": {
      "key": "version count of <ips package>",
      "type": "property",
      "resultType": "integer",
      "singularPhrase": "version count",
      "pluralPhrase": "version counts",
      "directObjectType": "ips package"
    },
    "variant of <ips package>": {
      "key": "variant of <ips package>",
      "type": "property",
      "resultType": "ips setting pieces",
      "singularPhrase": "variant",
      "pluralPhrase": "variants",
      "directObjectType": "ips package"
    },
    "v1 of <ips package>": {
      "key": "v1 of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "v1",
      "pluralPhrase": "v1s",
      "directObjectType": "ips package"
    },
    "v0 of <ips package>": {
      "key": "v0 of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "v0",
      "pluralPhrase": "v0s",
      "directObjectType": "ips package"
    },
    "upgradable of <ips package>": {
      "key": "upgradable of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "upgradable",
      "pluralPhrase": "upgradables",
      "directObjectType": "ips package"
    },
    "unsupported of <ips package>": {
      "key": "unsupported of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unsupported",
      "pluralPhrase": "unsupporteds",
      "directObjectType": "ips package"
    },
    "unknown of <ips package>": {
      "key": "unknown of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "unknown",
      "pluralPhrase": "unknowns",
      "directObjectType": "ips package"
    },
    "uninstalled of <ips package>": {
      "key": "uninstalled of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "uninstalled",
      "pluralPhrase": "uninstalleds",
      "directObjectType": "ips package"
    },
    "time stamp of <ips package>": {
      "key": "time stamp of <ips package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "time stamp",
      "pluralPhrase": "time stamps",
      "directObjectType": "ips package"
    },
    "summary of <ips package>": {
      "key": "summary of <ips package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "summary",
      "pluralPhrase": "summaries",
      "directObjectType": "ips package"
    },
    "setting of <ips package>": {
      "key": "setting of <ips package>",
      "type": "property",
      "resultType": "ips setting pieces",
      "singularPhrase": "setting",
      "pluralPhrase": "settings",
      "directObjectType": "ips package"
    },
    "require dependency of <ips package>": {
      "key": "require dependency of <ips package>",
      "type": "property",
      "resultType": "ips version dependency",
      "singularPhrase": "require dependency",
      "pluralPhrase": "require dependencies",
      "directObjectType": "ips package"
    },
    "renamed pkg of <ips package>": {
      "key": "renamed pkg of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "renamed pkg",
      "pluralPhrase": "renamed pkgs",
      "directObjectType": "ips package"
    },
    "renamed of <ips package>": {
      "key": "renamed of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "renamed",
      "pluralPhrase": "renameds",
      "directObjectType": "ips package"
    },
    "publisher of <ips package>": {
      "key": "publisher of <ips package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "publisher",
      "pluralPhrase": "publishers",
      "directObjectType": "ips package"
    },
    "parent dependency of <ips package>": {
      "key": "parent dependency of <ips package>",
      "type": "property",
      "resultType": "ips version dependency",
      "singularPhrase": "parent dependency",
      "pluralPhrase": "parent dependencies",
      "directObjectType": "ips package"
    },
    "optional dependency of <ips package>": {
      "key": "optional dependency of <ips package>",
      "type": "property",
      "resultType": "ips version dependency",
      "singularPhrase": "optional dependency",
      "pluralPhrase": "optional dependencies",
      "directObjectType": "ips package"
    },
    "obsolete pkg of <ips package>": {
      "key": "obsolete pkg of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "obsolete pkg",
      "pluralPhrase": "obsolete pkgs",
      "directObjectType": "ips package"
    },
    "obsolete of <ips package>": {
      "key": "obsolete of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "obsolete",
      "pluralPhrase": "obsoletes",
      "directObjectType": "ips package"
    },
    "name of <ips package>": {
      "key": "name of <ips package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "ips package"
    },
    "known of <ips package>": {
      "key": "known of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "known",
      "pluralPhrase": "knowns",
      "directObjectType": "ips package"
    },
    "installed of <ips package>": {
      "key": "installed of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "installed",
      "pluralPhrase": "installeds",
      "directObjectType": "ips package"
    },
    "incorporate dependency of <ips package>": {
      "key": "incorporate dependency of <ips package>",
      "type": "property",
      "resultType": "ips version dependency",
      "singularPhrase": "incorporate dependency",
      "pluralPhrase": "incorporate dependencies",
      "directObjectType": "ips package"
    },
    "group dependency of <ips package>": {
      "key": "group dependency of <ips package>",
      "type": "property",
      "resultType": "ips version dependency",
      "singularPhrase": "group dependency",
      "pluralPhrase": "group dependencies",
      "directObjectType": "ips package"
    },
    "full name of <ips package>": {
      "key": "full name of <ips package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "full name",
      "pluralPhrase": "full names",
      "directObjectType": "ips package"
    },
    "frozen of <ips package>": {
      "key": "frozen of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "frozen",
      "pluralPhrase": "frozens",
      "directObjectType": "ips package"
    },
    "fmri of <ips package>": {
      "key": "fmri of <ips package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "fmri",
      "pluralPhrase": "fmris",
      "directObjectType": "ips package"
    },
    "exclude dependency of <ips package>": {
      "key": "exclude dependency of <ips package>",
      "type": "property",
      "resultType": "ips version dependency",
      "singularPhrase": "exclude dependency",
      "pluralPhrase": "exclude dependencies",
      "directObjectType": "ips package"
    },
    "description of <ips package>": {
      "key": "description of <ips package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "description",
      "pluralPhrase": "descriptions",
      "directObjectType": "ips package"
    },
    "dependency of <ips package>": {
      "key": "dependency of <ips package>",
      "type": "property",
      "resultType": "ips version dependency",
      "singularPhrase": "dependency",
      "pluralPhrase": "dependencies",
      "directObjectType": "ips package"
    },
    "conditional dependency of <ips package>": {
      "key": "conditional dependency of <ips package>",
      "type": "property",
      "resultType": "ips version dependency",
      "singularPhrase": "conditional dependency",
      "pluralPhrase": "conditional dependencies",
      "directObjectType": "ips package"
    },
    "component version of <ips package>": {
      "key": "component version of <ips package>",
      "type": "property",
      "resultType": "ips component version",
      "singularPhrase": "component version",
      "pluralPhrase": "component versions",
      "directObjectType": "ips package"
    },
    "category of <ips package>": {
      "key": "category of <ips package>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "category",
      "pluralPhrase": "categories",
      "directObjectType": "ips package"
    },
    "build version of <ips package>": {
      "key": "build version of <ips package>",
      "type": "property",
      "resultType": "ips build version",
      "singularPhrase": "build version",
      "pluralPhrase": "build versions",
      "directObjectType": "ips package"
    },
    "branch version of <ips package>": {
      "key": "branch version of <ips package>",
      "type": "property",
      "resultType": "ips branch version",
      "singularPhrase": "branch version",
      "pluralPhrase": "branch versions",
      "directObjectType": "ips package"
    },
    "alt source of <ips package>": {
      "key": "alt source of <ips package>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "alt source",
      "pluralPhrase": "alt sources",
      "directObjectType": "ips package"
    },
    "<ips package> as string": {
      "key": "<ips package> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ips package",
      "phrase": "string"
    },
    "variant of <ips image>": {
      "key": "variant of <ips image>",
      "type": "property",
      "resultType": "ips setting pieces",
      "singularPhrase": "variant",
      "pluralPhrase": "variants",
      "directObjectType": "ips image"
    },
    "setting of <ips image>": {
      "key": "setting of <ips image>",
      "type": "property",
      "resultType": "ips setting pieces",
      "singularPhrase": "setting",
      "pluralPhrase": "settings",
      "directObjectType": "ips image"
    },
    "property of <ips image>": {
      "key": "property of <ips image>",
      "type": "property",
      "resultType": "ips setting pieces",
      "singularPhrase": "property",
      "pluralPhrase": "properties",
      "directObjectType": "ips image"
    },
    "package of <ips image>": {
      "key": "package of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "package",
      "pluralPhrase": "packages",
      "directObjectType": "ips image"
    },
    "package <string> of <ips image>": {
      "key": "package <string> of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "package",
      "pluralPhrase": "packages",
      "indexType": "string",
      "directObjectType": "ips image"
    },
    "ordered catalog of <ips image>": {
      "key": "ordered catalog of <ips image>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "ordered catalog",
      "pluralPhrase": "ordered catalogs",
      "directObjectType": "ips image"
    },
    "latest package of <ips image>": {
      "key": "latest package of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "latest package",
      "pluralPhrase": "latest packages",
      "directObjectType": "ips image"
    },
    "latest package <string> of <ips image>": {
      "key": "latest package <string> of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "latest package",
      "pluralPhrase": "latest packages",
      "indexType": "string",
      "directObjectType": "ips image"
    },
    "latest installed package of <ips image>": {
      "key": "latest installed package of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "latest installed package",
      "pluralPhrase": "latest installed packages",
      "directObjectType": "ips image"
    },
    "latest installed package <string> of <ips image>": {
      "key": "latest installed package <string> of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "latest installed package",
      "pluralPhrase": "latest installed packages",
      "indexType": "string",
      "directObjectType": "ips image"
    },
    "installed package of <ips image>": {
      "key": "installed package of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "installed package",
      "pluralPhrase": "installed packages",
      "directObjectType": "ips image"
    },
    "installed package <string> of <ips image>": {
      "key": "installed package <string> of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "installed package",
      "pluralPhrase": "installed packages",
      "indexType": "string",
      "directObjectType": "ips image"
    },
    "image version of <ips image>": {
      "key": "image version of <ips image>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "image version",
      "pluralPhrase": "image versions",
      "directObjectType": "ips image"
    },
    "facet of <ips image>": {
      "key": "facet of <ips image>",
      "type": "property",
      "resultType": "ips setting pieces",
      "singularPhrase": "facet",
      "pluralPhrase": "facets",
      "directObjectType": "ips image"
    },
    "earliest package of <ips image>": {
      "key": "earliest package of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "earliest package",
      "pluralPhrase": "earliest packages",
      "directObjectType": "ips image"
    },
    "earliest package <string> of <ips image>": {
      "key": "earliest package <string> of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "earliest package",
      "pluralPhrase": "earliest packages",
      "indexType": "string",
      "directObjectType": "ips image"
    },
    "earliest installed package of <ips image>": {
      "key": "earliest installed package of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "earliest installed package",
      "pluralPhrase": "earliest installed packages",
      "directObjectType": "ips image"
    },
    "earliest installed package <string> of <ips image>": {
      "key": "earliest installed package <string> of <ips image>",
      "type": "property",
      "resultType": "ips package",
      "singularPhrase": "earliest installed package",
      "pluralPhrase": "earliest installed packages",
      "indexType": "string",
      "directObjectType": "ips image"
    },
    "configuration version of <ips image>": {
      "key": "configuration version of <ips image>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "configuration version",
      "pluralPhrase": "configuration versions",
      "directObjectType": "ips image"
    },
    "authority of <ips image>": {
      "key": "authority of <ips image>",
      "type": "property",
      "resultType": "ips authority info",
      "singularPhrase": "authority",
      "pluralPhrase": "authorities",
      "directObjectType": "ips image"
    },
    "authority <string> of <ips image>": {
      "key": "authority <string> of <ips image>",
      "type": "property",
      "resultType": "ips authority info",
      "singularPhrase": "authority",
      "pluralPhrase": "authorities",
      "indexType": "string",
      "directObjectType": "ips image"
    },
    "version with time of <ips fmri>": {
      "key": "version with time of <ips fmri>",
      "type": "property",
      "resultType": "version with time",
      "singularPhrase": "version with time",
      "pluralPhrase": "versions with times",
      "directObjectType": "ips fmri"
    },
    "version of <ips fmri>": {
      "key": "version of <ips fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "version",
      "pluralPhrase": "versions",
      "directObjectType": "ips fmri"
    },
    "time stamp of <ips fmri>": {
      "key": "time stamp of <ips fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "time stamp",
      "pluralPhrase": "time stamps",
      "directObjectType": "ips fmri"
    },
    "publisher of <ips fmri>": {
      "key": "publisher of <ips fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "publisher",
      "pluralPhrase": "publishers",
      "directObjectType": "ips fmri"
    },
    "name of <ips fmri>": {
      "key": "name of <ips fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "ips fmri"
    },
    "full name of <ips fmri>": {
      "key": "full name of <ips fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "full name",
      "pluralPhrase": "full names",
      "directObjectType": "ips fmri"
    },
    "fmri of <ips fmri>": {
      "key": "fmri of <ips fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "fmri",
      "pluralPhrase": "fmris",
      "directObjectType": "ips fmri"
    },
    "component version of <ips fmri>": {
      "key": "component version of <ips fmri>",
      "type": "property",
      "resultType": "ips component version",
      "singularPhrase": "component version",
      "pluralPhrase": "component versions",
      "directObjectType": "ips fmri"
    },
    "category of <ips fmri>": {
      "key": "category of <ips fmri>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "category",
      "pluralPhrase": "categories",
      "directObjectType": "ips fmri"
    },
    "build version of <ips fmri>": {
      "key": "build version of <ips fmri>",
      "type": "property",
      "resultType": "ips build version",
      "singularPhrase": "build version",
      "pluralPhrase": "build versions",
      "directObjectType": "ips fmri"
    },
    "branch version of <ips fmri>": {
      "key": "branch version of <ips fmri>",
      "type": "property",
      "resultType": "ips branch version",
      "singularPhrase": "branch version",
      "pluralPhrase": "branch versions",
      "directObjectType": "ips fmri"
    },
    "<string> = <ips fmri>": {
      "key": "<string> = <ips fmri>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "ips fmri"
    },
    "<string> <= <ips fmri>": {
      "key": "<string> <= <ips fmri>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "ips fmri"
    },
    "<string> < <ips fmri>": {
      "key": "<string> < <ips fmri>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "ips fmri"
    },
    "<ips fmri> = <string>": {
      "key": "<ips fmri> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips fmri",
      "op": "=",
      "rightType": "string"
    },
    "<ips fmri> <= <string>": {
      "key": "<ips fmri> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips fmri",
      "op": "<=",
      "rightType": "string"
    },
    "<ips fmri> < <string>": {
      "key": "<ips fmri> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips fmri",
      "op": "<",
      "rightType": "string"
    },
    "<string> = <ips component version>": {
      "key": "<string> = <ips component version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "ips component version"
    },
    "<string> <= <ips component version>": {
      "key": "<string> <= <ips component version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "ips component version"
    },
    "<string> < <ips component version>": {
      "key": "<string> < <ips component version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "ips component version"
    },
    "<ips component version> as string": {
      "key": "<ips component version> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ips component version",
      "phrase": "string"
    },
    "<ips component version> = <string>": {
      "key": "<ips component version> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips component version",
      "op": "=",
      "rightType": "string"
    },
    "<ips component version> <= <string>": {
      "key": "<ips component version> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips component version",
      "op": "<=",
      "rightType": "string"
    },
    "<ips component version> < <string>": {
      "key": "<ips component version> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips component version",
      "op": "<",
      "rightType": "string"
    },
    "<string> = <ips build version>": {
      "key": "<string> = <ips build version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "ips build version"
    },
    "<string> <= <ips build version>": {
      "key": "<string> <= <ips build version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "ips build version"
    },
    "<string> < <ips build version>": {
      "key": "<string> < <ips build version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "ips build version"
    },
    "<ips build version> as string": {
      "key": "<ips build version> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ips build version",
      "phrase": "string"
    },
    "<ips build version> = <string>": {
      "key": "<ips build version> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips build version",
      "op": "=",
      "rightType": "string"
    },
    "<ips build version> <= <string>": {
      "key": "<ips build version> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips build version",
      "op": "<=",
      "rightType": "string"
    },
    "<ips build version> < <string>": {
      "key": "<ips build version> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips build version",
      "op": "<",
      "rightType": "string"
    },
    "<string> = <ips branch version>": {
      "key": "<string> = <ips branch version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "=",
      "rightType": "ips branch version"
    },
    "<string> <= <ips branch version>": {
      "key": "<string> <= <ips branch version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<=",
      "rightType": "ips branch version"
    },
    "<string> < <ips branch version>": {
      "key": "<string> < <ips branch version>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "string",
      "op": "<",
      "rightType": "ips branch version"
    },
    "<ips branch version> as string": {
      "key": "<ips branch version> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ips branch version",
      "phrase": "string"
    },
    "<ips branch version> = <string>": {
      "key": "<ips branch version> = <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips branch version",
      "op": "=",
      "rightType": "string"
    },
    "<ips branch version> <= <string>": {
      "key": "<ips branch version> <= <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips branch version",
      "op": "<=",
      "rightType": "string"
    },
    "<ips branch version> < <string>": {
      "key": "<ips branch version> < <string>",
      "type": "binaryOp",
      "resultType": "boolean",
      "leftType": "ips branch version",
      "op": "<",
      "rightType": "string"
    },
    "uuid of <ips authority info>": {
      "key": "uuid of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "uuid",
      "pluralPhrase": "uuids",
      "directObjectType": "ips authority info"
    },
    "sticky of <ips authority info>": {
      "key": "sticky of <ips authority info>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "sticky",
      "pluralPhrase": "stickies",
      "directObjectType": "ips authority info"
    },
    "ssl key of <ips authority info>": {
      "key": "ssl key of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "ssl key",
      "pluralPhrase": "ssl keys",
      "directObjectType": "ips authority info"
    },
    "ssl cert of <ips authority info>": {
      "key": "ssl cert of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "ssl cert",
      "pluralPhrase": "ssl certs",
      "directObjectType": "ips authority info"
    },
    "signing ca certs of <ips authority info>": {
      "key": "signing ca certs of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "signing ca certs",
      "pluralPhrase": "signing ca certses",
      "directObjectType": "ips authority info"
    },
    "signature required names of <ips authority info>": {
      "key": "signature required names of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "signature required names",
      "pluralPhrase": "signature required nameses",
      "directObjectType": "ips authority info"
    },
    "revoked ca certs of <ips authority info>": {
      "key": "revoked ca certs of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "revoked ca certs",
      "pluralPhrase": "revoked ca certses",
      "directObjectType": "ips authority info"
    },
    "repo sort policy of <ips authority info>": {
      "key": "repo sort policy of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "repo sort policy",
      "pluralPhrase": "repo sort policies",
      "directObjectType": "ips authority info"
    },
    "repo related uris of <ips authority info>": {
      "key": "repo related uris of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "repo related uris",
      "pluralPhrase": "repo related urises",
      "directObjectType": "ips authority info"
    },
    "repo registration uri of <ips authority info>": {
      "key": "repo registration uri of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "repo registration uri",
      "pluralPhrase": "repo registration uris",
      "directObjectType": "ips authority info"
    },
    "repo registered of <ips authority info>": {
      "key": "repo registered of <ips authority info>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "repo registered",
      "pluralPhrase": "repo registereds",
      "directObjectType": "ips authority info"
    },
    "repo refresh seconds of <ips authority info>": {
      "key": "repo refresh seconds of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "repo refresh seconds",
      "pluralPhrase": "repo refresh secondses",
      "directObjectType": "ips authority info"
    },
    "repo name of <ips authority info>": {
      "key": "repo name of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "repo name",
      "pluralPhrase": "repo names",
      "directObjectType": "ips authority info"
    },
    "repo legal uris of <ips authority info>": {
      "key": "repo legal uris of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "repo legal uris",
      "pluralPhrase": "repo legal urises",
      "directObjectType": "ips authority info"
    },
    "repo description of <ips authority info>": {
      "key": "repo description of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "repo description",
      "pluralPhrase": "repo descriptions",
      "directObjectType": "ips authority info"
    },
    "repo collection type of <ips authority info>": {
      "key": "repo collection type of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "repo collection type",
      "pluralPhrase": "repo collection types",
      "directObjectType": "ips authority info"
    },
    "proxied urls of <ips authority info>": {
      "key": "proxied urls of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "proxied urls",
      "pluralPhrase": "proxied urlses",
      "directObjectType": "ips authority info"
    },
    "prefix of <ips authority info>": {
      "key": "prefix of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "prefix",
      "pluralPhrase": "prefixs",
      "directObjectType": "ips authority info"
    },
    "origin of <ips authority info>": {
      "key": "origin of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "origin",
      "pluralPhrase": "origins",
      "directObjectType": "ips authority info"
    },
    "name of <ips authority info>": {
      "key": "name of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "name",
      "pluralPhrase": "names",
      "directObjectType": "ips authority info"
    },
    "mirrors of <ips authority info>": {
      "key": "mirrors of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "mirrors",
      "pluralPhrase": "mirrorses",
      "directObjectType": "ips authority info"
    },
    "intermediate certs of <ips authority info>": {
      "key": "intermediate certs of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "intermediate certs",
      "pluralPhrase": "intermediate certss",
      "directObjectType": "ips authority info"
    },
    "disabled of <ips authority info>": {
      "key": "disabled of <ips authority info>",
      "type": "property",
      "resultType": "boolean",
      "singularPhrase": "disabled",
      "pluralPhrase": "disableds",
      "directObjectType": "ips authority info"
    },
    "approved ca cert of <ips authority info>": {
      "key": "approved ca cert of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "approved ca cert",
      "pluralPhrase": "approved ca certs",
      "directObjectType": "ips authority info"
    },
    "alias of <ips authority info>": {
      "key": "alias of <ips authority info>",
      "type": "property",
      "resultType": "string",
      "singularPhrase": "alias",
      "pluralPhrase": "aliases",
      "directObjectType": "ips authority info"
    },
    "<ips authority info> as string": {
      "key": "<ips authority info> as string",
      "type": "cast",
      "resultType": "string",
      "argType": "ips authority info",
      "phrase": "string"
    }
  }
}
